import { default as React } from 'react';
/**
 * Timeline utility functions for managing timeline functionality
 */
/**
 * Safely extracts searchable text from potentially complex React node content
 * Recursively processes React nodes into plain text for search operations
 * @param content - React node (string, array, or component) to extract text from
 * @returns Plain text string suitable for searching
 */
export declare const getSearchableText: (content: React.ReactNode) => string;
/**
 * Pauses video embeds (primarily YouTube) within an element
 * @param element - HTML element containing video iframes to pause
 */
export declare const pauseVideoEmbeds: (element: HTMLElement | null) => void;
/**
 * Toggles visibility of media elements (images and videos) within an element
 * @param element - HTML element containing media elements
 * @param isVisible - Whether media elements should be visible
 */
export declare const toggleMediaVisibility: (element: HTMLElement | null, isVisible: boolean) => void;
/**
 * Finds a timeline item element by its ID in either the main timeline or portal
 * @param itemId - ID of the timeline item to find
 * @param timelineMode - Current timeline mode (HORIZONTAL, VERTICAL, etc.)
 * @param portalId - ID of the portal container for horizontal timeline modes
 * @returns HTML element of the timeline item or null if not found
 */
export declare const findTimelineElement: (itemId: string, timelineMode: string, portalId: string) => HTMLElement | null;
//# sourceMappingURL=timelineUtils.d.ts.map