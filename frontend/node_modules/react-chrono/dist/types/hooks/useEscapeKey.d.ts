interface UseKeyHandlerOptions {
    enabled?: boolean;
    keys?: string | string[];
    keyCodes?: number | number[];
    eventType?: 'keyup' | 'keydown' | 'keypress';
    preventDefault?: boolean;
    stopPropagation?: boolean;
    metaKey?: boolean;
    ctrlKey?: boolean;
    altKey?: boolean;
    shiftKey?: boolean;
}
/**
 * Hook that triggers callback on specific key press(es)
 * Supports multiple keys and key combinations
 * @param callback - Function to call when key(s) are pressed
 * @param options - Configuration options
 */
export declare function useKeyHandler(callback: (event: KeyboardEvent) => void, options?: UseKeyHandlerOptions): void;
/**
 * Legacy hook for backward compatibility
 * @deprecated Use useKeyHandler instead
 */
export default function useEscapeKey(callback: () => void, options?: UseKeyHandlerOptions): void;
export {};
//# sourceMappingURL=useEscapeKey.d.ts.map