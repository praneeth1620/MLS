interface UseTimelineNavigationProps {
    items: any[];
    mode: string;
    timelineId: string;
    hasFocus: boolean;
    flipLayout?: boolean;
    slideShowRunning?: boolean;
    isKeyboardNavigation?: boolean;
    onTimelineUpdated?: (index: number) => void;
    onNext?: () => void;
    onPrevious?: () => void;
    onFirst?: () => void;
    onLast?: () => void;
}
export declare const useTimelineNavigation: ({ items, mode, timelineId, hasFocus, flipLayout, slideShowRunning, isKeyboardNavigation, onTimelineUpdated, onNext, onPrevious, onFirst, onLast, }: UseTimelineNavigationProps) => {
    activeItemIndex: import('react').RefObject<number>;
    handleTimelineItemClick: (itemId?: string, isSlideShow?: boolean) => void;
    handleTimelineItemElapsed: (itemId?: string) => void;
    handleNext: () => void;
    handlePrevious: () => void;
    handleFirst: () => void;
    handleLast: () => void;
    handleKeySelection: (event: React.KeyboardEvent<HTMLDivElement>) => void;
    syncActiveItemIndex: (newIndex: number) => void;
};
export {};
//# sourceMappingURL=useTimelineNavigation.d.ts.map