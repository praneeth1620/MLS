import { Scroll } from '../models/TimelineHorizontalModel';
interface UseTimelineScrollProps {
    mode: string;
    onScrollEnd?: () => void;
    setNewOffset: (element: HTMLDivElement, scroll: Partial<Scroll>) => void;
    scrollEndThrottleMs?: number;
    onNextItem?: () => void;
    onPreviousItem?: () => void;
    activeItemIndex?: React.MutableRefObject<number>;
    totalItems?: number;
    isKeyboardNavigation?: boolean;
}
export declare const useTimelineScroll: ({ mode, onScrollEnd, setNewOffset, scrollEndThrottleMs, onNextItem, onPreviousItem, activeItemIndex, totalItems, isKeyboardNavigation, }: UseTimelineScrollProps) => {
    timelineMainRef: import('react').RefObject<HTMLDivElement>;
    horizontalContentRef: import('react').RefObject<HTMLDivElement | null>;
    handleScroll: (scroll: Partial<Scroll>) => void;
    handleMainScroll: (ev: React.UIEvent<HTMLDivElement>) => void;
};
export {};
//# sourceMappingURL=useTimelineScroll.d.ts.map