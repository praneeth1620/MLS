import { FunctionComponent } from 'react';
import { TimelineProps as PropsModel, TextDensity, ButtonTexts as ModelButtonTexts } from '../models/TimelineModel';
export type LegacyContextProps = PropsModel & {
    isMobile?: boolean;
    toggleDarkMode?: () => void;
    updateHorizontalAllCards?: (state: boolean) => void;
    updateTextContentDensity?: (value: TextDensity) => void;
};
export type ContextProps = LegacyContextProps;
export type ButtonTexts = ModelButtonTexts;
export declare const GlobalContext: import('react').Context<LegacyContextProps>;
/**
 * Legacy GlobalContextProvider - wraps unified provider and exposes legacy API
 */
declare const GlobalContextProvider: FunctionComponent<ContextProps>;
/**
 * Legacy hook to access the global context
 * @deprecated Use useGlobalContext, useStableContext, or useDynamicContext from ./contexts/hooks
 */
export declare const useGlobalContextLegacy: () => LegacyContextProps;
export default GlobalContextProvider;
//# sourceMappingURL=GlobalContext.d.ts.map