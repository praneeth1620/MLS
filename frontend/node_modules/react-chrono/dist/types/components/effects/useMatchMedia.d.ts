/**
 * Configuration options for the useMatchMedia hook
 */
interface MatchMediaOptions {
    /** Callback function to execute when media query matches */
    onMatch?: () => void;
    /** Whether the hook is enabled */
    enabled?: boolean;
    /** Debounce delay in milliseconds */
    debounceDelay?: number;
}
/**
 * Custom hook that tracks if a media query matches and executes a callback on matches
 *
 * @param query - The media query string to match against
 * @param options - Configuration options
 * @returns Boolean indicating if the media query currently matches
 *
 * @example
 * ```tsx
 * const isMobile = useMatchMedia('(max-width: 768px)', {
 *   onMatch: () => console.log('Mobile view detected'),
 *   debounceDelay: 200
 * });
 * ```
 */
export declare const useMatchMedia: (query: string, { onMatch, enabled, debounceDelay }?: MatchMediaOptions) => boolean;
export {};
//# sourceMappingURL=useMatchMedia.d.ts.map