interface UseTimelineCardProps {
    active?: boolean;
    autoScroll?: (params: {
        pointOffset?: number;
        contentHeight?: number;
        contentOffset?: number;
    }) => void;
    slideShowRunning?: boolean;
    cardLess?: boolean;
    showAllCardsHorizontal?: boolean;
    id?: string;
    onClick?: (id?: string) => void;
    mode?: 'HORIZONTAL' | 'VERTICAL' | 'VERTICAL_ALTERNATING' | 'HORIZONTAL_ALL';
    position?: 'TOP' | 'BOTTOM';
    iconChild?: React.ReactNode;
}
export declare const useTimelineCard: ({ active, autoScroll, slideShowRunning, cardLess, showAllCardsHorizontal, id, onClick, mode, position, iconChild, }: UseTimelineCardProps) => {
    circleRef: import('react').RefObject<HTMLButtonElement | null>;
    wrapperRef: import('react').RefObject<HTMLDivElement | null>;
    contentRef: import('react').RefObject<HTMLDivElement | null>;
    handleClick: () => void;
    modeLower: string | undefined;
    containerClass: string;
    titleClass: string;
    circleClass: string;
    canShowTimelineContent: boolean | undefined;
};
export {};
//# sourceMappingURL=useTimelineCard.d.ts.map