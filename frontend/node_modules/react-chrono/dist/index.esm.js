import { jsx as f, jsxs as ee, Fragment as Se } from "react/jsx-runtime";
import Q, { useRef as P, useEffect as U, useMemo as T, useState as Y, useCallback as D, createContext as kn, useContext as zn, memo as ge, forwardRef as pt, startTransition as Sn, useReducer as An, useLayoutEffect as Ln, Component as In } from "react";
import kr from "react-dom";
function En(e) {
  const n = {
    // Core props remain the same
    items: e.items || [],
    mode: Bn(e.mode),
    children: e.children,
    theme: e.theme,
    activeItemIndex: e.activeItemIndex,
    allowDynamicUpdate: e.allowDynamicUpdate,
    id: e.uniqueId,
    onItemSelected: e.onItemSelected,
    onScrollEnd: e.onScrollEnd,
    onThemeChange: e.onThemeChange,
    onRestartSlideshow: e.onRestartSlideshow
  };
  return On(e) && (n.layout = {
    cardWidth: e.cardWidth,
    cardHeight: e.cardHeight,
    pointSize: e.timelinePointDimension,
    lineWidth: e.lineWidth,
    itemWidth: e.itemWidth,
    responsive: e.responsiveBreakPoint !== void 0 || e.enableBreakPoint !== void 0 ? {
      ...e.responsiveBreakPoint !== void 0 && {
        breakpoint: e.responsiveBreakPoint
      },
      ...e.enableBreakPoint !== void 0 && {
        enabled: e.enableBreakPoint
      }
    } : void 0,
    positioning: Ct(e.cardPositionHorizontal) !== void 0 || e.flipLayout !== void 0 ? {
      ...Ct(e.cardPositionHorizontal) !== void 0 && {
        cardPosition: Ct(
          e.cardPositionHorizontal
        )
      },
      ...e.flipLayout !== void 0 && {
        flipLayout: e.flipLayout
      }
    } : void 0,
    timelineHeight: e.timelineHeight
  }), Mn(e) && (n.interaction = {
    ...e.disableNavOnKey === !0 && {
      keyboardNavigation: !1
    },
    ...e.disableClickOnCircle === !0 && { pointClick: !1 },
    ...e.disableAutoScrollOnClick === !0 && {
      autoScroll: !1
    },
    ...e.focusActiveItemOnLoad !== void 0 && {
      focusOnLoad: e.focusActiveItemOnLoad
    },
    ...e.highlightCardsOnHover !== void 0 && {
      cardHover: e.highlightCardsOnHover
    },
    ...e.disableInteraction !== void 0 && {
      disabled: e.disableInteraction
    }
  }), Dn(e) && (n.content = {
    allowHTML: e.parseDetailsAsHTML,
    readMore: e.useReadMore,
    textOverlay: e.textOverlay,
    dateFormat: e.titleDateFormat,
    compactText: e.textDensity === "HIGH",
    semanticTags: e.semanticTags ? {
      ...e.semanticTags.cardTitle && {
        title: e.semanticTags.cardTitle
      },
      ...e.semanticTags.cardSubtitle && {
        subtitle: e.semanticTags.cardSubtitle
      }
    } : void 0
  }), Rn(e) && (n.display = {
    borderless: e.borderLessCards,
    cardsDisabled: e.cardLess,
    pointsDisabled: e.disableTimelinePoint,
    pointShape: e.timelinePointShape,
    allCardsVisible: e.showAllCardsHorizontal,
    toolbar: e.disableToolbar === !0 || e.toolbarPosition !== void 0 ? {
      ...e.disableToolbar === !0 && { enabled: !1 },
      ...e.toolbarPosition !== void 0 && {
        position: e.toolbarPosition
      }
    } : void 0,
    scrollable: e.scrollable
  }), Fn(e) && (n.media = {
    ...e.mediaHeight !== void 0 && {
      height: e.mediaHeight
    },
    ...e.mediaSettings?.align !== void 0 && {
      align: e.mediaSettings.align
    },
    ...e.mediaSettings?.fit !== void 0 && {
      fit: e.mediaSettings.fit
    }
  }), $n(e) && (n.animation = {
    slideshow: {
      ...e.slideShow !== void 0 && {
        enabled: e.slideShow
      },
      ...e.slideItemDuration !== void 0 && {
        duration: e.slideItemDuration
      },
      ...e.slideShowType !== void 0 && {
        type: Vn(e.slideShowType)
      },
      ...e.showProgressOnSlideshow !== void 0 && {
        showProgress: e.showProgressOnSlideshow
      },
      ...e.showOverallSlideshowProgress !== void 0 && {
        showOverallProgress: e.showOverallSlideshowProgress
      }
    }
  }), qn(e) && (n.style = {
    ...e.classNames !== void 0 && {
      classNames: e.classNames
    },
    ...e.fontSizes !== void 0 && {
      fontSizes: e.fontSizes
    }
  }), Hn(e) && (n.accessibility = {
    ...e.buttonTexts !== void 0 && {
      buttonTexts: e.buttonTexts
    }
  }), (e.darkMode !== void 0 || e.enableDarkToggle !== void 0) && (n.darkMode = {
    ...e.darkMode !== void 0 && {
      enabled: e.darkMode
    },
    ...e.enableDarkToggle !== void 0 && {
      showToggle: e.enableDarkToggle
    }
  }), n;
}
function Nn(e) {
  const n = [];
  e.timelinePointDimension !== void 0 && n.push(
    "timelinePointDimension is deprecated. Use layout.pointSize instead."
  ), e.cardPositionHorizontal !== void 0 && n.push(
    "cardPositionHorizontal is deprecated. Use layout.positioning.cardPosition instead."
  ), e.disableNavOnKey !== void 0 && n.push(
    "disableNavOnKey is deprecated. Use interaction.keyboardNavigation instead."
  ), e.disableClickOnCircle !== void 0 && n.push(
    "disableClickOnCircle is deprecated. Use interaction.pointClick instead."
  ), e.disableAutoScrollOnClick !== void 0 && n.push(
    "disableAutoScrollOnClick is deprecated. Use interaction.autoScroll instead."
  ), e.parseDetailsAsHTML !== void 0 && n.push(
    "parseDetailsAsHTML is deprecated. Use content.allowHTML instead."
  ), e.textDensity !== void 0 && n.push(
    "textDensity is deprecated. Use content.compactText instead."
  ), e.borderLessCards !== void 0 && n.push(
    "borderLessCards is deprecated. Use display.borderless instead."
  ), e.cardLess !== void 0 && n.push(
    "cardLess is deprecated. Use display.cardsDisabled instead."
  ), e.showAllCardsHorizontal !== void 0 && n.push(
    "showAllCardsHorizontal is deprecated. Use display.allCardsVisible instead."
  ), e.noUniqueId !== void 0 && n.push(
    "noUniqueId is deprecated and no longer needed. Use the id prop if you need custom IDs."
  ), e.isChild !== void 0 && n.push(
    "isChild is an internal prop and should not be used directly."
  ), process.env.NODE_ENV === "development" && n.length > 0 && console.warn(
    `React Chrono: Deprecated props detected. Please migrate to the new grouped prop structure:
` + n.map((r) => `  â€¢ ${r}`).join(`
`) + `

For migration guide, visit: https://github.com/prabhuignoto/react-chrono/blob/master/MIGRATION.md`
  );
}
function On(e) {
  return !!(e.cardWidth || e.cardHeight || e.timelinePointDimension || e.lineWidth || e.itemWidth || e.responsiveBreakPoint || e.enableBreakPoint || e.cardPositionHorizontal || e.flipLayout);
}
function Mn(e) {
  return e.disableNavOnKey !== void 0 || e.disableClickOnCircle !== void 0 || e.disableAutoScrollOnClick !== void 0 || e.focusActiveItemOnLoad !== void 0 || e.highlightCardsOnHover !== void 0 || e.disableInteraction !== void 0;
}
function Dn(e) {
  return !!(e.parseDetailsAsHTML !== void 0 || e.useReadMore !== void 0 || e.textOverlay !== void 0 || e.titleDateFormat || e.textDensity || e.semanticTags);
}
function Rn(e) {
  return !!(e.borderLessCards !== void 0 || e.cardLess !== void 0 || e.disableTimelinePoint !== void 0 || e.timelinePointShape || e.showAllCardsHorizontal !== void 0 || e.disableToolbar !== void 0 || e.toolbarPosition || e.scrollable !== void 0);
}
function Fn(e) {
  return !!(e.mediaHeight || e.mediaSettings);
}
function $n(e) {
  return !!(e.slideShow !== void 0 || e.slideItemDuration || e.slideShowType || e.showProgressOnSlideshow !== void 0 || e.showOverallSlideshowProgress !== void 0);
}
function qn(e) {
  return !!(e.classNames || e.fontSizes);
}
function Hn(e) {
  return !!e.buttonTexts;
}
function Bn(e) {
  switch (e) {
    case "VERTICAL":
      return "vertical";
    case "HORIZONTAL":
      return "horizontal";
    case "VERTICAL_ALTERNATING":
      return "alternating";
    case "HORIZONTAL_ALL":
      return "horizontal-all";
    default:
      return "alternating";
  }
}
function Ct(e) {
  switch (e) {
    case "TOP":
      return "top";
    case "BOTTOM":
      return "bottom";
    default:
      return;
  }
}
function Vn(e) {
  switch (e) {
    case "slide_in":
    case "slide_from_sides":
      return "slide";
    case "reveal":
      return "reveal";
    default:
      return "fade";
  }
}
function $t(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var ut = { exports: {} }, le = {}, dt = { exports: {} }, Fe = {}, Kt;
function zr() {
  if (Kt) return Fe;
  Kt = 1;
  function e() {
    var t = {};
    return t["align-content"] = !1, t["align-items"] = !1, t["align-self"] = !1, t["alignment-adjust"] = !1, t["alignment-baseline"] = !1, t.all = !1, t["anchor-point"] = !1, t.animation = !1, t["animation-delay"] = !1, t["animation-direction"] = !1, t["animation-duration"] = !1, t["animation-fill-mode"] = !1, t["animation-iteration-count"] = !1, t["animation-name"] = !1, t["animation-play-state"] = !1, t["animation-timing-function"] = !1, t.azimuth = !1, t["backface-visibility"] = !1, t.background = !0, t["background-attachment"] = !0, t["background-clip"] = !0, t["background-color"] = !0, t["background-image"] = !0, t["background-origin"] = !0, t["background-position"] = !0, t["background-repeat"] = !0, t["background-size"] = !0, t["baseline-shift"] = !1, t.binding = !1, t.bleed = !1, t["bookmark-label"] = !1, t["bookmark-level"] = !1, t["bookmark-state"] = !1, t.border = !0, t["border-bottom"] = !0, t["border-bottom-color"] = !0, t["border-bottom-left-radius"] = !0, t["border-bottom-right-radius"] = !0, t["border-bottom-style"] = !0, t["border-bottom-width"] = !0, t["border-collapse"] = !0, t["border-color"] = !0, t["border-image"] = !0, t["border-image-outset"] = !0, t["border-image-repeat"] = !0, t["border-image-slice"] = !0, t["border-image-source"] = !0, t["border-image-width"] = !0, t["border-left"] = !0, t["border-left-color"] = !0, t["border-left-style"] = !0, t["border-left-width"] = !0, t["border-radius"] = !0, t["border-right"] = !0, t["border-right-color"] = !0, t["border-right-style"] = !0, t["border-right-width"] = !0, t["border-spacing"] = !0, t["border-style"] = !0, t["border-top"] = !0, t["border-top-color"] = !0, t["border-top-left-radius"] = !0, t["border-top-right-radius"] = !0, t["border-top-style"] = !0, t["border-top-width"] = !0, t["border-width"] = !0, t.bottom = !1, t["box-decoration-break"] = !0, t["box-shadow"] = !0, t["box-sizing"] = !0, t["box-snap"] = !0, t["box-suppress"] = !0, t["break-after"] = !0, t["break-before"] = !0, t["break-inside"] = !0, t["caption-side"] = !1, t.chains = !1, t.clear = !0, t.clip = !1, t["clip-path"] = !1, t["clip-rule"] = !1, t.color = !0, t["color-interpolation-filters"] = !0, t["column-count"] = !1, t["column-fill"] = !1, t["column-gap"] = !1, t["column-rule"] = !1, t["column-rule-color"] = !1, t["column-rule-style"] = !1, t["column-rule-width"] = !1, t["column-span"] = !1, t["column-width"] = !1, t.columns = !1, t.contain = !1, t.content = !1, t["counter-increment"] = !1, t["counter-reset"] = !1, t["counter-set"] = !1, t.crop = !1, t.cue = !1, t["cue-after"] = !1, t["cue-before"] = !1, t.cursor = !1, t.direction = !1, t.display = !0, t["display-inside"] = !0, t["display-list"] = !0, t["display-outside"] = !0, t["dominant-baseline"] = !1, t.elevation = !1, t["empty-cells"] = !1, t.filter = !1, t.flex = !1, t["flex-basis"] = !1, t["flex-direction"] = !1, t["flex-flow"] = !1, t["flex-grow"] = !1, t["flex-shrink"] = !1, t["flex-wrap"] = !1, t.float = !1, t["float-offset"] = !1, t["flood-color"] = !1, t["flood-opacity"] = !1, t["flow-from"] = !1, t["flow-into"] = !1, t.font = !0, t["font-family"] = !0, t["font-feature-settings"] = !0, t["font-kerning"] = !0, t["font-language-override"] = !0, t["font-size"] = !0, t["font-size-adjust"] = !0, t["font-stretch"] = !0, t["font-style"] = !0, t["font-synthesis"] = !0, t["font-variant"] = !0, t["font-variant-alternates"] = !0, t["font-variant-caps"] = !0, t["font-variant-east-asian"] = !0, t["font-variant-ligatures"] = !0, t["font-variant-numeric"] = !0, t["font-variant-position"] = !0, t["font-weight"] = !0, t.grid = !1, t["grid-area"] = !1, t["grid-auto-columns"] = !1, t["grid-auto-flow"] = !1, t["grid-auto-rows"] = !1, t["grid-column"] = !1, t["grid-column-end"] = !1, t["grid-column-start"] = !1, t["grid-row"] = !1, t["grid-row-end"] = !1, t["grid-row-start"] = !1, t["grid-template"] = !1, t["grid-template-areas"] = !1, t["grid-template-columns"] = !1, t["grid-template-rows"] = !1, t["hanging-punctuation"] = !1, t.height = !0, t.hyphens = !1, t.icon = !1, t["image-orientation"] = !1, t["image-resolution"] = !1, t["ime-mode"] = !1, t["initial-letters"] = !1, t["inline-box-align"] = !1, t["justify-content"] = !1, t["justify-items"] = !1, t["justify-self"] = !1, t.left = !1, t["letter-spacing"] = !0, t["lighting-color"] = !0, t["line-box-contain"] = !1, t["line-break"] = !1, t["line-grid"] = !1, t["line-height"] = !1, t["line-snap"] = !1, t["line-stacking"] = !1, t["line-stacking-ruby"] = !1, t["line-stacking-shift"] = !1, t["line-stacking-strategy"] = !1, t["list-style"] = !0, t["list-style-image"] = !0, t["list-style-position"] = !0, t["list-style-type"] = !0, t.margin = !0, t["margin-bottom"] = !0, t["margin-left"] = !0, t["margin-right"] = !0, t["margin-top"] = !0, t["marker-offset"] = !1, t["marker-side"] = !1, t.marks = !1, t.mask = !1, t["mask-box"] = !1, t["mask-box-outset"] = !1, t["mask-box-repeat"] = !1, t["mask-box-slice"] = !1, t["mask-box-source"] = !1, t["mask-box-width"] = !1, t["mask-clip"] = !1, t["mask-image"] = !1, t["mask-origin"] = !1, t["mask-position"] = !1, t["mask-repeat"] = !1, t["mask-size"] = !1, t["mask-source-type"] = !1, t["mask-type"] = !1, t["max-height"] = !0, t["max-lines"] = !1, t["max-width"] = !0, t["min-height"] = !0, t["min-width"] = !0, t["move-to"] = !1, t["nav-down"] = !1, t["nav-index"] = !1, t["nav-left"] = !1, t["nav-right"] = !1, t["nav-up"] = !1, t["object-fit"] = !1, t["object-position"] = !1, t.opacity = !1, t.order = !1, t.orphans = !1, t.outline = !1, t["outline-color"] = !1, t["outline-offset"] = !1, t["outline-style"] = !1, t["outline-width"] = !1, t.overflow = !1, t["overflow-wrap"] = !1, t["overflow-x"] = !1, t["overflow-y"] = !1, t.padding = !0, t["padding-bottom"] = !0, t["padding-left"] = !0, t["padding-right"] = !0, t["padding-top"] = !0, t.page = !1, t["page-break-after"] = !1, t["page-break-before"] = !1, t["page-break-inside"] = !1, t["page-policy"] = !1, t.pause = !1, t["pause-after"] = !1, t["pause-before"] = !1, t.perspective = !1, t["perspective-origin"] = !1, t.pitch = !1, t["pitch-range"] = !1, t["play-during"] = !1, t.position = !1, t["presentation-level"] = !1, t.quotes = !1, t["region-fragment"] = !1, t.resize = !1, t.rest = !1, t["rest-after"] = !1, t["rest-before"] = !1, t.richness = !1, t.right = !1, t.rotation = !1, t["rotation-point"] = !1, t["ruby-align"] = !1, t["ruby-merge"] = !1, t["ruby-position"] = !1, t["shape-image-threshold"] = !1, t["shape-outside"] = !1, t["shape-margin"] = !1, t.size = !1, t.speak = !1, t["speak-as"] = !1, t["speak-header"] = !1, t["speak-numeral"] = !1, t["speak-punctuation"] = !1, t["speech-rate"] = !1, t.stress = !1, t["string-set"] = !1, t["tab-size"] = !1, t["table-layout"] = !1, t["text-align"] = !0, t["text-align-last"] = !0, t["text-combine-upright"] = !0, t["text-decoration"] = !0, t["text-decoration-color"] = !0, t["text-decoration-line"] = !0, t["text-decoration-skip"] = !0, t["text-decoration-style"] = !0, t["text-emphasis"] = !0, t["text-emphasis-color"] = !0, t["text-emphasis-position"] = !0, t["text-emphasis-style"] = !0, t["text-height"] = !0, t["text-indent"] = !0, t["text-justify"] = !0, t["text-orientation"] = !0, t["text-overflow"] = !0, t["text-shadow"] = !0, t["text-space-collapse"] = !0, t["text-transform"] = !0, t["text-underline-position"] = !0, t["text-wrap"] = !0, t.top = !1, t.transform = !1, t["transform-origin"] = !1, t["transform-style"] = !1, t.transition = !1, t["transition-delay"] = !1, t["transition-duration"] = !1, t["transition-property"] = !1, t["transition-timing-function"] = !1, t["unicode-bidi"] = !1, t["vertical-align"] = !1, t.visibility = !1, t["voice-balance"] = !1, t["voice-duration"] = !1, t["voice-family"] = !1, t["voice-pitch"] = !1, t["voice-range"] = !1, t["voice-rate"] = !1, t["voice-stress"] = !1, t["voice-volume"] = !1, t.volume = !1, t["white-space"] = !1, t.widows = !1, t.width = !0, t["will-change"] = !1, t["word-break"] = !0, t["word-spacing"] = !0, t["word-wrap"] = !0, t["wrap-flow"] = !1, t["wrap-through"] = !1, t["writing-mode"] = !1, t["z-index"] = !1, t;
  }
  function n(t, o, l) {
  }
  function r(t, o, l) {
  }
  var i = /javascript\s*\:/img;
  function a(t, o) {
    return i.test(o) ? "" : o;
  }
  return Fe.whiteList = e(), Fe.getDefaultWhiteList = e, Fe.onAttr = n, Fe.onIgnoreAttr = r, Fe.safeAttrValue = a, Fe;
}
var Tt, Zt;
function Sr() {
  return Zt || (Zt = 1, Tt = {
    indexOf: function(e, n) {
      var r, i;
      if (Array.prototype.indexOf)
        return e.indexOf(n);
      for (r = 0, i = e.length; r < i; r++)
        if (e[r] === n)
          return r;
      return -1;
    },
    forEach: function(e, n, r) {
      var i, a;
      if (Array.prototype.forEach)
        return e.forEach(n, r);
      for (i = 0, a = e.length; i < a; i++)
        n.call(r, e[i], i, e);
    },
    trim: function(e) {
      return String.prototype.trim ? e.trim() : e.replace(/(^\s*)|(\s*$)/g, "");
    },
    trimRight: function(e) {
      return String.prototype.trimRight ? e.trimRight() : e.replace(/(\s*$)/g, "");
    }
  }), Tt;
}
var xt, Xt;
function Pn() {
  if (Xt) return xt;
  Xt = 1;
  var e = Sr();
  function n(r, i) {
    r = e.trimRight(r), r[r.length - 1] !== ";" && (r += ";");
    var a = r.length, t = !1, o = 0, l = 0, c = "";
    function m() {
      if (!t) {
        var u = e.trim(r.slice(o, l)), d = u.indexOf(":");
        if (d !== -1) {
          var h = e.trim(u.slice(0, d)), v = e.trim(u.slice(d + 1));
          if (h) {
            var y = i(o, c.length, h, v, u);
            y && (c += y + "; ");
          }
        }
      }
      o = l + 1;
    }
    for (; l < a; l++) {
      var g = r[l];
      if (g === "/" && r[l + 1] === "*") {
        var s = r.indexOf("*/", l + 2);
        if (s === -1) break;
        l = s + 1, o = l + 1, t = !1;
      } else g === "(" ? t = !0 : g === ")" ? t = !1 : g === ";" ? t || m() : g === `
` && m();
    }
    return e.trim(c);
  }
  return xt = n, xt;
}
var kt, Yt;
function Wn() {
  if (Yt) return kt;
  Yt = 1;
  var e = zr(), n = Pn();
  Sr();
  function r(t) {
    return t == null;
  }
  function i(t) {
    var o = {};
    for (var l in t)
      o[l] = t[l];
    return o;
  }
  function a(t) {
    t = i(t || {}), t.whiteList = t.whiteList || e.whiteList, t.onAttr = t.onAttr || e.onAttr, t.onIgnoreAttr = t.onIgnoreAttr || e.onIgnoreAttr, t.safeAttrValue = t.safeAttrValue || e.safeAttrValue, this.options = t;
  }
  return a.prototype.process = function(t) {
    if (t = t || "", t = t.toString(), !t) return "";
    var o = this, l = o.options, c = l.whiteList, m = l.onAttr, g = l.onIgnoreAttr, s = l.safeAttrValue, u = n(t, function(d, h, v, y, b) {
      var p = c[v], _ = !1;
      if (p === !0 ? _ = p : typeof p == "function" ? _ = p(y) : p instanceof RegExp && (_ = p.test(y)), _ !== !0 && (_ = !1), y = s(v, y), !!y) {
        var R = {
          position: h,
          sourcePosition: d,
          source: b,
          isWhite: _
        };
        if (_) {
          var M = m(v, y, R);
          return r(M) ? v + ":" + y : M;
        } else {
          var M = g(v, y, R);
          if (!r(M))
            return M;
        }
      }
    });
    return u;
  }, kt = a, kt;
}
var Jt;
function Nt() {
  return Jt || (Jt = 1, (function(e, n) {
    var r = zr(), i = Wn();
    function a(o, l) {
      var c = new i(l);
      return c.process(o);
    }
    n = e.exports = a, n.FilterCSS = i;
    for (var t in r) n[t] = r[t];
    typeof window < "u" && (window.filterCSS = e.exports);
  })(dt, dt.exports)), dt.exports;
}
var zt, Qt;
function qt() {
  return Qt || (Qt = 1, zt = {
    indexOf: function(e, n) {
      var r, i;
      if (Array.prototype.indexOf)
        return e.indexOf(n);
      for (r = 0, i = e.length; r < i; r++)
        if (e[r] === n)
          return r;
      return -1;
    },
    forEach: function(e, n, r) {
      var i, a;
      if (Array.prototype.forEach)
        return e.forEach(n, r);
      for (i = 0, a = e.length; i < a; i++)
        n.call(r, e[i], i, e);
    },
    trim: function(e) {
      return String.prototype.trim ? e.trim() : e.replace(/(^\s*)|(\s*$)/g, "");
    },
    spaceIndex: function(e) {
      var n = /\s|\n|\t/, r = n.exec(e);
      return r ? r.index : -1;
    }
  }), zt;
}
var er;
function Ar() {
  if (er) return le;
  er = 1;
  var e = Nt().FilterCSS, n = Nt().getDefaultWhiteList, r = qt();
  function i() {
    return {
      a: ["target", "href", "title"],
      abbr: ["title"],
      address: [],
      area: ["shape", "coords", "href", "alt"],
      article: [],
      aside: [],
      audio: [
        "autoplay",
        "controls",
        "crossorigin",
        "loop",
        "muted",
        "preload",
        "src"
      ],
      b: [],
      bdi: ["dir"],
      bdo: ["dir"],
      big: [],
      blockquote: ["cite"],
      br: [],
      caption: [],
      center: [],
      cite: [],
      code: [],
      col: ["align", "valign", "span", "width"],
      colgroup: ["align", "valign", "span", "width"],
      dd: [],
      del: ["datetime"],
      details: ["open"],
      div: [],
      dl: [],
      dt: [],
      em: [],
      figcaption: [],
      figure: [],
      font: ["color", "size", "face"],
      footer: [],
      h1: [],
      h2: [],
      h3: [],
      h4: [],
      h5: [],
      h6: [],
      header: [],
      hr: [],
      i: [],
      img: ["src", "alt", "title", "width", "height", "loading"],
      ins: ["datetime"],
      kbd: [],
      li: [],
      mark: [],
      nav: [],
      ol: [],
      p: [],
      pre: [],
      s: [],
      section: [],
      small: [],
      span: [],
      sub: [],
      summary: [],
      sup: [],
      strong: [],
      strike: [],
      table: ["width", "border", "align", "valign"],
      tbody: ["align", "valign"],
      td: ["width", "rowspan", "colspan", "align", "valign"],
      tfoot: ["align", "valign"],
      th: ["width", "rowspan", "colspan", "align", "valign"],
      thead: ["align", "valign"],
      tr: ["rowspan", "align", "valign"],
      tt: [],
      u: [],
      ul: [],
      video: [
        "autoplay",
        "controls",
        "crossorigin",
        "loop",
        "muted",
        "playsinline",
        "poster",
        "preload",
        "src",
        "height",
        "width"
      ]
    };
  }
  var a = new e();
  function t(w, z, C) {
  }
  function o(w, z, C) {
  }
  function l(w, z, C) {
  }
  function c(w, z, C) {
  }
  function m(w) {
    return w.replace(s, "&lt;").replace(u, "&gt;");
  }
  function g(w, z, C, N) {
    if (C = x(C), z === "href" || z === "src") {
      if (C = r.trim(C), C === "#") return "#";
      if (!(C.substr(0, 7) === "http://" || C.substr(0, 8) === "https://" || C.substr(0, 7) === "mailto:" || C.substr(0, 4) === "tel:" || C.substr(0, 11) === "data:image/" || C.substr(0, 6) === "ftp://" || C.substr(0, 2) === "./" || C.substr(0, 3) === "../" || C[0] === "#" || C[0] === "/"))
        return "";
    } else if (z === "background") {
      if (p.lastIndex = 0, p.test(C))
        return "";
    } else if (z === "style") {
      if (_.lastIndex = 0, _.test(C) || (R.lastIndex = 0, R.test(C) && (p.lastIndex = 0, p.test(C))))
        return "";
      N !== !1 && (N = N || a, C = N.process(C));
    }
    return C = L(C), C;
  }
  var s = /</g, u = />/g, d = /"/g, h = /&quot;/g, v = /&#([a-zA-Z0-9]*);?/gim, y = /&colon;?/gim, b = /&newline;?/gim, p = /((j\s*a\s*v\s*a|v\s*b|l\s*i\s*v\s*e)\s*s\s*c\s*r\s*i\s*p\s*t\s*|m\s*o\s*c\s*h\s*a):/gi, _ = /e\s*x\s*p\s*r\s*e\s*s\s*s\s*i\s*o\s*n\s*\(.*/gi, R = /u\s*r\s*l\s*\(.*/gi;
  function M(w) {
    return w.replace(d, "&quot;");
  }
  function S(w) {
    return w.replace(h, '"');
  }
  function A(w) {
    return w.replace(v, function(C, N) {
      return N[0] === "x" || N[0] === "X" ? String.fromCharCode(parseInt(N.substr(1), 16)) : String.fromCharCode(parseInt(N, 10));
    });
  }
  function q(w) {
    return w.replace(y, ":").replace(b, " ");
  }
  function k(w) {
    for (var z = "", C = 0, N = w.length; C < N; C++)
      z += w.charCodeAt(C) < 32 ? " " : w.charAt(C);
    return r.trim(z);
  }
  function x(w) {
    return w = S(w), w = A(w), w = q(w), w = k(w), w;
  }
  function L(w) {
    return w = M(w), w = m(w), w;
  }
  function $() {
    return "";
  }
  function W(w, z) {
    typeof z != "function" && (z = function() {
    });
    var C = !Array.isArray(w);
    function N(I) {
      return C ? !0 : r.indexOf(w, I) !== -1;
    }
    var B = [], j = !1;
    return {
      onIgnoreTag: function(I, V, H) {
        if (N(I))
          if (H.isClosing) {
            var G = "[/removed]", te = H.position + G.length;
            return B.push([
              j !== !1 ? j : H.position,
              te
            ]), j = !1, G;
          } else
            return j || (j = H.position), "[removed]";
        else
          return z(I, V, H);
      },
      remove: function(I) {
        var V = "", H = 0;
        return r.forEach(B, function(G) {
          V += I.slice(H, G[0]), H = G[1];
        }), V += I.slice(H), V;
      }
    };
  }
  function O(w) {
    for (var z = "", C = 0; C < w.length; ) {
      var N = w.indexOf("<!--", C);
      if (N === -1) {
        z += w.slice(C);
        break;
      }
      z += w.slice(C, N);
      var B = w.indexOf("-->", N);
      if (B === -1)
        break;
      C = B + 3;
    }
    return z;
  }
  function E(w) {
    var z = w.split("");
    return z = z.filter(function(C) {
      var N = C.charCodeAt(0);
      return N === 127 ? !1 : N <= 31 ? N === 10 || N === 13 : !0;
    }), z.join("");
  }
  return le.whiteList = i(), le.getDefaultWhiteList = i, le.onTag = t, le.onIgnoreTag = o, le.onTagAttr = l, le.onIgnoreTagAttr = c, le.safeAttrValue = g, le.escapeHtml = m, le.escapeQuote = M, le.unescapeQuote = S, le.escapeHtmlEntities = A, le.escapeDangerHtml5Entities = q, le.clearNonPrintableCharacter = k, le.friendlyAttrValue = x, le.escapeAttrValue = L, le.onIgnoreTagStripAll = $, le.StripTagBody = W, le.stripCommentTag = O, le.stripBlankChar = E, le.attributeWrapSign = '"', le.cssFilter = a, le.getDefaultCSSWhiteList = n, le;
}
var ft = {}, tr;
function Lr() {
  if (tr) return ft;
  tr = 1;
  var e = qt();
  function n(s) {
    var u = e.spaceIndex(s), d;
    return u === -1 ? d = s.slice(1, -1) : d = s.slice(1, u + 1), d = e.trim(d).toLowerCase(), d.slice(0, 1) === "/" && (d = d.slice(1)), d.slice(-1) === "/" && (d = d.slice(0, -1)), d;
  }
  function r(s) {
    return s.slice(0, 2) === "</";
  }
  function i(s, u, d) {
    var h = "", v = 0, y = !1, b = !1, p = 0, _ = s.length, R = "", M = "";
    e: for (p = 0; p < _; p++) {
      var S = s.charAt(p);
      if (y === !1) {
        if (S === "<") {
          y = p;
          continue;
        }
      } else if (b === !1) {
        if (S === "<") {
          h += d(s.slice(v, p)), y = p, v = p;
          continue;
        }
        if (S === ">" || p === _ - 1) {
          h += d(s.slice(v, y)), M = s.slice(y, p + 1), R = n(M), h += u(
            y,
            h.length,
            R,
            M,
            r(M)
          ), v = p + 1, y = !1;
          continue;
        }
        if (S === '"' || S === "'")
          for (var A = 1, q = s.charAt(p - A); q.trim() === "" || q === "="; ) {
            if (q === "=") {
              b = S;
              continue e;
            }
            q = s.charAt(p - ++A);
          }
      } else if (S === b) {
        b = !1;
        continue;
      }
    }
    return v < _ && (h += d(s.substr(v))), h;
  }
  var a = /[^a-zA-Z0-9\\_:.-]/gim;
  function t(s, u) {
    var d = 0, h = 0, v = [], y = !1, b = s.length;
    function p(A, q) {
      if (A = e.trim(A), A = A.replace(a, "").toLowerCase(), !(A.length < 1)) {
        var k = u(A, q || "");
        k && v.push(k);
      }
    }
    for (var _ = 0; _ < b; _++) {
      var R = s.charAt(_), M, S;
      if (y === !1 && R === "=") {
        y = s.slice(d, _), d = _ + 1, h = s.charAt(d) === '"' || s.charAt(d) === "'" ? d : l(s, _ + 1);
        continue;
      }
      if (y !== !1 && _ === h) {
        if (S = s.indexOf(R, _ + 1), S === -1)
          break;
        M = e.trim(s.slice(h + 1, S)), p(y, M), y = !1, _ = S, d = _ + 1;
        continue;
      }
      if (/\s|\n|\t/.test(R))
        if (s = s.replace(/\s|\n|\t/g, " "), y === !1)
          if (S = o(s, _), S === -1) {
            M = e.trim(s.slice(d, _)), p(M), y = !1, d = _ + 1;
            continue;
          } else {
            _ = S - 1;
            continue;
          }
        else if (S = c(s, _ - 1), S === -1) {
          M = e.trim(s.slice(d, _)), M = g(M), p(y, M), y = !1, d = _ + 1;
          continue;
        } else
          continue;
    }
    return d < s.length && (y === !1 ? p(s.slice(d)) : p(y, g(e.trim(s.slice(d))))), e.trim(v.join(" "));
  }
  function o(s, u) {
    for (; u < s.length; u++) {
      var d = s[u];
      if (d !== " ")
        return d === "=" ? u : -1;
    }
  }
  function l(s, u) {
    for (; u < s.length; u++) {
      var d = s[u];
      if (d !== " ")
        return d === "'" || d === '"' ? u : -1;
    }
  }
  function c(s, u) {
    for (; u > 0; u--) {
      var d = s[u];
      if (d !== " ")
        return d === "=" ? u : -1;
    }
  }
  function m(s) {
    return s[0] === '"' && s[s.length - 1] === '"' || s[0] === "'" && s[s.length - 1] === "'";
  }
  function g(s) {
    return m(s) ? s.substr(1, s.length - 2) : s;
  }
  return ft.parseTag = i, ft.parseAttr = t, ft;
}
var St, rr;
function jn() {
  if (rr) return St;
  rr = 1;
  var e = Nt().FilterCSS, n = Ar(), r = Lr(), i = r.parseTag, a = r.parseAttr, t = qt();
  function o(s) {
    return s == null;
  }
  function l(s) {
    var u = t.spaceIndex(s);
    if (u === -1)
      return {
        html: "",
        closing: s[s.length - 2] === "/"
      };
    s = t.trim(s.slice(u + 1, -1));
    var d = s[s.length - 1] === "/";
    return d && (s = t.trim(s.slice(0, -1))), {
      html: s,
      closing: d
    };
  }
  function c(s) {
    var u = {};
    for (var d in s)
      u[d] = s[d];
    return u;
  }
  function m(s) {
    var u = {};
    for (var d in s)
      Array.isArray(s[d]) ? u[d.toLowerCase()] = s[d].map(function(h) {
        return h.toLowerCase();
      }) : u[d.toLowerCase()] = s[d];
    return u;
  }
  function g(s) {
    s = c(s || {}), s.stripIgnoreTag && (s.onIgnoreTag && console.error(
      'Notes: cannot use these two options "stripIgnoreTag" and "onIgnoreTag" at the same time'
    ), s.onIgnoreTag = n.onIgnoreTagStripAll), s.whiteList || s.allowList ? s.whiteList = m(s.whiteList || s.allowList) : s.whiteList = n.whiteList, this.attributeWrapSign = s.singleQuotedAttributeValue === !0 ? "'" : n.attributeWrapSign, s.onTag = s.onTag || n.onTag, s.onTagAttr = s.onTagAttr || n.onTagAttr, s.onIgnoreTag = s.onIgnoreTag || n.onIgnoreTag, s.onIgnoreTagAttr = s.onIgnoreTagAttr || n.onIgnoreTagAttr, s.safeAttrValue = s.safeAttrValue || n.safeAttrValue, s.escapeHtml = s.escapeHtml || n.escapeHtml, this.options = s, s.css === !1 ? this.cssFilter = !1 : (s.css = s.css || {}, this.cssFilter = new e(s.css));
  }
  return g.prototype.process = function(s) {
    if (s = s || "", s = s.toString(), !s) return "";
    var u = this, d = u.options, h = d.whiteList, v = d.onTag, y = d.onIgnoreTag, b = d.onTagAttr, p = d.onIgnoreTagAttr, _ = d.safeAttrValue, R = d.escapeHtml, M = u.attributeWrapSign, S = u.cssFilter;
    d.stripBlankChar && (s = n.stripBlankChar(s)), d.allowCommentTag || (s = n.stripCommentTag(s));
    var A = !1;
    d.stripIgnoreTagBody && (A = n.StripTagBody(
      d.stripIgnoreTagBody,
      y
    ), y = A.onIgnoreTag);
    var q = i(
      s,
      function(k, x, L, $, W) {
        var O = {
          sourcePosition: k,
          position: x,
          isClosing: W,
          isWhite: Object.prototype.hasOwnProperty.call(h, L)
        }, E = v(L, $, O);
        if (!o(E)) return E;
        if (O.isWhite) {
          if (O.isClosing)
            return "</" + L + ">";
          var w = l($), z = h[L], C = a(w.html, function(N, B) {
            var j = t.indexOf(z, N) !== -1, I = b(L, N, B, j);
            return o(I) ? j ? (B = _(L, N, B, S), B ? N + "=" + M + B + M : N) : (I = p(L, N, B, j), o(I) ? void 0 : I) : I;
          });
          return $ = "<" + L, C && ($ += " " + C), w.closing && ($ += " /"), $ += ">", $;
        } else
          return E = y(L, $, O), o(E) ? R($) : E;
      },
      R
    );
    return A && (q = A.remove(q)), q;
  }, St = g, St;
}
var nr;
function Gn() {
  return nr || (nr = 1, (function(e, n) {
    var r = Ar(), i = Lr(), a = jn();
    function t(l, c) {
      var m = new a(c);
      return m.process(l);
    }
    n = e.exports = t, n.filterXSS = t, n.FilterXSS = a, (function() {
      for (var l in r)
        n[l] = r[l];
      for (var c in i)
        n[c] = i[c];
    })(), typeof window < "u" && (window.filterXSS = e.exports);
    function o() {
      return typeof self < "u" && typeof DedicatedWorkerGlobalScope < "u" && self instanceof DedicatedWorkerGlobalScope;
    }
    o() && (self.filterXSS = e.exports);
  })(ut, ut.exports)), ut.exports;
}
var Un = Gn();
const Ot = /* @__PURE__ */ $t(Un), Ir = {
  cardBgColor: "#ffffff",
  cardDetailsBackGround: "#ffffff",
  cardDetailsColor: "#374151",
  cardMediaBgColor: "#f8fafc",
  cardSubtitleColor: "#6b7280",
  cardTitleColor: "#007FFF",
  detailsColor: "#374151",
  iconBackgroundColor: "#007FFF",
  nestedCardBgColor: "#f8fafc",
  nestedCardDetailsBackGround: "#f8fafc",
  nestedCardDetailsColor: "#374151",
  nestedCardSubtitleColor: "#6b7280",
  nestedCardTitleColor: "#1f2937",
  primary: "#007FFF",
  secondary: "#ffdf00",
  titleColor: "#007FFF",
  titleColorActive: "#007FFF",
  toolbarBgColor: "#f1f5f9",
  toolbarBtnBgColor: "#ffffff",
  toolbarTextColor: "#1e293b",
  timelineBgColor: "#ffffff",
  // Light mode styling
  iconColor: "#007FFF",
  buttonHoverBgColor: "#e2e8f0",
  buttonActiveBgColor: "#007FFF",
  buttonActiveIconColor: "#ffffff",
  buttonBorderColor: "#e2e8f0",
  buttonHoverBorderColor: "#007FFF",
  buttonActiveBorderColor: "#007FFF",
  shadowColor: "rgba(0, 0, 0, 0.1)",
  glowColor: "rgba(0, 127, 255, 0.2)",
  searchHighlightColor: "rgba(0, 127, 255, 0.2)",
  darkToggleActiveBgColor: "#007FFF",
  darkToggleActiveIconColor: "#ffffff",
  darkToggleActiveBorderColor: "#007FFF",
  darkToggleGlowColor: "rgba(0, 127, 255, 0.2)"
}, Kn = {
  cardBgColor: "#1f2937",
  cardDetailsBackGround: "#1f2937",
  cardDetailsColor: "#f3f4f6",
  cardMediaBgColor: "#111827",
  cardSubtitleColor: "#d1d5db",
  cardTitleColor: "#60a5fa",
  detailsColor: "#f3f4f6",
  iconBackgroundColor: "#3b82f6",
  nestedCardBgColor: "#111827",
  nestedCardDetailsBackGround: "#111827",
  nestedCardDetailsColor: "#f3f4f6",
  nestedCardSubtitleColor: "#d1d5db",
  nestedCardTitleColor: "#f9fafb",
  primary: "#3b82f6",
  secondary: "#fbbf24",
  titleColor: "#60a5fa",
  titleColorActive: "#60a5fa",
  toolbarBgColor: "#111827",
  toolbarBtnBgColor: "#374151",
  toolbarTextColor: "#f3f4f6",
  timelineBgColor: "#111827",
  // Dark mode styling - our enhanced colors as defaults
  iconColor: "#93c5fd",
  buttonHoverBgColor: "#4b5563",
  buttonActiveBgColor: "#fbbf24",
  buttonActiveIconColor: "#1f2937",
  buttonBorderColor: "rgba(255, 255, 255, 0.1)",
  buttonHoverBorderColor: "#3b82f6",
  buttonActiveBorderColor: "#3b82f6",
  shadowColor: "rgba(0, 0, 0, 0.4)",
  glowColor: "rgba(59, 130, 246, 0.4)",
  searchHighlightColor: "rgba(96, 165, 250, 0.4)",
  darkToggleActiveBgColor: "#1e40af",
  darkToggleActiveIconColor: "#e2e8f0",
  darkToggleActiveBorderColor: "#3b82f6",
  darkToggleGlowColor: "rgba(59, 130, 246, 0.4)"
}, Zn = Object.freeze({
  card: "rc-card",
  cardMedia: "rc-card-media",
  cardSubTitle: "rc-card-subtitle",
  cardText: "rc-card-text",
  cardTitle: "rc-card-title",
  controls: "rc-controls",
  title: "rc-title"
}), Xn = Object.freeze({
  changeDensity: "Change density",
  changeDensityOptions: Object.freeze({
    high: Object.freeze({
      helpText: "Show more items at once",
      text: "High"
    }),
    low: Object.freeze({
      helpText: "Show fewer items at once",
      text: "Low"
    })
  }),
  changeLayout: "Change layout",
  changeLayoutOptions: Object.freeze({
    alternating: Object.freeze({
      helpText: "Show cards in a vertical layout with alternating fashion",
      text: "Alternating"
    }),
    horizontal: Object.freeze({
      helpText: "Show cards in a horizontal layout",
      text: "Horizontal"
    }),
    horizontal_all: Object.freeze({
      helpText: "Show all cards in a horizontal layout",
      text: "Show all cards"
    }),
    vertical: Object.freeze({
      helpText: "Show cards in a vertical layout",
      text: "Vertical"
    })
  }),
  dark: "Switch to Dark Mode",
  first: "Go to First",
  jumpTo: "Jump to",
  last: "Go to Last",
  light: "Switch to Light Mode",
  next: "Next",
  play: "Play Slideshow",
  previous: "Previous",
  stop: "Stop Slideshow",
  searchPlaceholder: "Search Timeline",
  searchAriaLabel: "Search timeline content",
  clearSearch: "Clear Search",
  previousMatch: "Previous Match",
  nextMatch: "Next Match",
  timelinePoint: "Timeline point"
}), Yn = /^#([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$/, mt = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", Jn = 7, Ht = (e, n) => {
  if (typeof e != "string" || typeof n != "number")
    return `rgba(0, 0, 0, ${Math.max(0, Math.min(1, n || 0))})`;
  if (!Yn.test(e))
    return console.warn("Invalid hex color provided:", e), `rgba(0, 0, 0, ${Math.max(0, Math.min(1, n))})`;
  let r = e;
  e.length === 4 && (r = "#" + e[1] + e[1] + e[2] + e[2] + e[3] + e[3]);
  const i = parseInt(r.slice(1), 16), a = i >> 16 & 255, t = i >> 8 & 255, o = i & 255, l = Math.max(0, Math.min(1, n));
  return `rgba(${a}, ${t}, ${o}, ${l})`;
}, Qn = (e) => e ? Kn : Ir, ei = () => Zn, ti = () => Xn, ri = (e) => {
  switch (e) {
    case "VERTICAL_ALTERNATING":
      return "slide_from_sides";
    case "HORIZONTAL":
    case "VERTICAL":
    default:
      return "reveal";
  }
}, et = () => {
  if (typeof window < "u" && window.crypto?.getRandomValues)
    try {
      const a = new Uint8Array(Jn);
      return window.crypto.getRandomValues(a), Array.from(
        a,
        (t) => mt[t % mt.length]
      ).join("");
    } catch (a) {
      console.error("Error generating unique ID:", a);
    }
  const e = Date.now().toString(36), n = typeof performance < "u" && performance.now ? performance.now().toString().replace(".", "") : Date.now().toString(), r = parseInt(n.slice(-6), 10), i = Array.from({ length: 8 }, (a, t) => {
    const c = Math.pow(2, 32), m = (1664525 * (r + t) + 1013904223) % c;
    return mt[m % mt.length];
  }).join("");
  return `id-${e}-${i}`;
};
function ni(e) {
  return /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(e);
}
function ir(e) {
  try {
    return new URL(e), !0;
  } catch {
    return !1;
  }
}
function ii(e) {
  const n = [];
  !e.items || !Array.isArray(e.items) ? n.push({ path: ["items"], message: "Items must be an array" }) : e.items.length === 0 ? n.push({
    path: ["items"],
    message: "At least one timeline item is required"
  }) : e.items.forEach((t, o) => {
    t.url && typeof t.url == "string" && !ir(t.url) && n.push({
      path: ["items", o.toString(), "url"],
      message: "Invalid URL format"
    }), t.media?.source?.url && !ir(t.media.source.url) && n.push({
      path: ["items", o.toString(), "media", "source", "url"],
      message: "Invalid media URL format"
    });
  });
  const r = ["VERTICAL", "HORIZONTAL", "VERTICAL_ALTERNATING"];
  return e.mode && !r.includes(e.mode) && n.push({
    path: ["mode"],
    message: `Mode must be one of: ${r.join(", ")}`
  }), [
    "cardHeight",
    "cardWidth",
    "itemWidth",
    "lineWidth",
    "slideItemDuration",
    "activeItemIndex"
  ].forEach((t) => {
    const o = e[t];
    o !== void 0 && (typeof o != "number" || o < 0) && n.push({
      path: [t],
      message: `${t} must be a positive number`
    });
  }), e.theme && typeof e.theme == "object" && [
    "primary",
    "secondary",
    "cardBgColor",
    "cardForeColor",
    "titleColor",
    "titleColorActive"
  ].forEach((o) => {
    const l = e.theme[o];
    l && typeof l == "string" && !ni(l) && n.push({
      path: ["theme", o],
      message: `${o} must be a valid hex color (e.g., #ff0000 or #f00)`
    });
  }), [
    "slideShow",
    "flipLayout",
    "cardLess",
    "hideControls",
    "disableNavOnKey"
  ].forEach((t) => {
    const o = e[t];
    o !== void 0 && typeof o != "boolean" && n.push({ path: [t], message: `${t} must be a boolean` });
  }), n;
}
function ai(e) {
  const n = ii(e);
  return n.length === 0 ? { success: !0, data: e } : { success: !1, errors: n };
}
var ht = { exports: {} }, oi = ht.exports, ar;
function si() {
  return ar || (ar = 1, (function(e, n) {
    (function(r, i) {
      e.exports = i();
    })(oi, (function() {
      var r = 1e3, i = 6e4, a = 36e5, t = "millisecond", o = "second", l = "minute", c = "hour", m = "day", g = "week", s = "month", u = "quarter", d = "year", h = "date", v = "Invalid Date", y = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/, b = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g, p = { name: "en", weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"), ordinal: function(O) {
        var E = ["th", "st", "nd", "rd"], w = O % 100;
        return "[" + O + (E[(w - 20) % 10] || E[w] || E[0]) + "]";
      } }, _ = function(O, E, w) {
        var z = String(O);
        return !z || z.length >= E ? O : "" + Array(E + 1 - z.length).join(w) + O;
      }, R = { s: _, z: function(O) {
        var E = -O.utcOffset(), w = Math.abs(E), z = Math.floor(w / 60), C = w % 60;
        return (E <= 0 ? "+" : "-") + _(z, 2, "0") + ":" + _(C, 2, "0");
      }, m: function O(E, w) {
        if (E.date() < w.date()) return -O(w, E);
        var z = 12 * (w.year() - E.year()) + (w.month() - E.month()), C = E.clone().add(z, s), N = w - C < 0, B = E.clone().add(z + (N ? -1 : 1), s);
        return +(-(z + (w - C) / (N ? C - B : B - C)) || 0);
      }, a: function(O) {
        return O < 0 ? Math.ceil(O) || 0 : Math.floor(O);
      }, p: function(O) {
        return { M: s, y: d, w: g, d: m, D: h, h: c, m: l, s: o, ms: t, Q: u }[O] || String(O || "").toLowerCase().replace(/s$/, "");
      }, u: function(O) {
        return O === void 0;
      } }, M = "en", S = {};
      S[M] = p;
      var A = "$isDayjsObject", q = function(O) {
        return O instanceof $ || !(!O || !O[A]);
      }, k = function O(E, w, z) {
        var C;
        if (!E) return M;
        if (typeof E == "string") {
          var N = E.toLowerCase();
          S[N] && (C = N), w && (S[N] = w, C = N);
          var B = E.split("-");
          if (!C && B.length > 1) return O(B[0]);
        } else {
          var j = E.name;
          S[j] = E, C = j;
        }
        return !z && C && (M = C), C || !z && M;
      }, x = function(O, E) {
        if (q(O)) return O.clone();
        var w = typeof E == "object" ? E : {};
        return w.date = O, w.args = arguments, new $(w);
      }, L = R;
      L.l = k, L.i = q, L.w = function(O, E) {
        return x(O, { locale: E.$L, utc: E.$u, x: E.$x, $offset: E.$offset });
      };
      var $ = (function() {
        function O(w) {
          this.$L = k(w.locale, null, !0), this.parse(w), this.$x = this.$x || w.x || {}, this[A] = !0;
        }
        var E = O.prototype;
        return E.parse = function(w) {
          this.$d = (function(z) {
            var C = z.date, N = z.utc;
            if (C === null) return /* @__PURE__ */ new Date(NaN);
            if (L.u(C)) return /* @__PURE__ */ new Date();
            if (C instanceof Date) return new Date(C);
            if (typeof C == "string" && !/Z$/i.test(C)) {
              var B = C.match(y);
              if (B) {
                var j = B[2] - 1 || 0, I = (B[7] || "0").substring(0, 3);
                return N ? new Date(Date.UTC(B[1], j, B[3] || 1, B[4] || 0, B[5] || 0, B[6] || 0, I)) : new Date(B[1], j, B[3] || 1, B[4] || 0, B[5] || 0, B[6] || 0, I);
              }
            }
            return new Date(C);
          })(w), this.init();
        }, E.init = function() {
          var w = this.$d;
          this.$y = w.getFullYear(), this.$M = w.getMonth(), this.$D = w.getDate(), this.$W = w.getDay(), this.$H = w.getHours(), this.$m = w.getMinutes(), this.$s = w.getSeconds(), this.$ms = w.getMilliseconds();
        }, E.$utils = function() {
          return L;
        }, E.isValid = function() {
          return this.$d.toString() !== v;
        }, E.isSame = function(w, z) {
          var C = x(w);
          return this.startOf(z) <= C && C <= this.endOf(z);
        }, E.isAfter = function(w, z) {
          return x(w) < this.startOf(z);
        }, E.isBefore = function(w, z) {
          return this.endOf(z) < x(w);
        }, E.$g = function(w, z, C) {
          return L.u(w) ? this[z] : this.set(C, w);
        }, E.unix = function() {
          return Math.floor(this.valueOf() / 1e3);
        }, E.valueOf = function() {
          return this.$d.getTime();
        }, E.startOf = function(w, z) {
          var C = this, N = !!L.u(z) || z, B = L.p(w), j = function(fe, re) {
            var ae = L.w(C.$u ? Date.UTC(C.$y, re, fe) : new Date(C.$y, re, fe), C);
            return N ? ae : ae.endOf(m);
          }, I = function(fe, re) {
            return L.w(C.toDate()[fe].apply(C.toDate("s"), (N ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(re)), C);
          }, V = this.$W, H = this.$M, G = this.$D, te = "set" + (this.$u ? "UTC" : "");
          switch (B) {
            case d:
              return N ? j(1, 0) : j(31, 11);
            case s:
              return N ? j(1, H) : j(0, H + 1);
            case g:
              var X = this.$locale().weekStart || 0, se = (V < X ? V + 7 : V) - X;
              return j(N ? G - se : G + (6 - se), H);
            case m:
            case h:
              return I(te + "Hours", 0);
            case c:
              return I(te + "Minutes", 1);
            case l:
              return I(te + "Seconds", 2);
            case o:
              return I(te + "Milliseconds", 3);
            default:
              return this.clone();
          }
        }, E.endOf = function(w) {
          return this.startOf(w, !1);
        }, E.$set = function(w, z) {
          var C, N = L.p(w), B = "set" + (this.$u ? "UTC" : ""), j = (C = {}, C[m] = B + "Date", C[h] = B + "Date", C[s] = B + "Month", C[d] = B + "FullYear", C[c] = B + "Hours", C[l] = B + "Minutes", C[o] = B + "Seconds", C[t] = B + "Milliseconds", C)[N], I = N === m ? this.$D + (z - this.$W) : z;
          if (N === s || N === d) {
            var V = this.clone().set(h, 1);
            V.$d[j](I), V.init(), this.$d = V.set(h, Math.min(this.$D, V.daysInMonth())).$d;
          } else j && this.$d[j](I);
          return this.init(), this;
        }, E.set = function(w, z) {
          return this.clone().$set(w, z);
        }, E.get = function(w) {
          return this[L.p(w)]();
        }, E.add = function(w, z) {
          var C, N = this;
          w = Number(w);
          var B = L.p(z), j = function(H) {
            var G = x(N);
            return L.w(G.date(G.date() + Math.round(H * w)), N);
          };
          if (B === s) return this.set(s, this.$M + w);
          if (B === d) return this.set(d, this.$y + w);
          if (B === m) return j(1);
          if (B === g) return j(7);
          var I = (C = {}, C[l] = i, C[c] = a, C[o] = r, C)[B] || 1, V = this.$d.getTime() + w * I;
          return L.w(V, this);
        }, E.subtract = function(w, z) {
          return this.add(-1 * w, z);
        }, E.format = function(w) {
          var z = this, C = this.$locale();
          if (!this.isValid()) return C.invalidDate || v;
          var N = w || "YYYY-MM-DDTHH:mm:ssZ", B = L.z(this), j = this.$H, I = this.$m, V = this.$M, H = C.weekdays, G = C.months, te = C.meridiem, X = function(re, ae, ue, K) {
            return re && (re[ae] || re(z, N)) || ue[ae].slice(0, K);
          }, se = function(re) {
            return L.s(j % 12 || 12, re, "0");
          }, fe = te || function(re, ae, ue) {
            var K = re < 12 ? "AM" : "PM";
            return ue ? K.toLowerCase() : K;
          };
          return N.replace(b, (function(re, ae) {
            return ae || (function(ue) {
              switch (ue) {
                case "YY":
                  return String(z.$y).slice(-2);
                case "YYYY":
                  return L.s(z.$y, 4, "0");
                case "M":
                  return V + 1;
                case "MM":
                  return L.s(V + 1, 2, "0");
                case "MMM":
                  return X(C.monthsShort, V, G, 3);
                case "MMMM":
                  return X(G, V);
                case "D":
                  return z.$D;
                case "DD":
                  return L.s(z.$D, 2, "0");
                case "d":
                  return String(z.$W);
                case "dd":
                  return X(C.weekdaysMin, z.$W, H, 2);
                case "ddd":
                  return X(C.weekdaysShort, z.$W, H, 3);
                case "dddd":
                  return H[z.$W];
                case "H":
                  return String(j);
                case "HH":
                  return L.s(j, 2, "0");
                case "h":
                  return se(1);
                case "hh":
                  return se(2);
                case "a":
                  return fe(j, I, !0);
                case "A":
                  return fe(j, I, !1);
                case "m":
                  return String(I);
                case "mm":
                  return L.s(I, 2, "0");
                case "s":
                  return String(z.$s);
                case "ss":
                  return L.s(z.$s, 2, "0");
                case "SSS":
                  return L.s(z.$ms, 3, "0");
                case "Z":
                  return B;
              }
              return null;
            })(re) || B.replace(":", "");
          }));
        }, E.utcOffset = function() {
          return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);
        }, E.diff = function(w, z, C) {
          var N, B = this, j = L.p(z), I = x(w), V = (I.utcOffset() - this.utcOffset()) * i, H = this - I, G = function() {
            return L.m(B, I);
          };
          switch (j) {
            case d:
              N = G() / 12;
              break;
            case s:
              N = G();
              break;
            case u:
              N = G() / 3;
              break;
            case g:
              N = (H - V) / 6048e5;
              break;
            case m:
              N = (H - V) / 864e5;
              break;
            case c:
              N = H / a;
              break;
            case l:
              N = H / i;
              break;
            case o:
              N = H / r;
              break;
            default:
              N = H;
          }
          return C ? N : L.a(N);
        }, E.daysInMonth = function() {
          return this.endOf(s).$D;
        }, E.$locale = function() {
          return S[this.$L];
        }, E.locale = function(w, z) {
          if (!w) return this.$L;
          var C = this.clone(), N = k(w, z, !0);
          return N && (C.$L = N), C;
        }, E.clone = function() {
          return L.w(this.$d, this);
        }, E.toDate = function() {
          return new Date(this.valueOf());
        }, E.toJSON = function() {
          return this.isValid() ? this.toISOString() : null;
        }, E.toISOString = function() {
          return this.$d.toISOString();
        }, E.toString = function() {
          return this.$d.toUTCString();
        }, O;
      })(), W = $.prototype;
      return x.prototype = W, [["$ms", t], ["$s", o], ["$m", l], ["$H", c], ["$W", m], ["$M", s], ["$y", d], ["$D", h]].forEach((function(O) {
        W[O[1]] = function(E) {
          return this.$g(E, O[0], O[1]);
        };
      })), x.extend = function(O, E) {
        return O.$i || (O(E, $, x), O.$i = !0), x;
      }, x.locale = k, x.isDayjs = q, x.unix = function(O) {
        return x(1e3 * O);
      }, x.en = S[M], x.Ls = S, x.p = {}, x;
    }));
  })(ht)), ht.exports;
}
var li = si();
const At = /* @__PURE__ */ $t(li);
function Er(e, n, r, i) {
  var a = this, t = P(null), o = P(0), l = P(0), c = P(null), m = P([]), g = P(), s = P(), u = P(e), d = P(!0);
  u.current = e;
  var h = typeof window < "u", v = !n && n !== 0 && h;
  if (typeof e != "function") throw new TypeError("Expected a function");
  n = +n || 0;
  var y = !!(r = r || {}).leading, b = !("trailing" in r) || !!r.trailing, p = "maxWait" in r, _ = "debounceOnServer" in r && !!r.debounceOnServer, R = p ? Math.max(+r.maxWait || 0, n) : null;
  U(function() {
    return d.current = !0, function() {
      d.current = !1;
    };
  }, []);
  var M = T(function() {
    var S = function($) {
      var W = m.current, O = g.current;
      return m.current = g.current = null, o.current = $, l.current = l.current || $, s.current = u.current.apply(O, W);
    }, A = function($, W) {
      v && cancelAnimationFrame(c.current), c.current = v ? requestAnimationFrame($) : setTimeout($, W);
    }, q = function($) {
      if (!d.current) return !1;
      var W = $ - t.current;
      return !t.current || W >= n || W < 0 || p && $ - o.current >= R;
    }, k = function($) {
      return c.current = null, b && m.current ? S($) : (m.current = g.current = null, s.current);
    }, x = function $() {
      var W = Date.now();
      if (q(W)) return k(W);
      if (d.current) {
        var O = n - (W - t.current), E = p ? Math.min(O, R - (W - o.current)) : O;
        A($, E);
      }
    }, L = function() {
      if (h || _) {
        var $ = Date.now(), W = q($);
        if (m.current = [].slice.call(arguments), g.current = a, t.current = $, W) {
          if (!c.current && d.current) return o.current = t.current, A(x, n), y ? S(t.current) : s.current;
          if (p) return A(x, n), S(t.current);
        }
        return c.current || A(x, n), s.current;
      }
    };
    return L.cancel = function() {
      var $ = c.current;
      $ && (v ? cancelAnimationFrame(c.current) : clearTimeout(c.current)), o.current = 0, m.current = t.current = g.current = c.current = null;
    }, L.isPending = function() {
      return !!c.current;
    }, L.flush = function() {
      return c.current ? k(Date.now()) : s.current;
    }, L;
  }, [y, p, n, R, b, v, h, _, i]);
  return M;
}
function ci(e) {
  if (typeof window > "u") return null;
  try {
    return window.matchMedia(e);
  } catch (n) {
    return console.error("Error creating media query:", n), null;
  }
}
function ui(e, n, r) {
  if (!(!e || typeof window > "u"))
    try {
      e.addEventListener("change", n), window.addEventListener("resize", r);
    } catch (i) {
      console.error("Error adding media listeners:", i);
    }
}
function or(e, n, r) {
  if (!(typeof window > "u"))
    try {
      e && e.removeEventListener("change", n), window.removeEventListener("resize", r);
    } catch (i) {
      console.error("Error removing media listeners:", i);
    }
}
const sr = (e, { onMatch: n, enabled: r = !0, debounceDelay: i = 100 } = {}) => {
  const [a, t] = Y(!1), o = P(null), l = P(!1), c = D(
    (s) => {
      l.current || t(s.matches);
    },
    []
  ), m = Er(
    () => {
      if (!o.current || l.current) return;
      const s = o.current.matches;
      t(s);
    },
    i,
    { maxWait: 1e3 }
  );
  U(() => {
    if (!r || typeof window > "u")
      return;
    l.current = !1, o.current && or(o.current, c, m), o.current = ci(e);
    const s = o.current;
    if (s)
      return c(s), ui(s, c, m), () => {
        l.current = !0, s && or(s, c, m), m.cancel(), o.current = null;
      };
  }, [e, r, c, m]);
  const g = P(n);
  return g.current = n, U(() => {
    a && g.current && g.current();
  }, [a]), a;
}, _e = {
  navigation: {
    first: "Go to first item",
    last: "Go to last item",
    next: "Next item",
    previous: "Previous item",
    play: "Start slideshow",
    stop: "Stop slideshow",
    pause: "Pause slideshow",
    resume: "Resume slideshow"
  },
  search: {
    placeholder: "Search Timeline",
    ariaLabel: "Search timeline content",
    clearLabel: "Clear Search",
    nextMatch: "Next Match (Enter)",
    previousMatch: "Previous Match (Shift+Enter)",
    resultsCount: "{current} of {total}",
    noResults: "No results found",
    navigationLabel: "Search navigation"
  },
  theme: {
    darkMode: "Switch to dark mode",
    lightMode: "Switch to light mode",
    toggleTheme: "Toggle theme"
  },
  layout: {
    vertical: "Vertical layout",
    horizontal: "Horizontal layout",
    alternating: "Alternating layout",
    horizontalAll: "Horizontal all layout",
    switchLayout: "Switch layout",
    layoutSelection: "Layout selection"
  },
  fullscreen: {
    enterFullscreen: "Enter fullscreen",
    exitFullscreen: "Exit fullscreen",
    notSupported: "Fullscreen not supported",
    errorMessage: "Failed to enter fullscreen mode"
  },
  quickJump: {
    jumpTo: "Jump to item",
    jumpToAriaLabel: "Quick navigation to timeline items",
    itemTemplate: "{index}: {title}"
  },
  content: {
    readMore: "Read More",
    showLess: "Show Less",
    expand: "Expand",
    collapse: "Collapse",
    cardInteraction: "Timeline card content"
  },
  status: {
    loading: "Loading timeline...",
    error: "Error loading timeline",
    noItems: "No timeline items available",
    empty: "Timeline is empty"
  },
  accessibility: {
    timelineNavigation: "Timeline Navigation",
    timelineContainer: "Timeline Container",
    timelineItem: "Timeline Item",
    activeItem: "Active Timeline Item",
    timelinePoint: "Timeline Point",
    timelineCard: "Timeline Card",
    nestedItems: "Nested Timeline Items",
    itemPosition: "Item {current} of {total}"
  },
  view: {
    compact: "Compact view",
    detailed: "Detailed view",
    toggleDensity: "Toggle view density",
    densitySelection: "View density selection"
  },
  keyboard: {
    arrowKeys: "Use arrow keys to navigate between items",
    homeKey: "Press Home to go to first item",
    endKey: "Press End to go to last item",
    enterKey: "Press Enter to select item",
    escapeKey: "Press Escape to exit fullscreen or pause slideshow",
    tabNavigation: "Use Tab to navigate controls",
    keyboardHelp: "Keyboard navigation available"
  }
};
function di(e) {
  return e ? {
    navigation: { ..._e.navigation, ...e.navigation },
    search: { ..._e.search, ...e.search },
    theme: { ..._e.theme, ...e.theme },
    layout: { ..._e.layout, ...e.layout },
    fullscreen: { ..._e.fullscreen, ...e.fullscreen },
    quickJump: { ..._e.quickJump, ...e.quickJump },
    content: { ..._e.content, ...e.content },
    status: { ..._e.status, ...e.status },
    accessibility: {
      ..._e.accessibility,
      ...e.accessibility
    },
    view: { ..._e.view, ...e.view },
    keyboard: { ..._e.keyboard, ...e.keyboard }
  } : _e;
}
function fi(e, n) {
  return e.replace(/\{(\w+)\}/g, (r, i) => {
    const a = n[i];
    return a != null ? a.toString() : r;
  });
}
function mi(e) {
  const n = T(() => di(e), [e]), r = T(() => (h, v, y) => {
    const b = n[h][v];
    return b ? y ? fi(b, y) : b : "";
  }, [n]), i = T(
    () => ({
      first: () => r("navigation", "first"),
      last: () => r("navigation", "last"),
      next: () => r("navigation", "next"),
      previous: () => r("navigation", "previous"),
      play: () => r("navigation", "play"),
      stop: () => r("navigation", "stop"),
      pause: () => r("navigation", "pause"),
      resume: () => r("navigation", "resume")
    }),
    [r]
  ), a = T(
    () => ({
      placeholder: () => r("search", "placeholder"),
      ariaLabel: () => r("search", "ariaLabel"),
      clearLabel: () => r("search", "clearLabel"),
      nextMatch: () => r("search", "nextMatch"),
      previousMatch: () => r("search", "previousMatch"),
      resultsCount: (h, v) => r("search", "resultsCount", { current: h, total: v }),
      noResults: () => r("search", "noResults"),
      navigationLabel: () => r("search", "navigationLabel")
    }),
    [r]
  ), t = T(
    () => ({
      darkMode: () => r("theme", "darkMode"),
      lightMode: () => r("theme", "lightMode"),
      toggleTheme: () => r("theme", "toggleTheme")
    }),
    [r]
  ), o = T(
    () => ({
      vertical: () => r("layout", "vertical"),
      horizontal: () => r("layout", "horizontal"),
      alternating: () => r("layout", "alternating"),
      horizontalAll: () => r("layout", "horizontalAll"),
      switchLayout: () => r("layout", "switchLayout"),
      layoutSelection: () => r("layout", "layoutSelection")
    }),
    [r]
  ), l = T(
    () => ({
      enterFullscreen: () => r("fullscreen", "enterFullscreen"),
      exitFullscreen: () => r("fullscreen", "exitFullscreen"),
      notSupported: () => r("fullscreen", "notSupported"),
      errorMessage: () => r("fullscreen", "errorMessage")
    }),
    [r]
  ), c = T(
    () => ({
      jumpTo: () => r("quickJump", "jumpTo"),
      jumpToAriaLabel: () => r("quickJump", "jumpToAriaLabel"),
      itemTemplate: (h, v) => r("quickJump", "itemTemplate", { index: h, title: v })
    }),
    [r]
  ), m = T(
    () => ({
      readMore: () => r("content", "readMore"),
      showLess: () => r("content", "showLess"),
      expand: () => r("content", "expand"),
      collapse: () => r("content", "collapse"),
      cardInteraction: () => r("content", "cardInteraction")
    }),
    [r]
  ), g = T(
    () => ({
      loading: () => r("status", "loading"),
      error: () => r("status", "error"),
      noItems: () => r("status", "noItems"),
      empty: () => r("status", "empty")
    }),
    [r]
  ), s = T(
    () => ({
      timelineNavigation: () => r("accessibility", "timelineNavigation"),
      timelineContainer: () => r("accessibility", "timelineContainer"),
      timelineItem: () => r("accessibility", "timelineItem"),
      activeItem: () => r("accessibility", "activeItem"),
      timelinePoint: () => r("accessibility", "timelinePoint"),
      timelineCard: () => r("accessibility", "timelineCard"),
      nestedItems: () => r("accessibility", "nestedItems"),
      itemPosition: (h, v) => r("accessibility", "itemPosition", { current: h, total: v })
    }),
    [r]
  ), u = T(
    () => ({
      compact: () => r("view", "compact"),
      detailed: () => r("view", "detailed"),
      toggleDensity: () => r("view", "toggleDensity"),
      densitySelection: () => r("view", "densitySelection")
    }),
    [r]
  ), d = T(
    () => ({
      arrowKeys: () => r("keyboard", "arrowKeys"),
      homeKey: () => r("keyboard", "homeKey"),
      endKey: () => r("keyboard", "endKey"),
      enterKey: () => r("keyboard", "enterKey"),
      escapeKey: () => r("keyboard", "escapeKey"),
      tabNavigation: () => r("keyboard", "tabNavigation"),
      keyboardHelp: () => r("keyboard", "keyboardHelp")
    }),
    [r]
  );
  return {
    // Raw text configuration
    texts: n,
    // Generic text getter with interpolation
    getText: r,
    // Category-specific helpers
    navigation: i,
    search: a,
    theme: t,
    layout: o,
    fullscreen: l,
    quickJump: c,
    content: m,
    status: g,
    accessibility: s,
    view: u,
    keyboard: d
  };
}
function hi(e, n) {
  const r = (i, a, t) => {
    if (i) {
      const o = i();
      if (o !== void 0) return o;
    }
    return a !== void 0 ? a : t;
  };
  return {
    // Navigation texts
    firstItem: () => r(
      e?.navigation.first,
      n?.first,
      "Go to first item"
    ),
    lastItem: () => r(
      e?.navigation.last,
      n?.last,
      "Go to last item"
    ),
    nextItem: () => r(e?.navigation.next, n?.next, "Next item"),
    previousItem: () => r(
      e?.navigation.previous,
      n?.previous,
      "Previous item"
    ),
    playSlideshow: () => r(
      e?.navigation.play,
      n?.play,
      "Start slideshow"
    ),
    stopSlideshow: () => r(e?.navigation.stop, n?.stop, "Stop slideshow"),
    pauseSlideshow: () => r(e?.navigation.pause, void 0, "Pause slideshow"),
    resumeSlideshow: () => r(e?.navigation.resume, void 0, "Resume slideshow"),
    // Search texts
    searchPlaceholder: () => r(
      e?.search.placeholder,
      n?.searchPlaceholder,
      "Search Timeline"
    ),
    searchAriaLabel: () => r(
      e?.search.ariaLabel,
      n?.searchAriaLabel,
      "Search timeline content"
    ),
    clearSearch: () => r(
      e?.search.clearLabel,
      n?.clearSearch,
      "Clear Search"
    ),
    nextMatch: () => r(
      e?.search.nextMatch,
      n?.nextMatch,
      "Next Match (Enter)"
    ),
    previousMatch: () => r(
      e?.search.previousMatch,
      n?.previousMatch,
      "Previous Match (Shift+Enter)"
    ),
    searchResults: (i, a) => e?.search.resultsCount(i, a) || `${i} of ${a}`,
    noSearchResults: () => r(e?.search.noResults, void 0, "No results found"),
    searchNavigation: () => r(
      e?.search.navigationLabel,
      void 0,
      "Search navigation"
    ),
    // Theme texts
    darkMode: () => r(
      e?.theme.darkMode,
      n?.dark,
      "Switch to dark mode"
    ),
    lightMode: () => r(
      e?.theme.lightMode,
      n?.light,
      "Switch to light mode"
    ),
    toggleTheme: () => r(e?.theme.toggleTheme, void 0, "Toggle theme"),
    // Layout texts
    verticalLayout: () => r(e?.layout.vertical, void 0, "Vertical layout"),
    horizontalLayout: () => r(e?.layout.horizontal, void 0, "Horizontal layout"),
    alternatingLayout: () => r(e?.layout.alternating, void 0, "Alternating layout"),
    horizontalAllLayout: () => r(
      e?.layout.horizontalAll,
      void 0,
      "Horizontal all layout"
    ),
    switchLayout: () => r(e?.layout.switchLayout, void 0, "Switch layout"),
    // Fullscreen texts
    enterFullscreen: () => r(
      e?.fullscreen.enterFullscreen,
      void 0,
      "Enter fullscreen"
    ),
    exitFullscreen: () => r(
      e?.fullscreen.exitFullscreen,
      void 0,
      "Exit fullscreen"
    ),
    fullscreenNotSupported: () => r(
      e?.fullscreen.notSupported,
      void 0,
      "Fullscreen not supported"
    ),
    fullscreenError: () => r(
      e?.fullscreen.errorMessage,
      void 0,
      "Failed to enter fullscreen mode"
    ),
    // Content texts
    readMore: () => r(e?.content.readMore, void 0, "Read More"),
    showLess: () => r(e?.content.showLess, void 0, "Show Less"),
    expandContent: () => r(e?.content.expand, void 0, "Expand"),
    collapseContent: () => r(e?.content.collapse, void 0, "Collapse"),
    // Accessibility texts
    timelineNavigation: () => r(
      e?.accessibility.timelineNavigation,
      void 0,
      "Timeline Navigation"
    ),
    timelineContainer: () => r(
      e?.accessibility.timelineContainer,
      void 0,
      "Timeline Container"
    ),
    timelineItem: () => r(
      e?.accessibility.timelineItem,
      void 0,
      "Timeline Item"
    ),
    activeItem: () => r(
      e?.accessibility.activeItem,
      void 0,
      "Active Timeline Item"
    ),
    itemPosition: (i, a) => e?.accessibility.itemPosition(i, a) || `Item ${i} of ${a}`,
    // Status texts
    loading: () => r(e?.status.loading, void 0, "Loading timeline..."),
    error: () => r(e?.status.error, void 0, "Error loading timeline"),
    noItems: () => r(
      e?.status.noItems,
      void 0,
      "No timeline items available"
    ),
    empty: () => r(e?.status.empty, void 0, "Timeline is empty")
  };
}
const Nr = kn(null), vi = (e) => {
  const {
    children: n,
    // Core props with defaults
    mode: r = "VERTICAL_ALTERNATING",
    cardHeight: i = 200,
    cardWidth: a,
    cardLess: t = !1,
    flipLayout: o,
    itemWidth: l = 200,
    lineWidth: c = 3,
    // Media props
    mediaHeight: m = 200,
    mediaSettings: g,
    // Timeline point props
    timelinePointDimension: s = 16,
    timelinePointShape: u = "circle",
    // Interaction props
    disableNavOnKey: d = !1,
    disableAutoScrollOnClick: h = !1,
    disableInteraction: v = !1,
    disableClickOnCircle: y = !1,
    disableTimelinePoint: b = !1,
    // UI feature props
    enableBreakPoint: p = !0,
    enableDarkToggle: _ = !1,
    enableLayoutSwitch: R = !0,
    enableQuickJump: M = !0,
    focusActiveItemOnLoad: S = !1,
    highlightCardsOnHover: A = !1,
    // Cards and content props
    borderLessCards: q = !1,
    cardPositionHorizontal: k,
    parseDetailsAsHTML: x = !1,
    useReadMore: L = !0,
    textOverlay: $,
    // Scrolling props (default aligns with legacy behavior: no scrollbar)
    scrollable: W = { scrollbar: !1 },
    // Toolbar props
    toolbarPosition: O = "top",
    disableToolbar: E = !1,
    toolbarSearchConfig: w,
    // Slideshow props
    slideItemDuration: z = 2e3,
    showProgressOnSlideshow: C = !0,
    showOverallSlideshowProgress: N,
    slideShow: B,
    slideShowType: j,
    // Other props
    titleDateFormat: I = "MMM DD, YYYY",
    uniqueId: V = "react-chrono",
    nestedCardHeight: H = 150,
    contentDetailsHeight: G = 10,
    responsiveBreakPoint: te = 1024,
    noUniqueId: X = !1,
    isChild: se = !1,
    // Dynamic props
    darkMode: fe = !1,
    showAllCardsHorizontal: re = !1,
    textDensity: ae = "HIGH",
    // Customization props
    theme: ue,
    buttonTexts: K,
    classNames: we,
    fontSizes: pe,
    semanticTags: J,
    // i18n props
    i18nConfig: me,
    // Data props
    items: ke,
    activeItemIndex: qe = 0,
    // Callbacks
    onScrollEnd: Ae,
    onThemeChange: ze
  } = e, [Ce, He] = Y(fe), [Oe, Le] = Y(
    r === "HORIZONTAL_ALL" ? !0 : re
  ), [be, Te] = Y(!1), [Be, Ze] = Y(ae), Ie = D(() => {
    He(!Ce), ze?.();
  }, [Ce, ze]), Me = D((Ye) => {
    Le(Ye);
  }, []), he = D((Ye) => {
    Ze(Ye);
  }, []);
  U(() => {
    r === "HORIZONTAL_ALL" ? Le(!0) : r === "HORIZONTAL" && Le(re);
  }, [r, re]), sr(`(max-width: ${te - 1}px)`, {
    onMatch: () => Te(!0),
    enabled: p
  }), sr(`(min-width: ${te}px)`, {
    onMatch: () => Te(!1),
    enabled: p
  });
  const Ee = T(
    () => t ? Math.min(i, 80) : i,
    [t, i]
  ), tt = T(
    () => o && ke ? ke.length - 1 : 0,
    [o, ke?.length]
  ), Ve = T(
    () => r === "VERTICAL" && !$ ? "left" : "center",
    [r, $]
  ), rt = T(
    () => ({
      ...Qn(Ce),
      ...ue
    }),
    [Ce, ue]
  ), Xe = mi(me), nt = T(
    () => hi(Xe, K),
    [Xe, K]
  ), it = T(
    () => ({
      ...ti(),
      ...K
    }),
    [K]
  ), at = T(
    () => ({
      ...ei(),
      ...we
    }),
    [we]
  ), ye = T(
    () => ({
      cardSubtitle: "0.85rem",
      cardText: "1rem",
      cardTitle: "1rem",
      title: "1rem",
      ...pe
    }),
    [pe]
  ), ot = T(() => e.googleFonts ? e.googleFonts ? {
    ...e.googleFonts,
    elements: {
      ...e.googleFonts.elements,
      // Override sizes from fontSizes if provided
      ...ye.title && {
        title: {
          ...e.googleFonts.elements?.title,
          size: ye.title
        }
      },
      ...ye.cardTitle && {
        cardTitle: {
          ...e.googleFonts.elements?.cardTitle,
          size: ye.cardTitle
        }
      },
      ...ye.cardSubtitle && {
        cardSubtitle: {
          ...e.googleFonts.elements?.cardSubtitle,
          size: ye.cardSubtitle
        }
      },
      ...ye.cardText && {
        cardText: {
          ...e.googleFonts.elements?.cardText,
          size: ye.cardText
        }
      }
    }
  } : null : {
    fontFamily: "Inter",
    elements: {
      title: { weight: 600, style: "normal" },
      cardTitle: { weight: 500, style: "normal" },
      cardSubtitle: { weight: 400, style: "normal" },
      cardText: { weight: 400, style: "normal" },
      controls: { weight: 500, style: "normal" }
    },
    weights: [400, 500, 600],
    display: "swap",
    preconnect: !0
  }, [e.googleFonts, ye]), st = T(
    () => ({
      align: Ve,
      fit: "cover",
      ...g
    }),
    [Ve, g]
  ), lt = T(
    () => ({
      cardTitle: "span",
      cardSubtitle: "span",
      ...J
    }),
    [J]
  ), ct = T(
    () => j ?? ri(r),
    [j, r]
  ), bt = T(
    () => ({
      // Static configuration
      mode: r,
      cardHeight: i,
      cardWidth: a || 400,
      cardLess: t,
      flipLayout: o || !1,
      itemWidth: l,
      lineWidth: c,
      mediaHeight: m,
      mediaSettings: st,
      timelinePointDimension: s,
      timelinePointShape: u,
      disableNavOnKey: d,
      disableAutoScrollOnClick: h || v,
      disableInteraction: v,
      disableClickOnCircle: y || v,
      disableTimelinePoint: b || v,
      enableBreakPoint: p,
      enableDarkToggle: _,
      enableLayoutSwitch: R,
      enableQuickJump: M,
      focusActiveItemOnLoad: S,
      highlightCardsOnHover: A,
      borderLessCards: q,
      cardPositionHorizontal: k ?? "BOTTOM",
      parseDetailsAsHTML: x,
      useReadMore: L,
      textOverlay: $ || !1,
      scrollable: W,
      toolbarPosition: O,
      disableToolbar: E,
      toolbarSearchConfig: w,
      slideItemDuration: z,
      showProgressOnSlideshow: C && !!B,
      showOverallSlideshowProgress: N ?? !!B,
      titleDateFormat: I,
      uniqueId: V,
      nestedCardHeight: H,
      contentDetailsHeight: Math.max(G, m * 0.75),
      responsiveBreakPoint: te,
      noUniqueId: X,
      isChild: se,
      // Dynamic state
      isDarkMode: Ce,
      isMobile: be,
      showAllCardsHorizontal: Oe,
      textContentDensity: Be,
      toggleDarkMode: Ie,
      updateShowAllCardsHorizontal: Me,
      updateTextContentDensity: he,
      // Memoized objects
      theme: rt,
      buttonTexts: it,
      classNames: at,
      fontSizes: ye,
      semanticTags: lt,
      slideShowType: ct,
      googleFonts: ot,
      i18nConfig: me,
      i18nHelper: Xe,
      textResolver: nt,
      // Computed values
      computedCardHeight: Ee,
      computedActiveItemIndex: tt,
      computedMediaAlign: Ve,
      // Timeline-specific data
      items: ke,
      activeItemIndex: qe,
      // Callbacks
      onScrollEnd: Ae || (() => {
      }),
      onThemeChange: ze || (() => {
      })
    }),
    [
      // Static config dependencies
      r,
      i,
      a,
      t,
      o,
      l,
      c,
      m,
      st,
      s,
      u,
      d,
      h,
      v,
      y,
      b,
      p,
      _,
      R,
      M,
      S,
      A,
      q,
      k,
      x,
      L,
      $,
      W,
      O,
      E,
      w,
      z,
      C,
      N,
      B,
      I,
      V,
      H,
      G,
      te,
      X,
      se,
      // Dynamic state dependencies
      Ce,
      be,
      Oe,
      Be,
      Ie,
      Me,
      he,
      // Memoized objects dependencies
      rt,
      it,
      at,
      ye,
      lt,
      ct,
      ot,
      me,
      nt,
      // Computed values dependencies
      Ee,
      tt,
      Ve,
      // Data dependencies
      ke,
      qe,
      // Callback dependencies
      Ae,
      ze
    ]
  );
  return /* @__PURE__ */ f(Nr.Provider, { value: bt, children: n });
}, ce = () => {
  const e = zn(Nr);
  if (!e)
    throw new Error(
      "useTimelineContext must be used within a TimelineContextProvider"
    );
  return e;
}, gi = () => {
  const e = ce();
  return T(
    () => ({
      mode: e.mode,
      cardHeight: e.cardHeight,
      cardWidth: e.cardWidth || 400,
      cardLess: e.cardLess,
      flipLayout: e.flipLayout || !1,
      itemWidth: e.itemWidth,
      lineWidth: e.lineWidth,
      mediaHeight: e.mediaHeight,
      mediaSettings: e.mediaSettings,
      timelinePointDimension: e.timelinePointDimension,
      timelinePointShape: e.timelinePointShape,
      disableNavOnKey: e.disableNavOnKey,
      disableAutoScrollOnClick: e.disableAutoScrollOnClick,
      disableInteraction: e.disableInteraction,
      disableClickOnCircle: e.disableClickOnCircle,
      disableTimelinePoint: e.disableTimelinePoint,
      enableBreakPoint: e.enableBreakPoint,
      enableDarkToggle: e.enableDarkToggle,
      enableLayoutSwitch: e.enableLayoutSwitch,
      enableQuickJump: e.enableQuickJump,
      focusActiveItemOnLoad: e.focusActiveItemOnLoad,
      highlightCardsOnHover: e.highlightCardsOnHover,
      borderLessCards: e.borderLessCards,
      cardPositionHorizontal: e.cardPositionHorizontal,
      parseDetailsAsHTML: e.parseDetailsAsHTML,
      useReadMore: e.useReadMore,
      textOverlay: e.textOverlay,
      scrollable: e.scrollable,
      toolbarPosition: e.toolbarPosition,
      disableToolbar: e.disableToolbar,
      toolbarSearchConfig: e.toolbarSearchConfig,
      slideItemDuration: e.slideItemDuration,
      showProgressOnSlideshow: e.showProgressOnSlideshow,
      showOverallSlideshowProgress: e.showOverallSlideshowProgress,
      titleDateFormat: e.titleDateFormat,
      uniqueId: e.uniqueId,
      nestedCardHeight: e.nestedCardHeight,
      contentDetailsHeight: e.contentDetailsHeight,
      responsiveBreakPoint: e.responsiveBreakPoint,
      noUniqueId: e.noUniqueId,
      isChild: e.isChild
    }),
    [e]
  );
}, lr = () => {
  const e = ce();
  return T(
    () => ({
      theme: e.theme,
      buttonTexts: e.buttonTexts,
      classNames: e.classNames,
      fontSizes: e.fontSizes,
      isDarkMode: e.isDarkMode,
      semanticTags: e.semanticTags,
      slideShowType: e.slideShowType,
      googleFonts: e.googleFonts,
      i18nConfig: e.i18nConfig,
      i18nHelper: e.i18nHelper,
      textResolver: e.textResolver
    }),
    [e]
  );
};
var Lt = { exports: {} };
/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/
var cr;
function pi() {
  return cr || (cr = 1, (function(e) {
    (function() {
      var n = {}.hasOwnProperty;
      function r() {
        for (var t = "", o = 0; o < arguments.length; o++) {
          var l = arguments[o];
          l && (t = a(t, i(l)));
        }
        return t;
      }
      function i(t) {
        if (typeof t == "string" || typeof t == "number")
          return t;
        if (typeof t != "object")
          return "";
        if (Array.isArray(t))
          return r.apply(null, t);
        if (t.toString !== Object.prototype.toString && !t.toString.toString().includes("[native code]"))
          return t.toString();
        var o = "";
        for (var l in t)
          n.call(t, l) && t[l] && (o = a(o, l));
        return o;
      }
      function a(t, o) {
        return o ? t ? t + " " + o : t + o : t;
      }
      e.exports ? (r.default = r, e.exports = r) : window.classNames = r;
    })();
  })(Lt)), Lt.exports;
}
var bi = pi();
const ie = /* @__PURE__ */ $t(bi), yi = (e, n) => {
  const [r, i] = Y(0), a = (l, c, m, g, s, u) => {
    const d = l + c, h = m + g, v = m >= l && h <= d, y = m < l && h > l || h > d && m < d, b = m - l, p = d - m;
    (!(v || y) || b <= s && b >= 0 || p <= s && p >= 0) && u(m - s);
  }, t = (l, c, m, g, s) => {
    const u = l + c, d = m + g, h = m >= l && d <= u, v = m < l && d > l || d > u && m < u, y = m - g, b = !h || v;
    b && y + g < u ? s(y + Math.round(g / 2)) : b && s(y);
  }, o = T(
    () => (l, c) => {
      const { clientWidth: m, scrollLeft: g, scrollTop: s, clientHeight: u } = l, {
        pointOffset: d = 0,
        pointWidth: h = 0,
        contentHeight: v = 0,
        contentOffset: y = 0
      } = c;
      (e === "HORIZONTAL" || e === "HORIZONTAL_ALL") && n ? a(
        g,
        m,
        d,
        h,
        n,
        i
      ) : (e === "VERTICAL" || e === "VERTICAL_ALTERNATING") && t(
        s,
        u,
        y,
        v,
        i
      );
    },
    [e, n]
    // Dependencies for useMemo
  );
  return [r, o];
}, wi = ({
  slideShowRunning: e,
  activeTimelineItem: n
}) => {
  const [r, i] = Y(!1), a = P(n);
  U(() => {
    e || i(!1);
  }, [e]), U(() => {
    e && a.current !== n && (a.current = n, r && i(!1));
  }, [n, e, r]);
  const t = D(() => {
    e && !r && i(!0);
  }, [e, r]), o = D(() => {
    e && r && i(!1);
  }, [e, r]);
  return {
    isPaused: r,
    pauseProgress: t,
    resumeProgress: o
  };
};
function _i(e, n) {
  if (typeof e != "object" || !e) return e;
  var r = e[Symbol.toPrimitive];
  if (r !== void 0) {
    var i = r.call(e, n);
    if (typeof i != "object") return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (n === "string" ? String : Number)(e);
}
function Ci(e) {
  var n = _i(e, "string");
  return typeof n == "symbol" ? n : String(n);
}
function Ti(e, n, r) {
  return n = Ci(n), n in e ? Object.defineProperty(e, n, {
    value: r,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[n] = r, e;
}
function ur(e, n) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var i = Object.getOwnPropertySymbols(e);
    n && (i = i.filter(function(a) {
      return Object.getOwnPropertyDescriptor(e, a).enumerable;
    })), r.push.apply(r, i);
  }
  return r;
}
function dr(e) {
  for (var n = 1; n < arguments.length; n++) {
    var r = arguments[n] != null ? arguments[n] : {};
    n % 2 ? ur(Object(r), !0).forEach(function(i) {
      Ti(e, i, r[i]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : ur(Object(r)).forEach(function(i) {
      Object.defineProperty(e, i, Object.getOwnPropertyDescriptor(r, i));
    });
  }
  return e;
}
function fr(e, n) {
  var r = {};
  for (var i in e)
    r[i] = n(e[i], i);
  return r;
}
var xi = (e, n, r) => {
  for (var i of Object.keys(e)) {
    var a;
    if (e[i] !== ((a = n[i]) !== null && a !== void 0 ? a : r[i]))
      return !1;
  }
  return !0;
}, de = (e) => {
  var n = (r) => {
    var i = e.defaultClassName, a = dr(dr({}, e.defaultVariants), r);
    for (var t in a) {
      var o, l = (o = a[t]) !== null && o !== void 0 ? o : e.defaultVariants[t];
      if (l != null) {
        var c = l;
        typeof c == "boolean" && (c = c === !0 ? "true" : "false");
        var m = (
          // @ts-expect-error
          e.variantClassNames[t][c]
        );
        m && (i += " " + m);
      }
    }
    for (var [g, s] of e.compoundVariants)
      xi(g, a, e.defaultVariants) && (i += " " + s);
    return i;
  };
  return n.variants = () => Object.keys(e.variantClassNames), n.classNames = {
    get base() {
      return e.defaultClassName.split(" ")[0];
    },
    get variants() {
      return fr(e.variantClassNames, (r) => fr(r, (i) => i.split(" ")[0]));
    }
  }, n;
}, mr = de({ defaultClassName: "_1m81tp15 _1m81tp10 _1v4ezef6 _1v4ezefx _1v4ezefi _1v4ezef6o _1v4ezef79", variantClassNames: { mode: { horizontal: "_1m81tp16 _1m81tp11 _1v4ezef1f", vertical: "_1m81tp17 _1m81tp12 _1v4ezef1f", alternating: "_1m81tp18 _1m81tp13 _1v4ezef1f", horizontalAll: "_1m81tp19 _1m81tp14 _1v4ezef1f" }, fullscreen: { true: "_1m81tp1a", false: "_1m81tp1b" }, keyboardNavigation: { true: "_1m81tp1c", false: "_1m81tp1d" } }, defaultVariants: { mode: "vertical", fullscreen: !1, keyboardNavigation: !1 }, compoundVariants: [] }), ki = de({ defaultClassName: "_1m81tp1f _1m81tp1e _1v4ezef6 _1v4ezef6o _1v4ezefi", variantClassNames: { mode: { vertical: "_1m81tp1g", horizontal: "_1m81tp1h", horizontalAll: "_1m81tp1i", alternating: "_1m81tp1j" } }, defaultVariants: { mode: "vertical" }, compoundVariants: [] }), zi = de({ defaultClassName: "_1m81tp1l _1m81tp1k _1v4ezef6 _1v4ezef6o _1v4ezefi", variantClassNames: { mode: { vertical: "_1m81tp1m", horizontal: "_1m81tp1n", alternating: "_1m81tp1o", horizontalAll: "_1m81tp1p" } }, defaultVariants: { mode: "vertical" }, compoundVariants: [] });
de({ defaultClassName: "_1m81tp1r _1m81tp1q _1v4ezef6 _1v4ezef10 _1v4ezefl", variantClassNames: { mode: { vertical: "_1m81tp1s", horizontal: "_1m81tp1t", alternating: "_1m81tp1u", horizontalAll: "_1m81tp1v" } }, defaultVariants: { mode: "vertical" }, compoundVariants: [] });
var Si = "_1m81tp1x _1m81tp1w _1v4ezefl", Ai = de({ defaultClassName: "_1m81tp113 _1m81tp112 _1v4ezef6 _1v4ezef6o _1v4ezefi", variantClassNames: { position: { top: "_1m81tp114", bottom: "_1m81tp115" }, sticky: { true: "_1m81tp116", false: "_1m81tp117" } }, defaultVariants: { position: "top", sticky: !1 }, compoundVariants: [[{ position: "top", sticky: !0 }, "_1m81tp118"], [{ position: "bottom", sticky: !0 }, "_1m81tp119"]] }), ne = { color: { text: "var(--_9df7600)", background: "var(--_9df7601)", primary: "var(--_9df7602)", secondary: "var(--_9df7603)", muted: "var(--_9df7604)", cardBg: "var(--_9df7605)", cardTitle: "var(--_9df7606)", cardSubtitle: "var(--_9df7607)", cardDetails: "var(--_9df7608)", nestedCardBg: "var(--_9df760b)", nestedCardTitle: "var(--_9df760c)", nestedCardSubtitle: "var(--_9df760d)", nestedCardDetails: "var(--_9df760e)", icon: "var(--_9df760g)", toolbarBg: "var(--_9df760k)", toolbarBtnBg: "var(--_9df760l)", toolbarText: "var(--_9df760m)", buttonBorder: "var(--_9df760n)", buttonHoverBorder: "var(--_9df760o)", buttonHoverBg: "var(--_9df760p)", buttonActiveBg: "var(--_9df760q)", shadow: "var(--_9df760y)" } }, Li = { color: { text: { primary: "var(--_15akvq02f)", secondary: "var(--_15akvq02g)", muted: "var(--_15akvq02h)", inverse: "var(--_15akvq02i)" }, background: { primary: "var(--_15akvq02j)", secondary: "var(--_15akvq02k)", elevated: "var(--_15akvq02l)", overlay: "var(--_15akvq02m)" }, interactive: { primary: "var(--_15akvq02n)", primaryHover: "var(--_15akvq02o)", primaryActive: "var(--_15akvq02p)", secondary: "var(--_15akvq02q)", secondaryHover: "var(--_15akvq02r)", muted: "var(--_15akvq02s)", mutedHover: "var(--_15akvq02t)" }, border: { default: "var(--_15akvq02u)", muted: "var(--_15akvq02v)", emphasis: "var(--_15akvq02w)", interactive: "var(--_15akvq02x)" }, status: { success: "var(--_15akvq02y)", warning: "var(--_15akvq02z)", error: "var(--_15akvq030)", info: "var(--_15akvq031)" }, icon: { default: "var(--_15akvq032)", muted: "var(--_15akvq033)", emphasis: "var(--_15akvq034)" } }, spacing: { xs: "var(--_15akvq035)", sm: "var(--_15akvq036)", md: "var(--_15akvq037)", lg: "var(--_15akvq038)", xl: "var(--_15akvq039)", "2xl": "var(--_15akvq03a)", "3xl": "var(--_15akvq03b)" }, typography: { fontSize: { caption: "var(--_15akvq03c)", body: "var(--_15akvq03d)", heading3: "var(--_15akvq03e)", heading2: "var(--_15akvq03f)", heading1: "var(--_15akvq03g)" }, lineHeight: { tight: "var(--_15akvq03o)", normal: "var(--_15akvq03p)", relaxed: "var(--_15akvq03q)" }, fontWeight: { normal: "var(--_15akvq03r)", medium: "var(--_15akvq03s)", semibold: "var(--_15akvq03t)", bold: "var(--_15akvq03u)" } }, borderRadius: { sm: "var(--_15akvq03v)", md: "var(--_15akvq03w)", lg: "var(--_15akvq03x)", xl: "var(--_15akvq03y)", full: "var(--_15akvq03z)" }, shadow: { card: "var(--_15akvq040)", cardHover: "var(--_15akvq041)", cardActive: "var(--_15akvq042)", toolbar: "var(--_15akvq043)", modal: "var(--_15akvq044)" }, zIndex: { timelineCard: "var(--_15akvq045)", controls: "var(--_15akvq046)", popover: "var(--_15akvq047)", outline: "var(--_15akvq048)" }, motion: { duration: { fast: "var(--_15akvq049)", normal: "var(--_15akvq04a)", slow: "var(--_15akvq04b)" }, easing: { standard: "var(--_15akvq04c)", emphasized: "var(--_15akvq04d)" } } }, Ii = { semantic: Li, component: { timeline: { line: { width: "var(--_15akvq04e)", color: "var(--_15akvq04f)" }, point: { size: { sm: "var(--_15akvq04g)", md: "var(--_15akvq04h)", lg: "var(--_15akvq04i)" }, color: { active: "var(--_15akvq04j)", inactive: "var(--_15akvq04k)", hover: "var(--_15akvq04l)" } }, card: { width: { vertical: "var(--_15akvq04m)", horizontal: "var(--_15akvq04n)", min: "var(--_15akvq04o)", max: "var(--_15akvq04p)" }, spacing: { vertical: "var(--_15akvq04q)", horizontal: "var(--_15akvq04r)" } } }, toolbar: { height: "var(--_15akvq04s)", padding: "var(--_15akvq04t)", background: "var(--_15akvq04u)", button: { size: "var(--_15akvq04v)", spacing: "var(--_15akvq04w)" } } } }, F = Ii;
function Ei(e) {
  var n = e.match(/^var\((.*)\)$/);
  return n ? n[1] : e;
}
function Mt(e, n) {
  var r = {};
  {
    var i = e;
    for (var a in i) {
      var t = i[a];
      t != null && (r[Ei(a)] = t);
    }
  }
  return Object.defineProperty(r, "toString", {
    value: function() {
      return Object.keys(this).map((l) => "".concat(l, ":").concat(this[l])).join(";");
    },
    writable: !1
  }), r;
}
function Ni(e) {
  return e !== void 0 && Object.keys(e).length > 0;
}
function gt(e, n) {
  if (!Ni(e))
    return {};
  const r = e ?? {}, i = n ?? (r.timelineBgColor === "#000000" || r.cardBgColor === "#1f2937" || r.textColor === "#ffffff" || r.textColor === "#f9fafb"), a = i ? "#1f2937" : "#ffffff", t = i ? "#f9fafb" : "#111827", o = i ? "#374151" : "#ffffff", l = i ? "#9ca3af" : "#6b7280", c = i ? "#1f2937" : "#f1f5f9", m = i ? "#374151" : "#ffffff", g = i ? "#f9fafb" : "#1e293b", s = i ? "#4b5563" : "#e2e8f0", u = i ? "#4b5563" : "#e2e8f0", d = i ? "rgba(0,0,0,0.3)" : "rgba(0,0,0,0.1)";
  return {
    // New comprehensive token system mapping
    ...Mt({
      // Semantic color tokens
      [F.semantic.color.text.primary]: r.textColor ?? t,
      [F.semantic.color.text.secondary]: r.cardSubtitleColor ?? (i ? "#d1d5db" : "#374151"),
      [F.semantic.color.text.muted]: r.detailsColor ?? (i ? "#9ca3af" : "#6b7280"),
      [F.semantic.color.text.inverse]: i ? a : t,
      // Background colors
      [F.semantic.color.background.primary]: r.timelineBgColor ?? r.cardBgColor ?? a,
      [F.semantic.color.background.secondary]: r.cardDetailsBackGround ?? (i ? "#1f2937" : "#f8fafc"),
      [F.semantic.color.background.elevated]: r.cardBgColor ?? o,
      [F.semantic.color.background.overlay]: i ? "#00000080" : "#ffffff80",
      // Interactive colors
      [F.semantic.color.interactive.primary]: r.primary ?? "#3b82f6",
      [F.semantic.color.interactive.primaryHover]: r.buttonHoverBorderColor ?? r.primary ?? "#2563eb",
      [F.semantic.color.interactive.primaryActive]: r.titleColorActive ?? (i ? "#60a5fa" : "#1d4ed8"),
      [F.semantic.color.interactive.secondary]: r.secondary ?? (i ? "#94a3b8" : "#64748b"),
      [F.semantic.color.interactive.secondaryHover]: r.buttonHoverBgColor ?? u,
      [F.semantic.color.interactive.muted]: l,
      [F.semantic.color.interactive.mutedHover]: u,
      // Border colors
      [F.semantic.color.border.default]: r.buttonBorderColor ?? s,
      [F.semantic.color.border.muted]: i ? "#4b5563" : "#e5e7eb",
      [F.semantic.color.border.emphasis]: r.buttonActiveBorderColor ?? r.primary ?? "#3b82f6",
      [F.semantic.color.border.interactive]: r.buttonHoverBorderColor ?? r.primary ?? "#3b82f6",
      // Status colors
      [F.semantic.color.status.success]: "#22c55e",
      [F.semantic.color.status.warning]: "#eab308",
      [F.semantic.color.status.error]: "#ef4444",
      [F.semantic.color.status.info]: r.primary ?? "#3b82f6",
      // Icon colors
      [F.semantic.color.icon.default]: r.iconColor ?? r.primary ?? "#3b82f6",
      [F.semantic.color.icon.muted]: i ? "#9ca3af" : "#6b7280",
      [F.semantic.color.icon.emphasis]: r.primary ?? "#3b82f6",
      // Component-specific tokens
      [F.component.timeline.line.color]: r.primary ?? "#3b82f6",
      [F.component.timeline.line.width]: "2px",
      [F.component.timeline.point.color.active]: r.primary ?? "#3b82f6",
      [F.component.timeline.point.color.inactive]: l,
      [F.component.timeline.point.color.hover]: r.buttonHoverBorderColor ?? r.primary ?? "#2563eb",
      [F.component.timeline.point.size.sm]: "8px",
      [F.component.timeline.point.size.md]: "12px",
      [F.component.timeline.point.size.lg]: "16px",
      [F.component.timeline.card.width.vertical]: "85%",
      [F.component.timeline.card.width.horizontal]: "280px",
      [F.component.timeline.card.width.min]: "280px",
      [F.component.timeline.card.width.max]: "400px",
      [F.component.timeline.card.spacing.vertical]: "1rem",
      [F.component.timeline.card.spacing.horizontal]: "2rem",
      // Spacing tokens
      [F.semantic.spacing.xs]: "4px",
      [F.semantic.spacing.sm]: "8px",
      [F.semantic.spacing.md]: "16px",
      [F.semantic.spacing.lg]: "24px",
      [F.semantic.spacing.xl]: "32px",
      [F.semantic.spacing["2xl"]]: "48px",
      [F.semantic.spacing["3xl"]]: "64px",
      // Typography tokens
      [F.semantic.typography.fontSize.caption]: "12px",
      [F.semantic.typography.fontSize.body]: "16px",
      [F.semantic.typography.fontSize.heading3]: "18px",
      [F.semantic.typography.fontSize.heading2]: "20px",
      [F.semantic.typography.fontSize.heading1]: "24px",
      [F.semantic.typography.lineHeight.tight]: "1.2",
      [F.semantic.typography.lineHeight.normal]: "1.5",
      [F.semantic.typography.lineHeight.relaxed]: "1.8",
      [F.semantic.typography.fontWeight.normal]: "400",
      [F.semantic.typography.fontWeight.medium]: "500",
      [F.semantic.typography.fontWeight.semibold]: "600",
      [F.semantic.typography.fontWeight.bold]: "700",
      // Border radius tokens
      [F.semantic.borderRadius.sm]: "4px",
      [F.semantic.borderRadius.md]: "8px",
      [F.semantic.borderRadius.lg]: "12px",
      [F.semantic.borderRadius.xl]: "16px",
      [F.semantic.borderRadius.full]: "9999px",
      // Shadow tokens
      [F.semantic.shadow.card]: i ? "0 2px 4px rgba(0, 0, 0, 0.3)" : "0 2px 4px rgba(0, 0, 0, 0.1)",
      [F.semantic.shadow.cardHover]: i ? "0 4px 8px rgba(0, 0, 0, 0.4)" : "0 4px 8px rgba(0, 0, 0, 0.15)",
      [F.semantic.shadow.cardActive]: i ? "0 1px 2px rgba(0, 0, 0, 0.5)" : "0 1px 2px rgba(0, 0, 0, 0.2)",
      [F.semantic.shadow.toolbar]: r.shadowColor ?? d,
      [F.semantic.shadow.modal]: i ? "0 8px 16px rgba(0, 0, 0, 0.6)" : "0 8px 16px rgba(0, 0, 0, 0.12)",
      // Motion tokens
      [F.semantic.motion.duration.fast]: "150ms",
      [F.semantic.motion.duration.normal]: "300ms",
      [F.semantic.motion.duration.slow]: "500ms",
      [F.semantic.motion.easing.standard]: "cubic-bezier(0.4, 0, 0.2, 1)",
      [F.semantic.motion.easing.emphasized]: "cubic-bezier(0.2, 0, 0, 1)",
      // Z-index tokens
      [F.semantic.zIndex.timelineCard]: "10",
      [F.semantic.zIndex.controls]: "1000",
      [F.semantic.zIndex.popover]: "1100",
      [F.semantic.zIndex.outline]: "50",
      // Toolbar tokens
      [F.component.toolbar.height]: "56px",
      [F.component.toolbar.padding]: "16px",
      [F.component.toolbar.background]: r.toolbarBgColor ?? c,
      [F.component.toolbar.button.size]: "32px",
      [F.component.toolbar.button.spacing]: "4px",
      // Maintain backward compatibility with old vars system
      [ne.color.background]: r.timelineBgColor ?? r.cardBgColor ?? a,
      [ne.color.text]: r.textColor ?? t,
      [ne.color.primary]: r.primary ?? "#3b82f6",
      [ne.color.secondary]: r.secondary ?? (i ? "#94a3b8" : "#64748b"),
      [ne.color.muted]: l,
      [ne.color.cardBg]: r.cardBgColor ?? o,
      [ne.color.cardTitle]: r.cardTitleColor ?? r.titleColor ?? t,
      [ne.color.cardSubtitle]: r.cardSubtitleColor ?? (i ? "#d1d5db" : "#374151"),
      [ne.color.cardDetails]: r.cardDetailsColor ?? (i ? "#9ca3af" : "#4b5563"),
      [ne.color.toolbarBg]: r.toolbarBgColor ?? c,
      [ne.color.toolbarBtnBg]: r.toolbarBtnBgColor ?? m,
      [ne.color.toolbarText]: r.toolbarTextColor ?? g,
      [ne.color.icon]: r.iconColor ?? r.primary ?? "#3b82f6",
      [ne.color.buttonBorder]: r.buttonBorderColor ?? s,
      [ne.color.buttonHoverBorder]: r.buttonHoverBorderColor ?? r.primary ?? "#3b82f6",
      [ne.color.buttonHoverBg]: r.buttonHoverBgColor ?? u,
      [ne.color.buttonActiveBg]: r.buttonActiveBgColor ?? r.primary ?? "#3b82f6",
      [ne.color.shadow]: r.shadowColor ?? d
    }),
    "--timeline-bg-color": r.timelineBgColor ?? r.cardBgColor ?? a,
    "--timeline-text-color": r.textColor ?? t,
    "--timeline-primary-color": r.primary ?? "#3b82f6",
    "--timeline-secondary-color": r.secondary ?? (i ? "#94a3b8" : "#64748b"),
    "--timeline-card-bg-color": r.cardBgColor ?? o,
    "--timeline-muted-color": l,
    "--timeline-toolbar-bg-color": r.toolbarBgColor ?? c,
    "--timeline-shadow-color": r.shadowColor ?? d,
    // Nested card custom properties
    "--nested-card-bg-color": r.nestedCardBgColor ?? (i ? "#1f2937" : "#f8fafc"),
    "--nested-card-title-color": r.nestedCardTitleColor ?? (i ? "#93c5fd" : "#1e40af"),
    "--nested-card-subtitle-color": r.nestedCardSubtitleColor ?? (i ? "#cbd5e1" : "#475569"),
    "--nested-card-details-color": r.nestedCardDetailsColor ?? (i ? "#9ca3af" : "#64748b"),
    // Icon custom properties
    "--icon-bg-color": r.iconBackgroundColor ?? (i ? "#374151" : "#e2e8f0"),
    "--icon-color": r.iconColor ?? r.primary ?? "#3b82f6",
    // Active state custom properties
    "--title-active-color": r.titleColorActive ?? (i ? "#60a5fa" : "#1d4ed8"),
    "--details-color": r.detailsColor ?? (i ? "#cbd5e1" : "#475569"),
    // Dark mode specific custom properties
    "--search-highlight-color": r.searchHighlightColor ?? (i ? "#451a03" : "#fef3c7"),
    "--glow-color": r.glowColor ?? "rgba(37, 99, 235, 0.2)"
  };
}
var Or = "_7vog1r0", Mr = "_7vog1r1";
const Oi = () => /* @__PURE__ */ f(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    fill: "currentColor",
    children: /* @__PURE__ */ f("path", { d: "M6 18h12v2H6zm5-14v8.586L6.707 8.293 5.293 9.707 12 16.414l6.707-6.707-1.414-1.414L13 12.586V4z" })
  }
), Mi = () => /* @__PURE__ */ f(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 2,
    children: /* @__PURE__ */ f("path", { d: "M20 6 9 17l-5-5" })
  }
), Di = () => /* @__PURE__ */ f(
  "svg",
  {
    "data-testid": "chev-down-icon",
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    style: { display: "block", width: "100%", height: "100%" },
    children: /* @__PURE__ */ f("path", { d: "m6 9 6 6 6-6" })
  }
), Ri = Q.memo(Di), Fi = () => /* @__PURE__ */ f(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    style: { display: "block", width: "100%", height: "100%" },
    children: /* @__PURE__ */ f("polyline", { points: "15 18 9 12 15 6" })
  }
), Dr = Q.memo(Fi), $i = () => /* @__PURE__ */ f(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    style: { display: "block", width: "100%", height: "100%" },
    children: /* @__PURE__ */ f("polyline", { points: "9 18 15 12 9 6" })
  }
), Bt = Q.memo($i);
function Rr() {
  return /* @__PURE__ */ f(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      width: 24,
      height: 24,
      viewBox: "0 0 24 24",
      fill: "none",
      stroke: "currentColor",
      strokeWidth: 2,
      strokeLinecap: "round",
      strokeLinejoin: "round",
      className: "prefix__feather prefix__feather-x",
      children: /* @__PURE__ */ f("path", { d: "M18 6L6 18M6 6l12 12" })
    }
  );
}
const qi = (e) => /* @__PURE__ */ f(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    fill: "currentColor",
    children: /* @__PURE__ */ f("path", { d: "M19 3H5c-1.103 0-2 .897-2 2v4h18V5c0-1.103-.897-2-2-2zM3 19c0 1.103.897 2 2 2h8V11H3v8zm12 2h4c1.103 0 2-.897 2-2v-8h-6v10z" })
  }
), Hi = () => /* @__PURE__ */ f(
  "svg",
  {
    "data-testid": "maximize-icon",
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    className: "feather feather-maximize-2",
    children: /* @__PURE__ */ f("path", { d: "M15 3h6v6M9 21H3v-6M21 3l-7 7M3 21l7-7" })
  }
), Fr = Q.memo(Hi), Bi = () => /* @__PURE__ */ f(
  "svg",
  {
    "data-testid": "minimize-icon",
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    className: "feather feather-minimize-2",
    children: /* @__PURE__ */ f("path", { d: "M4 14h6v6M20 10h-6V4M14 10l7-7M3 21l7-7" })
  }
), $r = Q.memo(Bi), Vi = () => /* @__PURE__ */ f(
  "svg",
  {
    "data-testid": "minus-icon",
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    style: { display: "block", width: "100%", height: "100%" },
    children: /* @__PURE__ */ f("path", { d: "M5 12h14" })
  }
), qr = Q.memo(Vi), Pi = () => /* @__PURE__ */ f(
  "svg",
  {
    "data-testid": "moon-icon",
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    className: "feather feather-moon",
    children: /* @__PURE__ */ f("path", { d: "M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z" })
  }
), Wi = Q.memo(Pi), ji = () => /* @__PURE__ */ f(
  "svg",
  {
    "data-testid": "plus-icon",
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    style: { display: "block", width: "100%", height: "100%" },
    children: /* @__PURE__ */ f("path", { d: "M12 5v14M5 12h14" })
  }
), Hr = Q.memo(ji), Gi = () => /* @__PURE__ */ ee(
  "svg",
  {
    "data-testid": "stop-icon",
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    className: "feather feather-stop-circle",
    children: [
      /* @__PURE__ */ f("circle", { cx: "12", cy: "12", r: "10" }),
      /* @__PURE__ */ f("path", { d: "M9 9h6v6H9z" })
    ]
  }
), Ui = Q.memo(Gi), Ki = () => /* @__PURE__ */ ee(
  "svg",
  {
    "data-testid": "sun-icon",
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    className: "feather feather-sun",
    children: [
      /* @__PURE__ */ f("circle", { cx: "12", cy: "12", r: "5" }),
      /* @__PURE__ */ f("path", { d: "M12 1v2M12 21v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42" })
    ]
  }
), Zi = Q.memo(Ki), Xi = () => /* @__PURE__ */ f(
  "svg",
  {
    "data-testid": "para-icon",
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "currentColor",
    children: /* @__PURE__ */ f("path", { d: "M9 16h2v4h2V6h2v14h2V6h3V4H9c-3.309 0-6 2.691-6 6s2.691 6 6 6zM9 6h2v8H9c-2.206 0-4-1.794-4-4s1.794-4 4-4z" })
  }
), Yi = Q.memo(Xi), Ji = () => /* @__PURE__ */ ee(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    className: "feather feather-chevrons-left",
    children: [
      /* @__PURE__ */ f("polyline", { points: "11 17 6 12 11 7" }),
      /* @__PURE__ */ f("polyline", { points: "18 17 13 12 18 7" })
    ]
  }
), Qi = Q.memo(Ji), ea = () => /* @__PURE__ */ ee(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    className: "feather feather-chevrons-right",
    children: [
      /* @__PURE__ */ f("polyline", { points: "13 17 18 12 13 7" }),
      /* @__PURE__ */ f("polyline", { points: "6 17 11 12 6 7" })
    ]
  }
), ta = Q.memo(ea), ra = () => /* @__PURE__ */ f(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    children: /* @__PURE__ */ f("polygon", { points: "5 3 19 12 5 21 5 3" })
  }
), na = Q.memo(ra);
var ia = "_1j3zf2m0", aa = "_1g3kfsd1 _1g3kfsd0 _12ug0496 _12ug049r", Pe = "_1g3kfsd3 _1g3kfsd2 _12ug0496 _12ug049r _12ug04913", Je = "_1g3kfsd4", We = "_1g3kfsd5", je = "_1g3kfsd7", Ge = "_1g3kfsd8", Ue = "_1g3kfsd9", Ke = "_1g3kfsda";
de({ defaultClassName: "_1g3kfsdb _1g3kfsd5", variantClassNames: { rotated: { true: "_1g3kfsdc _1g3kfsd6", false: "_1g3kfsdd" }, size: { sm: "_1g3kfsde", md: "_1g3kfsdf", lg: "_1g3kfsdg" } }, defaultVariants: { rotated: !1, size: "md" }, compoundVariants: [] });
var oa = "_1g3kfsdk _1g3kfsdj _12ug04936 _12ug0496 _12ug049r _12ug04913";
const Br = ({
  onNext: e,
  onPrevious: n,
  onFirst: r,
  onLast: i,
  disableLeft: a,
  disableRight: t,
  slideShowRunning: o,
  onReplay: l,
  slideShowEnabled: c,
  onToggleDarkMode: m,
  isDark: g,
  onPaused: s
}) => {
  const {
    mode: u,
    flipLayout: d,
    disableInteraction: h,
    buttonTexts: v,
    classNames: y,
    enableDarkToggle: b
  } = ce(), p = T(
    () => d && u === "HORIZONTAL",
    [d, u]
  ), _ = T(
    () => a || o,
    [a, o]
  ), R = T(
    () => t || o,
    [t, o]
  ), M = D(() => {
    s?.();
  }, [s]), S = D(() => {
    l?.();
  }, [l]), A = T(
    () => d ? v?.next : v?.previous,
    [d, v?.next, v?.previous]
  ), q = T(
    () => d ? v?.previous : v?.next,
    [d, v?.previous, v?.next]
  ), k = T(
    () => o ? v?.stop : v?.play,
    [o, v?.stop, v?.play]
  ), x = T(
    () => d ? v?.first : v?.last,
    [d, v?.first, v?.last]
  ), L = T(
    () => d ? v?.last : v?.first,
    [d, v?.last, v?.first]
  ), $ = T(() => "", []), W = T(() => "", []);
  return /* @__PURE__ */ ee("div", { className: oa, children: [
    /* @__PURE__ */ ee("output", { className: ia, "aria-live": "polite", children: [
      $,
      W && ` ${W}`
    ] }),
    /* @__PURE__ */ ee(
      "div",
      {
        className: ie(aa, "timeline-controls", y?.controls),
        "aria-label": "Timeline Navigation",
        role: "toolbar",
        children: [
          h ? null : /* @__PURE__ */ ee(Se, { children: [
            /* @__PURE__ */ f(
              "div",
              {
                className: ie(Pe, { [Je]: _ }),
                children: /* @__PURE__ */ f(
                  "button",
                  {
                    className: ie(
                      We,
                      je,
                      Ge,
                      Ue
                    ),
                    onClick: p ? i : r,
                    title: L,
                    "aria-label": L,
                    "aria-disabled": a,
                    "aria-controls": "timeline-main-wrapper",
                    tabIndex: a ? -1 : 0,
                    "data-test-id": "jump-to-first",
                    children: /* @__PURE__ */ f("span", { className: Ke, children: /* @__PURE__ */ f(Qi, {}) })
                  }
                )
              }
            ),
            /* @__PURE__ */ f(
              "div",
              {
                className: ie(Pe, { [Je]: _ }),
                children: /* @__PURE__ */ f(
                  "button",
                  {
                    className: ie(
                      We,
                      je,
                      Ge,
                      Ue
                    ),
                    onClick: p ? e : n,
                    title: A,
                    "aria-label": A,
                    "aria-disabled": a,
                    "aria-controls": "timeline-main-wrapper",
                    tabIndex: a ? -1 : 0,
                    "data-test-id": "previous",
                    children: /* @__PURE__ */ f("span", { className: Ke, children: /* @__PURE__ */ f(Dr, {}) })
                  }
                )
              }
            ),
            /* @__PURE__ */ f(
              "div",
              {
                className: ie(Pe, { [Je]: R }),
                children: /* @__PURE__ */ f(
                  "button",
                  {
                    className: ie(
                      We,
                      je,
                      Ge,
                      Ue
                    ),
                    onClick: p ? n : e,
                    title: q,
                    "aria-label": q,
                    "aria-disabled": t,
                    "aria-controls": "timeline-main-wrapper",
                    tabIndex: t ? -1 : 0,
                    "data-test-id": "next",
                    children: /* @__PURE__ */ f("span", { className: Ke, children: /* @__PURE__ */ f(Bt, {}) })
                  }
                )
              }
            ),
            /* @__PURE__ */ f(
              "div",
              {
                className: ie(Pe, { [Je]: R }),
                children: /* @__PURE__ */ f(
                  "button",
                  {
                    className: ie(
                      We,
                      je,
                      Ge,
                      Ue
                    ),
                    onClick: p ? r : i,
                    title: x,
                    "aria-label": x,
                    "aria-disabled": t,
                    "aria-controls": "timeline-main-wrapper",
                    tabIndex: t ? -1 : 0,
                    "data-test-id": "jump-to-last",
                    children: /* @__PURE__ */ f("span", { className: Ke, children: /* @__PURE__ */ f(ta, {}) })
                  }
                )
              }
            )
          ] }),
          /* @__PURE__ */ f("div", { className: Pe, children: c && /* @__PURE__ */ f(
            "button",
            {
              className: ie(
                We,
                je,
                Ge,
                Ue
              ),
              onClick: o ? M : S,
              title: k,
              tabIndex: 0,
              "aria-controls": "timeline-main-wrapper",
              "aria-label": k,
              "aria-pressed": o ? "true" : "false",
              "data-test-id": "play-pause",
              children: /* @__PURE__ */ f("span", { className: Ke, children: o ? /* @__PURE__ */ f(Ui, {}) : /* @__PURE__ */ f(na, {}) })
            }
          ) }),
          b ? /* @__PURE__ */ f(
            "div",
            {
              className: ie(Pe, { [Je]: o }),
              children: /* @__PURE__ */ f(
                "button",
                {
                  className: ie(
                    We,
                    je,
                    Ge,
                    Ue
                  ),
                  onClick: m,
                  title: g ? v?.light : v?.dark,
                  tabIndex: 0,
                  "aria-controls": "timeline-main-wrapper",
                  "aria-label": g ? v?.light : v?.dark,
                  "aria-pressed": g ? "true" : "false",
                  "data-test-id": "dark-toggle",
                  children: /* @__PURE__ */ f("span", { className: Ke, children: g ? /* @__PURE__ */ f(Zi, {}) : /* @__PURE__ */ f(Wi, {}) })
                }
              )
            }
          ) : null
        ]
      }
    )
  ] }, "control-wrapper");
};
Br.displayName = "Timeline Control";
const Qe = () => {
  const e = typeof navigator < "u" ? navigator.userAgent : "", n = typeof navigator < "u" ? navigator.vendor : "";
  return {
    isChrome: /Chrome/.test(e) && !/Edge/.test(e),
    isFirefox: /Firefox/.test(e),
    isSafari: /Safari/.test(e) && !/Chrome/.test(e) && /Apple/.test(n),
    isEdge: /Edge/.test(e) || /Edg\//.test(e),
    isIE: /Trident/.test(e),
    isMobile: /Mobi|Android/i.test(e),
    // Safari version detection for method selection
    safariVersion: /Safari/.test(e) && !/Chrome/.test(e) ? parseFloat(
      (e.match(/Version\/(\d+\.\d+)/) || ["", "0"])[1] || "0"
    ) : 0,
    // Chrome version for modern API support
    chromeVersion: /Chrome/.test(e) ? parseInt((e.match(/Chrome\/(\d+)/) || ["", "0"])[1] || "0", 10) : 0
  };
}, sa = (e, n = {}) => {
  const [r, i] = Y(!1), [a, t] = Y(null), o = D(() => {
    if (typeof document > "u" || typeof navigator > "u")
      return !1;
    const u = document, d = document.createElement("div"), h = Qe(), v = !!(u.fullscreenEnabled || u.mozFullScreenEnabled || u.webkitFullscreenEnabled || u.msFullscreenEnabled), y = !!(d.requestFullscreen || d.mozRequestFullScreen || d.webkitRequestFullscreen || d.webkitRequestFullScreen || d.msRequestFullscreen), b = !!(u.exitFullscreen || u.mozCancelFullScreen || u.webkitExitFullscreen || u.webkitCancelFullScreen || u.msExitFullscreen);
    if (h.isSafari && h.isMobile)
      return !1;
    const p = typeof window < "u" && (window.isSecureContext || location.protocol === "https:" || location.hostname === "localhost");
    return v && y && b && p;
  }, []), l = D(() => {
    if (typeof document > "u") return null;
    const u = document;
    return u.fullscreenElement || u.mozFullScreenElement || u.webkitFullscreenElement || u.msFullscreenElement || null;
  }, []), c = D(async () => {
    if (!o() || !e.current) {
      const u = o() ? "Element reference is not available" : "Fullscreen API is not supported in this browser";
      throw t(u), n.onError?.(u), new Error(u);
    }
    try {
      t(null);
      const u = e.current, d = Qe();
      let h = null;
      if (u.requestFullscreen ? h = () => u.requestFullscreen({ navigationUI: "hide" }) : d.isSafari ? u.webkitRequestFullscreen ? h = () => u.webkitRequestFullscreen?.() || Promise.resolve() : u.webkitRequestFullScreen && (h = () => u.webkitRequestFullScreen?.() || Promise.resolve()) : d.isChrome && u.webkitRequestFullscreen ? h = () => u.webkitRequestFullscreen?.() || Promise.resolve() : d.isFirefox && u.mozRequestFullScreen ? h = () => u.mozRequestFullScreen?.() || Promise.resolve() : d.isEdge && u.msRequestFullscreen ? h = () => u.msRequestFullscreen?.() || Promise.resolve() : u.webkitRequestFullscreen ? h = () => u.webkitRequestFullscreen?.() || Promise.resolve() : u.webkitRequestFullScreen ? h = () => u.webkitRequestFullScreen?.() || Promise.resolve() : u.mozRequestFullScreen ? h = () => u.mozRequestFullScreen?.() || Promise.resolve() : u.msRequestFullscreen && (h = () => u.msRequestFullscreen?.() || Promise.resolve()), !h)
        throw new Error(
          "No compatible fullscreen method found for this browser"
        );
      await h();
    } catch (u) {
      let d = "Failed to enter fullscreen";
      if (u instanceof Error) {
        const { message: h } = u, v = Qe();
        h.includes("denied") || h.includes("not allowed") ? d = "Fullscreen request denied. User interaction may be required." : h.includes("security") || h.includes("permission") ? d = "Fullscreen blocked for security reasons. Ensure HTTPS or localhost." : v.isSafari && h.includes("not supported") ? d = "Fullscreen not supported in this Safari version. Try updating your browser." : v.isFirefox && h.includes("unavailable") ? d = "Firefox fullscreen unavailable. Check browser settings." : d = h;
      }
      throw t(d), n.onError?.(d), new Error(d);
    }
  }, [e, o, n]), m = D(async () => {
    if (!o()) {
      const u = "Fullscreen API is not supported in this browser";
      throw t(u), n.onError?.(u), new Error(u);
    }
    try {
      t(null);
      const u = document, d = Qe();
      let h = null;
      if (u.exitFullscreen ? h = () => u.exitFullscreen() : d.isSafari ? u.webkitExitFullscreen ? h = () => u.webkitExitFullscreen?.() || Promise.resolve() : u.webkitCancelFullScreen && (h = () => u.webkitCancelFullScreen?.() || Promise.resolve()) : d.isChrome && u.webkitExitFullscreen ? h = () => u.webkitExitFullscreen?.() || Promise.resolve() : d.isFirefox && u.mozCancelFullScreen ? h = () => u.mozCancelFullScreen?.() || Promise.resolve() : d.isEdge && u.msExitFullscreen ? h = () => u.msExitFullscreen?.() || Promise.resolve() : u.webkitExitFullscreen ? h = () => u.webkitExitFullscreen?.() || Promise.resolve() : u.webkitCancelFullScreen ? h = () => u.webkitCancelFullScreen?.() || Promise.resolve() : u.mozCancelFullScreen ? h = () => u.mozCancelFullScreen?.() || Promise.resolve() : u.msExitFullscreen && (h = () => u.msExitFullscreen?.() || Promise.resolve()), !h)
        throw new Error(
          "No compatible exit fullscreen method found for this browser"
        );
      await h();
    } catch (u) {
      let d = "Failed to exit fullscreen";
      if (u instanceof Error) {
        const { message: h } = u, v = Qe();
        h.includes("denied") || h.includes("not allowed") ? d = "Exit fullscreen request denied. Try pressing Escape key." : v.isSafari && h.includes("not supported") ? d = "Exit fullscreen not supported in this Safari version." : v.isFirefox && h.includes("unavailable") ? d = "Firefox exit fullscreen unavailable. Try Escape key." : d = h;
      }
      throw t(d), n.onError?.(d), new Error(d);
    }
  }, [o, n]), g = D(async () => {
    r ? await m() : await c();
  }, [r, c, m]), s = D(() => {
    const u = l(), d = !!u && u === e.current;
    d !== r && (i(d), d ? n.onEnter?.() : n.onExit?.());
  }, [l, e, r, n]);
  return U(() => {
    if (!o()) return;
    const u = [
      "fullscreenchange",
      // Standard
      "mozfullscreenchange",
      // Firefox
      "webkitfullscreenchange",
      // Chrome, Opera, newer Safari
      "msfullscreenchange"
      // Internet Explorer/Edge
    ], d = [
      "fullscreenerror",
      "mozfullscreenerror",
      "webkitfullscreenerror",
      "msfullscreenerror"
    ], h = () => {
      t("Fullscreen request was denied or failed"), n.onError?.("Fullscreen request was denied or failed");
    };
    return u.forEach((v) => {
      document.addEventListener(v, s);
    }), d.forEach((v) => {
      document.addEventListener(v, h);
    }), s(), () => {
      u.forEach((v) => {
        document.removeEventListener(v, s);
      }), d.forEach((v) => {
        document.removeEventListener(v, h);
      });
    };
  }, [o, s]), U(() => {
    const u = (d) => {
      d.key === "Escape" && r && m();
    };
    return r && document.addEventListener("keydown", u), () => {
      document.removeEventListener("keydown", u);
    };
  }, [r, m]), {
    isFullscreen: r,
    isSupported: o(),
    toggleFullscreen: g,
    enterFullscreen: c,
    exitFullscreen: m,
    error: a
  };
};
var la = de({ defaultClassName: "gmmgf97 gmmgf91 etntiu3k etntiu1x etntiu1 etntiu0 _1v4ezefbm _1v4ezefbr _1v4ezefca _1v4ezefce etntiu4 etntiu1q _1v4ezef9 _1v4ezef10 _1v4ezef1c _1v4ezef7x _1v4ezef8r _1v4ezef9r _1v4ezefbv _1v4ezefbx etntiu20 etntiu21 etntiu1r _1v4ezef2u _1v4ezef8o etntiu25 etntiu1u etntiu28 etntiu3m _1ta47sat gmmgf90 _1v4ezef6 _1v4ezefi", variantClassNames: { size: { small: "gmmgf98 gmmgf92", medium: "gmmgf99 gmmgf93", large: "gmmgf9a gmmgf94" }, isFullscreen: { true: "gmmgf9b gmmgf95", false: "gmmgf9c gmmgf96" } }, defaultVariants: { size: "medium", isFullscreen: !1 }, compoundVariants: [] });
de({ defaultClassName: "gmmgf97 gmmgf91 etntiu3k etntiu1x etntiu1 etntiu0 _1v4ezefbm _1v4ezefbr _1v4ezefca _1v4ezefce etntiu4 etntiu1q _1v4ezef9 _1v4ezef10 _1v4ezef1c _1v4ezef7x _1v4ezef8r _1v4ezef9r _1v4ezefbv _1v4ezefbx etntiu20 etntiu21 etntiu1r _1v4ezef2u _1v4ezef8o etntiu25 etntiu1u etntiu28 etntiu3m _1ta47sat gmmgf90 _1v4ezef6 _1v4ezefi", variantClassNames: { size: { small: "gmmgf98 gmmgf92", medium: "gmmgf99 gmmgf93", large: "gmmgf9a gmmgf94" }, isFullscreen: { true: "gmmgf9b gmmgf95", false: "gmmgf9c gmmgf96" } }, defaultVariants: { size: "medium", isFullscreen: !1 }, compoundVariants: [] });
const Vr = ge(
  pt(
    ({
      isFullscreen: e = !1,
      onToggle: n,
      theme: r,
      disabled: i = !1,
      size: a = "medium",
      className: t,
      ariaLabel: o,
      title: l,
      testId: c = "fullscreen-button",
      children: m,
      ...g
    }, s) => {
      const u = e ? "Exit fullscreen" : "Enter fullscreen", d = e ? "Exit Fullscreen (Esc)" : "Enter Fullscreen", h = o || u, v = l || d, y = (_) => {
        _.preventDefault(), _.stopPropagation(), i || n?.();
      }, b = (_) => {
        (_.key === "Enter" || _.key === " ") && !i && (_.preventDefault(), n?.());
      }, p = la({
        size: a,
        isFullscreen: e ? "true" : "false"
      });
      return /* @__PURE__ */ f(
        "button",
        {
          ref: s,
          className: `${t ?? ""} ${p}`,
          onClick: y,
          onKeyDown: b,
          disabled: i,
          "aria-label": h,
          title: v,
          "data-testid": c,
          type: "button",
          role: "button",
          ...g,
          children: m || (e ? /* @__PURE__ */ f($r, {}) : /* @__PURE__ */ f(Fr, {}))
        }
      );
    }
  )
);
Vr.displayName = "FullscreenButton";
function oe(e) {
  return Object.fromEntries(
    Object.entries(e).filter(([n, r]) => r !== void 0)
  );
}
const Pr = ge(
  pt(
    ({
      targetRef: e,
      theme: n,
      onEnterFullscreen: r,
      onExitFullscreen: i,
      onError: a,
      size: t = "medium",
      disabled: o = !1,
      className: l,
      ariaLabel: c,
      title: m,
      testId: g = "fullscreen-control",
      ...s
    }, u) => {
      const { isFullscreen: d, isSupported: h, toggleFullscreen: v, error: y } = sa(e, {
        onEnter: r || (() => {
        }),
        onExit: i || (() => {
        }),
        onError: a || (() => {
        })
      });
      return h ? /* @__PURE__ */ f(
        Vr,
        {
          ...s,
          ref: u,
          isFullscreen: d,
          onToggle: () => {
            v().catch((b) => {
              const p = b instanceof Error ? b.message : "Fullscreen operation failed";
              a?.(p);
            });
          },
          theme: n,
          disabled: o || !!y,
          size: t,
          testId: g,
          ...oe({
            className: l,
            ariaLabel: c
          }),
          ...m || y ? { title: m || `Fullscreen unavailable: ${y}` } : {}
        }
      ) : null;
    }
  )
);
Pr.displayName = "FullscreenControl";
var ca = "rlvwho1 rlvwho0 _1v4ezef6 _1v4ezefx _1v4ezef1f _1v4ezef6o", ua = "rlvwho3 etntiu1 etntiu0 _1v4ezefbm _1v4ezefbr _1v4ezefca _1v4ezefce etntiu3 rlvwho2 _1v4ezef6 _1v4ezefu _1v4ezef10 _1v4ezef6o", da = "rlvwho4", fa = "rlvwho6 rlvwho5 _1v4ezef6 _1v4ezef10 _1v4ezef1c", ma = "rlvwho8 rlvwho7 _1v4ezef6 _1v4ezef10 _1v4ezef1c", ha = "rlvwho9", va = "rlvwhob rlvwhoa _1v4ezef6", ga = "rlvwhoc", pa = "rlvwhod", ba = de({ defaultClassName: "rlvwhoe rlvwho3 etntiu1 etntiu0 _1v4ezefbm _1v4ezefbr _1v4ezefca _1v4ezefce etntiu3 rlvwho2 _1v4ezef6 _1v4ezefu _1v4ezef10 _1v4ezef6o", variantClassNames: { active: { true: "rlvwhof rlvwho4", false: "rlvwhog" } }, defaultVariants: { active: !1 }, compoundVariants: [] });
const Wr = ge(
  ({
    title: e,
    id: n,
    description: r,
    theme: i,
    onClick: a,
    active: t,
    selected: o = !1,
    selectable: l = !1
  }) => {
    const c = D((s) => a?.(s), [a]), m = D((s, u) => {
      s.key === "Enter" && c(u);
    }, []), g = `${ua} ${t ? da : ""} ${ba({ active: !!t })}`;
    return /* @__PURE__ */ ee(
      "li",
      {
        "data-testid": "list-item",
        onClick: () => c(n),
        tabIndex: 0,
        onKeyUp: (s) => m(s, n),
        className: g,
        children: [
          l ? /* @__PURE__ */ f("span", { className: fa, children: /* @__PURE__ */ f(
            "span",
            {
              role: "checkbox",
              "aria-checked": o,
              className: `${ma} ${o ? ha : ""}`,
              children: o && /* @__PURE__ */ f(Mi, {})
            }
          ) }) : null,
          /* @__PURE__ */ ee("div", { className: va, children: [
            /* @__PURE__ */ f("h1", { className: ga, children: e }),
            r && /* @__PURE__ */ f("p", { className: pa, children: r })
          ] })
        ]
      },
      n
    );
  }
);
Wr.displayName = "ListItem";
const Vt = ({
  items: e,
  theme: n,
  onClick: r,
  activeItemIndex: i,
  multiSelectable: a = !1
}) => {
  const t = T(
    () => e.map((c) => ({ ...c, id: c.id || et() })),
    [e]
  ), o = D(
    (c, m) => {
      a && m.onSelect ? Sn(() => {
        m.onSelect?.();
      }) : r?.(c);
    },
    [a, r]
  ), l = D(
    (c, m) => {
      const g = D(
        () => o(c.id, c),
        [c, o]
      );
      return /* @__PURE__ */ f(
        Wr,
        {
          ...c,
          theme: n || Ir,
          onClick: g,
          selectable: a,
          active: i === m
        },
        c.id
      );
    },
    [n, o, a, i]
  );
  return /* @__PURE__ */ f("ul", { className: ca, children: t.map(l) });
}, Ne = (e) => {
  const n = P(e);
  return U(() => {
    n.current = e;
  }, [e]), D((...r) => n.current(...r), []);
}, jr = /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/, Gr = /^rgb\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/, Ur = /^rgba\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*([\d.]+)\s*\)$/, Kr = /^hsl\(\s*(\d+)\s*,\s*(\d+)%\s*,\s*(\d+)%\s*\)$/, Zr = /^hsla\(\s*(\d+)\s*,\s*(\d+)%\s*,\s*(\d+)%\s*,\s*([\d.]+)\s*\)$/, ya = (e) => jr.test(e) ? "hex" : Gr.test(e) ? "rgb" : Ur.test(e) ? "rgba" : Kr.test(e) ? "hsl" : Zr.test(e) ? "hsla" : "unknown", wa = (e, n) => {
  const r = Gr.exec(e) || Ur.exec(e);
  if (!r) return "";
  const [, i, a, t] = r;
  return `rgba(${i}, ${a}, ${t}, ${n})`;
}, _a = (e, n) => {
  const r = Kr.exec(e) || Zr.exec(e);
  if (!r) return "";
  const [, i, a, t] = r;
  return `hsla(${i}, ${a}%, ${t}%, ${n})`;
};
function Ca(e, n, r = {}) {
  const {
    eventType: i = "click",
    enabled: a = !0,
    preventDefault: t = !1,
    stopPropagation: o = !1,
    excludeRefs: l = []
  } = r, c = Ne(n), m = P(a), g = Array.isArray(e) ? e : [e], s = T(() => [...g, ...l], [g, l]), u = D(
    (d) => {
      if (!m.current) return;
      const h = d.target;
      s.some((y) => {
        const b = y.current;
        return b && b.contains(h);
      }) || (t && d.preventDefault(), o && d.stopPropagation(), c());
    },
    [s, t, o, c]
  );
  U(() => {
    if (m.current = a, !a) return;
    const d = t || o || i === "touchstart" ? { passive: !1 } : { passive: !0 };
    return document.addEventListener(i, u, d), () => {
      document.removeEventListener(i, u);
    };
  }, [i, u, a, t, o]);
}
function Ta(e, n = {}) {
  const {
    enabled: r = !0,
    keys: i = "Escape",
    keyCodes: a = 27,
    eventType: t = "keyup",
    preventDefault: o = !0,
    stopPropagation: l = !1,
    metaKey: c = !1,
    ctrlKey: m = !1,
    altKey: g = !1,
    shiftKey: s = !1
  } = n, u = Ne(e), d = P(r), h = Array.isArray(i) ? i : [i], v = Array.isArray(a) ? a : [a], y = D(
    (b) => {
      if (!d.current || c && !b.metaKey || m && !b.ctrlKey || g && !b.altKey || s && !b.shiftKey) return;
      const p = h.includes(b.key), _ = b.key === void 0 && v.includes(b.keyCode);
      (p || _) && (o && b.preventDefault(), l && b.stopPropagation(), u(b));
    },
    [
      h,
      v,
      o,
      l,
      c,
      m,
      g,
      s,
      u
    ]
  );
  U(() => {
    if (d.current = r, !r) return;
    const b = o || l ? { passive: !1 } : { passive: !0 };
    return document.addEventListener(t, y, b), () => {
      document.removeEventListener(t, y);
    };
  }, [t, y, r, o, l]);
}
function xa(e, n = {}) {
  Ta(() => e(), n);
}
function ka(e, n) {
  Ca(e, n), xa(n);
}
var za = "_411j501 _411j500 _1v4ezefi _1v4ezeff _1ta47saw", Sa = "_411j503 etntiu1f etntiu1a _1v4ezefi _1v4ezef80 _1v4ezef30 etntiu1h etntiu1c etntiu1l etntiu1n etntiu1p _411j502 _1v4ezef6 _1v4ezef13 _1v4ezef1f _1v4ezefx _1v4ezefl", Aa = de({ defaultClassName: "_411j508 _411j503 etntiu1f etntiu1a _1v4ezefi _1v4ezef80 _1v4ezef30 etntiu1h etntiu1c etntiu1l etntiu1n etntiu1p _411j502 _1v4ezef6 _1v4ezef13 _1v4ezef1f _1v4ezefx _1v4ezefl", variantClassNames: { visible: { true: "_411j509 _411j504", false: "_411j50a" }, position: { top: "_411j50b _411j505", bottom: "_411j50c _411j506" }, leftMobile: { true: "_411j50d _411j507", false: "_411j50e" } }, defaultVariants: { visible: !1, position: "bottom", leftMobile: !1 }, compoundVariants: [] }), La = "_411j50g _411j50f _1v4ezef6 _1v4ezef10 _1v4ezef1l _1v4ezef2c", Ia = "_411j50i", Ea = "_411j50j", Na = "_411j50k", Oa = "_411j50m _411j50l _1v4ezef6 _1v4ezef10 _1v4ezef1i", Ma = "_411j50n", Da = "_411j50o";
const Ra = ge(({ children: e }) => /* @__PURE__ */ f("div", { className: Ma, children: e })), Fa = (e, n) => {
  switch (n.type) {
    case "TOGGLE":
      return { ...e, open: !e.open };
    case "CLOSE":
      return { ...e, open: !1 };
    case "SET_VISIBLE":
      return { ...e, isVisible: n.payload };
    default:
      return e;
  }
}, $a = ({
  children: e,
  position: n,
  placeholder: r,
  theme: i,
  width: a = 350,
  isDarkMode: t = !1,
  icon: o,
  $isMobile: l = !1
}) => {
  const c = P(null), m = P(null), [g, s] = An(Fa, {
    open: !1,
    isVisible: !1
  }), [u, d] = Y("center"), [h, v] = Y({
    top: 0,
    left: 0,
    width: 0
  }), [y, b] = Y(
    document.body
  ), p = D(() => {
    if (typeof document > "u") return null;
    const A = document;
    return A.fullscreenElement || A.webkitFullscreenElement || A.mozFullScreenElement || A.msFullscreenElement || null;
  }, []);
  U(() => {
    const A = () => {
      const k = p();
      b(k || document.body);
    };
    A();
    const q = [
      "fullscreenchange",
      "webkitfullscreenchange",
      "mozfullscreenchange",
      "msfullscreenchange"
    ];
    return q.forEach((k) => {
      document.addEventListener(k, A);
    }), () => {
      q.forEach((k) => {
        document.removeEventListener(k, A);
      });
    };
  }, [p]);
  const _ = D(() => {
    s({ type: "TOGGLE" });
  }, []), R = D(() => {
    s({ type: "CLOSE" });
  }, []), M = D((A) => {
    A.key === "Enter" && s({ type: "TOGGLE" });
  }, []);
  ka(c, R);
  const S = D(() => {
    if (!c.current) return;
    const A = c.current.getBoundingClientRect(), q = window.innerWidth, k = window.innerHeight, x = l ? Math.min(320, q * 0.9) : a;
    let L = A.left, $ = "left";
    if (l)
      L = (q - x) / 2, $ = "center";
    else {
      let N = A.left + A.width / 2 - x / 2;
      N >= 16 && N + x <= q - 16 ? (L = N, $ = "center") : A.left + x <= q - 16 ? (L = A.left, $ = "left") : A.right - x >= 16 ? (L = A.right - x, $ = "right") : (L = Math.max(
        16,
        Math.min(A.left, q - x - 16)
      ), $ = "left");
    }
    const W = 8;
    let O = A.bottom + W;
    const E = 400, w = k - A.bottom - W, z = A.top - W;
    w < E && z > E ? O = A.top - E - W : O = Math.min(O, k - E - 16), O = Math.max(16, O), v({ top: O, left: L, width: x }), d($);
  }, [a, l, n]);
  return Ln(() => {
    g.open && S();
  }, [g.open, S]), U(() => {
    if (!g.open) return;
    const A = () => {
      g.open && S();
    };
    return window.addEventListener("scroll", A, { passive: !0 }), window.addEventListener("resize", A, { passive: !0 }), () => {
      window.removeEventListener("scroll", A), window.removeEventListener("resize", A);
    };
  }, [g.open, S]), U(() => {
    g.open ? requestAnimationFrame(() => {
      s({ type: "SET_VISIBLE", payload: !0 });
    }) : s({ type: "SET_VISIBLE", payload: !1 });
  }, [g.open]), /* @__PURE__ */ f(Se, { children: /* @__PURE__ */ ee("div", { className: za, ref: c, children: [
    /* @__PURE__ */ ee(
      "button",
      {
        type: "button",
        onClick: _,
        onKeyDown: M,
        title: r,
        className: La,
        style: gt(i),
        "aria-expanded": g.open,
        "aria-haspopup": "dialog",
        "aria-label": r || "Open menu",
        children: [
          r && /* @__PURE__ */ f("span", { className: Na, children: r }),
          /* @__PURE__ */ f(
            "span",
            {
              className: [Ia, g.open ? Ea : ""].join(
                " "
              ),
              children: o || /* @__PURE__ */ f(Ri, {})
            }
          )
        ]
      }
    ),
    g.open && kr.createPortal(
      /* @__PURE__ */ ee(
        "div",
        {
          ref: m,
          className: [
            Sa,
            Aa({
              visible: g.isVisible,
              position: n === "bottom" ? "bottom" : "top",
              leftMobile: !!l
            })
          ].join(" "),
          style: {
            ...gt(i),
            width: `${h.width}px`,
            position: "fixed",
            zIndex: 99999,
            left: `${h.left}px`,
            top: `${h.top}px`,
            transform: "none"
          },
          "data-position-x": u,
          role: "dialog",
          "aria-modal": "false",
          "aria-labelledby": r ? void 0 : "popover-content",
          children: [
            /* @__PURE__ */ f("div", { className: Oa, children: /* @__PURE__ */ f(
              "button",
              {
                className: Da,
                onClick: R,
                type: "button",
                "aria-label": "Close menu",
                title: "Close menu",
                children: /* @__PURE__ */ f(Rr, {})
              }
            ) }),
            /* @__PURE__ */ f(Ra, { children: e })
          ]
        }
      ),
      y
    )
  ] }) });
}, Pt = ge($a), qa = ({
  onUpdateTimelineMode: e,
  theme: n,
  mode: r,
  isDarkMode: i,
  position: a,
  isMobile: t
}) => {
  const { buttonTexts: o, showAllCardsHorizontal: l } = ce(), c = T(() => /* @__PURE__ */ f(qi, {}), []), m = T(
    () => r,
    [l, r]
  ), g = T(
    () => ({
      alternating: o?.changeLayoutOptions?.alternating,
      horizontal: o?.changeLayoutOptions?.horizontal,
      horizontal_all: o?.changeLayoutOptions?.horizontal_all,
      vertical: o?.changeLayoutOptions?.vertical
    }),
    [o]
  ), s = T(
    () => [
      {
        description: g.vertical?.helpText || "",
        id: "VERTICAL",
        onSelect: () => e("VERTICAL"),
        selected: m === "VERTICAL",
        title: g.vertical?.text || "Vertical"
      },
      {
        description: g.alternating?.helpText || "",
        id: "VERTICAL_ALTERNATING",
        onSelect: () => e("VERTICAL_ALTERNATING"),
        selected: m === "VERTICAL_ALTERNATING",
        title: g.alternating?.text || "Alternating"
      }
    ],
    [m, g]
  ), u = T(
    () => [
      {
        description: g.horizontal?.helpText || "",
        id: "HORIZONTAL",
        onSelect: () => {
          e("HORIZONTAL");
        },
        selected: m === "HORIZONTAL",
        title: g.horizontal?.text || "Horizontal"
      },
      {
        description: g.horizontal_all?.helpText || "",
        id: "HORIZONTAL_ALL",
        onSelect: () => {
          e("HORIZONTAL_ALL");
        },
        selected: m === "HORIZONTAL_ALL",
        title: g.horizontal?.text || "Horizontal All"
      }
    ],
    [m, g]
  );
  return /* @__PURE__ */ f(
    Pt,
    {
      placeholder: o?.changeLayout || "Change layout",
      position: a,
      theme: n,
      isDarkMode: i,
      icon: c,
      $isMobile: t,
      children: /* @__PURE__ */ f(
        Vt,
        {
          items: r === "HORIZONTAL" || r === "HORIZONTAL_ALL" ? u : s,
          theme: n,
          multiSelectable: !0
        }
      )
    }
  );
}, Ha = ({
  activeItem: e,
  items: n,
  theme: r,
  onActivateItem: i,
  isDarkMode: a,
  position: t,
  isMobile: o
}) => {
  const { buttonTexts: l } = ce(), c = T(() => /* @__PURE__ */ f(Oi, {}), []);
  return /* @__PURE__ */ f(
    Pt,
    {
      placeholder: l?.jumpTo || "Jump to timeline item",
      position: t,
      theme: r,
      width: 400,
      isDarkMode: a,
      $isMobile: o,
      icon: c,
      children: /* @__PURE__ */ f(
        Vt,
        {
          items: n.map((m, g) => ({
            active: g === e,
            description: m.description,
            id: m.id,
            label: m.title,
            onSelect: () => {
            },
            title: m.title ?? `Item ${g + 1}`
          })),
          theme: r,
          onClick: (m) => m && i(m)
        }
      )
    }
  );
}, Ba = ({
  onChange: e,
  selectedDensity: n,
  theme: r,
  isDarkMode: i,
  position: a,
  isMobile: t
}) => {
  const { buttonTexts: o } = ce(), l = T(() => /* @__PURE__ */ f(Yi, {}), []), c = T(
    () => [
      {
        description: "Show less text",
        id: "LOW",
        onSelect: () => e("LOW"),
        selected: n === "LOW",
        title: "Low"
      },
      {
        description: "Show more text",
        id: "HIGH",
        onSelect: () => e("HIGH"),
        selected: n === "HIGH",
        title: "High"
      }
    ],
    [n]
  );
  return /* @__PURE__ */ f(
    Pt,
    {
      placeholder: o?.changeDensity || "Change text density",
      theme: r,
      isDarkMode: i,
      position: a,
      $isMobile: t,
      width: 300,
      icon: l,
      children: /* @__PURE__ */ f(Vt, { items: c, theme: r, multiSelectable: !0 })
    }
  );
};
var hr = "arb8eg0", Va = de({ defaultClassName: "arb8eg5 arb8eg2 _1v4ezef6 _1v4ezef10 _1v4ezef1l _1v4ezef6o _1v4ezef30 _1v4ezef80 _1v4ezef2c _1ta47sa10", variantClassNames: { size: { sm: "arb8eg6", md: "arb8eg7", lg: "arb8eg8" }, layout: { horizontal: "arb8eg9 arb8eg3 _1v4ezefu _1v4ezef1u", vertical: "arb8ega arb8eg4 _1v4ezefx _1v4ezef19" }, responsive: { true: "arb8egb", false: "arb8egc" }, sticky: { true: "arb8egd", false: "arb8ege" } }, defaultVariants: { size: "md", layout: "horizontal", responsive: !0, sticky: !1 }, compoundVariants: [] });
de({ defaultClassName: "arb8egm arb8egl _1v4ezef6 _1v4ezef10 _1v4ezef2c", variantClassNames: { type: { navigation: "arb8egn", search: "arb8ego", actions: "arb8egp" }, responsive: { true: "arb8egq", false: "arb8egr" }, visible: { true: "arb8egs", false: "arb8egt" } }, defaultVariants: { type: "navigation", responsive: !0, visible: !0 }, compoundVariants: [] });
var Pa = "arb8egv etntiu31 etntiu2x _1v4ezef3 _1v4ezef6o _1v4ezef2x _1v4ezef7x _1v4ezef8r _1v4ezefbv _1v4ezefbx etntiu33 etntiu2z arb8egu _1v4ezef6 _1v4ezef10 _1v4ezef29", Wa = "arb8egw etntiu2h etntiu2l etntiu2c _1v4ezef8r _1v4ezef9o etntiu2n etntiu2s etntiu2e _1v4ezefa0 etntiu2w", ja = "arb8egx etntiu2h etntiu2m etntiu2d _1v4ezef8o _1v4ezef9o etntiu2p etntiu2s etntiu2e _1v4ezefa0 etntiu2w", Ga = "arb8egz arb8egy _1v4ezef6 _1v4ezef10 _1v4ezef29", It = "arb8eg10 etntiu3k etntiu1x etntiu1 etntiu0 _1v4ezefbm _1v4ezefbr _1v4ezefca _1v4ezefce etntiu4 etntiu1q _1v4ezef9 _1v4ezef10 _1v4ezef1c _1v4ezef7x _1v4ezef8r _1v4ezef9r _1v4ezefbv _1v4ezefbx etntiu20 etntiu21 etntiu1r _1v4ezef2u _1v4ezef8o etntiu25 etntiu1u etntiu28 etntiu3m", Et = "arb8eg12 arb8eg11 _1v4ezef6 _1v4ezef10 _1v4ezef1c";
de({ defaultClassName: "arb8eg13 etntiu3k etntiu1x etntiu1 etntiu0 _1v4ezefbm _1v4ezefbr _1v4ezefca _1v4ezefce etntiu4 etntiu1q _1v4ezef9 _1v4ezef10 _1v4ezef1c _1v4ezef7x _1v4ezef8r _1v4ezef9r _1v4ezefbv _1v4ezefbx etntiu20 etntiu21 etntiu1r _1v4ezef2u _1v4ezef8o etntiu25 etntiu1u etntiu28 etntiu3m _1ta47sat", variantClassNames: { state: { default: "arb8eg14", active: "arb8eg15", minimized: "arb8eg16" }, size: { sm: "arb8eg17", md: "arb8eg18", lg: "arb8eg19" }, interactive: { true: "arb8eg1a etntiu1 etntiu0 _1v4ezefbm _1v4ezefbr _1v4ezefca _1v4ezefce etntiu2", false: "arb8eg1b" } }, defaultVariants: { state: "default", size: "md", interactive: !0 }, compoundVariants: [] });
var Ua = "arb8eg1d arb8eg1c _1v4ezef6 _1v4ezef10 _1v4ezef2u _1v4ezef2c", Ka = "arb8egm arb8egl _1v4ezef6 _1v4ezef10 _1v4ezef2c arb8egn arb8egq arb8egs", Za = "arb8egm arb8egl _1v4ezef6 _1v4ezef10 _1v4ezef2c arb8egp arb8egq arb8egs", Xa = "arb8egm arb8egl _1v4ezef6 _1v4ezef10 _1v4ezef2c arb8ego arb8egq arb8egs";
const vr = (e) => e == null ? "" : typeof e == "string" ? e : typeof e == "number" || typeof e == "boolean" ? String(e) : "", Ya = ({
  activeTimelineItem: e,
  slideShowEnabled: n,
  slideShowRunning: r,
  flipLayout: i,
  toggleDarkMode: a,
  onPaused: t,
  onFirst: o,
  onLast: l,
  onNext: c,
  onPrevious: m,
  onRestartSlideshow: g,
  totalItems: s,
  items: u = [],
  id: d,
  onActivateTimelineItem: h,
  onUpdateTimelineMode: v,
  onUpdateTextContentDensity: y,
  mode: b,
  searchQuery: p,
  onSearchChange: _,
  onClearSearch: R,
  onNextMatch: M,
  onPreviousMatch: S,
  totalMatches: A,
  currentMatchIndex: q,
  onSearchKeyDown: k,
  searchInputRef: x,
  timelineRef: L,
  onEnterFullscreen: $,
  onExitFullscreen: W,
  onFullscreenError: O,
  stickyToolbar: E
}) => {
  const {
    cardLess: w,
    enableQuickJump: z,
    toolbarPosition: C,
    enableLayoutSwitch: N,
    theme: B,
    isDarkMode: j,
    textContentDensity: I,
    isMobile: V,
    textResolver: H
  } = ce(), G = T(() => u.map((J) => ({
    id: J.id ?? "",
    title: vr(J.title),
    description: vr(J.cardSubtitle),
    ...oe({
      active: J.active
    })
  })), [u]), te = T(() => i ? e === s - 1 : e === 0, [i, e, s]), X = T(() => i ? e === 0 : e === s - 1, [i, e, s]), se = T(() => w || r, [w, r]), fe = T(() => u.every((J) => J.cardDetailedText), []), re = (J) => {
    _(J.target.value);
  }, ae = (J) => {
    const me = J.relatedTarget;
    me && (me.closest('[data-testid*="timeline"]') || me.closest(".timeline-card") || me.closest(".timeline-item")) && setTimeout(() => {
      x?.current && x.current.focus();
    }, 10);
  }, ue = () => {
    R();
  }, K = (J) => {
    J.key === "Enter" && A > 0 && (J.preventDefault(), k ? k(J) : M());
  }, we = T(
    () => A === 0 || r,
    [A, r]
  ), pe = T(() => d ? `timeline-search-info-${d}` : "timeline-search-info", [d]);
  return /* @__PURE__ */ ee(
    "div",
    {
      className: Va({ sticky: !!E }),
      role: "toolbar",
      "aria-label": "Timeline toolbar",
      "aria-orientation": "horizontal",
      children: [
        /* @__PURE__ */ f(
          "div",
          {
            className: Ka,
            role: "group",
            "aria-label": "Timeline navigation controls",
            children: /* @__PURE__ */ f(
              Br,
              {
                disableLeft: te,
                disableRight: X,
                id: d,
                isDark: j,
                onToggleDarkMode: a,
                activeTimelineItem: e || 0,
                totalItems: s,
                ...oe({
                  onFirst: o,
                  onLast: l,
                  onNext: c,
                  onPrevious: m,
                  onReplay: g,
                  slideShowEnabled: n,
                  slideShowRunning: r,
                  onPaused: t
                })
              }
            )
          }
        ),
        /* @__PURE__ */ f(
          "div",
          {
            className: `${Xa} ${hr}`,
            role: "search",
            "aria-label": "Timeline search",
            children: /* @__PURE__ */ ee("div", { className: Pa, children: [
              /* @__PURE__ */ f(
                "input",
                {
                  ref: x,
                  type: "search",
                  placeholder: H.searchPlaceholder(),
                  value: p,
                  onChange: re,
                  onKeyDown: (J) => {
                    if (J.key === "Escape") {
                      J.preventDefault(), ue();
                      return;
                    }
                    if (J.key === "Enter" && A > 0) {
                      J.preventDefault(), J.shiftKey ? S() : M();
                      return;
                    }
                    K(J);
                  },
                  onBlur: ae,
                  "aria-label": H.searchAriaLabel(),
                  disabled: r,
                  "aria-keyshortcuts": "Enter Shift+Enter Escape",
                  "aria-describedby": p && A > 0 ? pe : void 0,
                  autoComplete: "off",
                  spellCheck: "false",
                  className: Wa
                }
              ),
              p && /* @__PURE__ */ f(
                "button",
                {
                  className: It,
                  onClick: ue,
                  title: H.clearSearch(),
                  "aria-label": H.clearSearch(),
                  type: "button",
                  children: /* @__PURE__ */ f("span", { className: Et, children: /* @__PURE__ */ f(Rr, {}) })
                }
              ),
              /* @__PURE__ */ ee(
                "div",
                {
                  className: Ga,
                  role: "group",
                  "aria-label": "Search navigation",
                  children: [
                    A > 0 && /* @__PURE__ */ f(
                      "span",
                      {
                        id: pe,
                        role: "status",
                        "aria-live": "polite",
                        "aria-atomic": "true",
                        className: ja,
                        "aria-label": `Search result ${q + 1} of ${A}`,
                        children: `${q + 1} / ${A}`
                      }
                    ),
                    p && A === 0 && /* @__PURE__ */ f(
                      "span",
                      {
                        role: "status",
                        "aria-live": "polite",
                        "aria-atomic": "true",
                        style: {
                          position: "absolute",
                          width: 1,
                          height: 1,
                          padding: 0,
                          margin: -1,
                          overflow: "hidden",
                          clip: "rect(0, 0, 0, 0)",
                          whiteSpace: "nowrap",
                          border: 0
                        },
                        children: H.noSearchResults()
                      }
                    ),
                    p && /* @__PURE__ */ ee(Se, { children: [
                      /* @__PURE__ */ f(
                        "button",
                        {
                          className: It,
                          onClick: S,
                          title: H.previousMatch(),
                          "aria-label": H.previousMatch(),
                          disabled: we,
                          type: "button",
                          children: /* @__PURE__ */ f("span", { className: Et, children: /* @__PURE__ */ f(Dr, {}) })
                        }
                      ),
                      /* @__PURE__ */ f(
                        "button",
                        {
                          className: It,
                          onClick: M,
                          title: H.nextMatch(),
                          "aria-label": H.nextMatch(),
                          disabled: we,
                          type: "button",
                          children: /* @__PURE__ */ f("span", { className: Et, children: /* @__PURE__ */ f(Bt, {}) })
                        }
                      )
                    ] })
                  ]
                }
              )
            ] })
          }
        ),
        /* @__PURE__ */ f("div", { className: Za, role: "group", "aria-label": "Timeline actions", children: /* @__PURE__ */ ee(
          "div",
          {
            className: `${Ua} ${hr}`,
            style: { visibility: se ? "hidden" : "visible" },
            role: "group",
            "aria-label": "Additional timeline controls",
            children: [
              /* @__PURE__ */ f("div", { className: "control-wrapper", children: z ? /* @__PURE__ */ f(
                Ha,
                {
                  activeItem: e ?? 0,
                  isDarkMode: j,
                  items: G,
                  onActivateItem: h,
                  theme: B,
                  position: C,
                  isMobile: V
                }
              ) : null }, "quick-jump"),
              /* @__PURE__ */ f("div", { className: "control-wrapper", children: !w && N ? /* @__PURE__ */ f(
                qa,
                {
                  isDarkMode: j,
                  theme: B,
                  onUpdateTimelineMode: (J) => v(J),
                  position: C,
                  isMobile: V,
                  ...oe({
                    mode: b
                  })
                }
              ) : null }, "layout-switcher"),
              fe ? /* @__PURE__ */ f("div", { className: "control-wrapper", children: /* @__PURE__ */ f(
                Ba,
                {
                  isDarkMode: j,
                  theme: B,
                  onChange: y,
                  position: C,
                  selectedDensity: I,
                  isMobile: V
                }
              ) }, "change-density") : null,
              /* @__PURE__ */ f("div", { className: "control-wrapper", children: L && /* @__PURE__ */ f(
                Pr,
                {
                  targetRef: L,
                  theme: B,
                  size: "medium",
                  disabled: !1,
                  ...oe({
                    onEnterFullscreen: $,
                    onExitFullscreen: W,
                    onError: O
                  })
                }
              ) }, "fullscreen-control")
            ]
          },
          "timeline-extra-controls"
        ) })
      ]
    }
  );
}, $e = (e) => {
  if (e == null)
    return "";
  if (typeof e == "string")
    return e;
  if (Array.isArray(e))
    return e.map((n) => $e(n)).filter(Boolean).join(" ");
  if (Q.isValidElement(e)) {
    const n = e.props;
    if (n.children)
      return $e(n.children);
  }
  return "";
}, Ja = (e) => {
  try {
    const n = new URL(e), r = n.hostname.toLowerCase();
    return r === "www.youtube.com" || r === "youtube.com" || r === "youtu.be" ? {
      isValid: !0,
      platform: "youtube",
      origin: "https://www.youtube.com"
    } : r === "vimeo.com" || r === "player.vimeo.com" ? { isValid: !0, platform: "vimeo", origin: "https://vimeo.com" } : n.protocol === "https:" ? { isValid: !0, platform: "other", origin: n.origin } : { isValid: !1 };
  } catch {
    return { isValid: !1 };
  }
}, Qa = (e) => {
  if (e)
    try {
      e.querySelectorAll("iframe").forEach((r) => {
        const i = r.getAttribute("src") || "";
        if (!i || !r.contentWindow) return;
        const a = Ja(i);
        if (!a.isValid) return;
        const t = a.origin || "*";
        try {
          let o = "";
          a.platform === "youtube" ? o = '{"event":"command","func":"stopVideo","args":""}' : a.platform === "vimeo" ? o = '{"method":"pause"}' : o = '{"event":"command","func":"pause","args":""}', r.contentWindow.postMessage(o, t);
        } catch (o) {
          console.error("Error sending message to iframe:", o);
        }
      });
    } catch (n) {
      console.error("Error pausing video embeds:", n);
    }
}, gr = (e, n) => {
  if (e)
    try {
      e.querySelectorAll("img,video").forEach((i) => {
        i instanceof HTMLElement && (i.style.visibility = n ? "visible" : "hidden");
      });
    } catch (r) {
      console.error("Error toggling media visibility:", r);
    }
}, eo = (e, n, r) => {
  if (!e || !n) return null;
  try {
    const i = `timeline-${n.toLowerCase()}-item-${e}`;
    let a = document.getElementById(i);
    if (!a && r && (n === "HORIZONTAL" || n === "HORIZONTAL_ALL")) {
      const t = document.getElementById(r);
      t && (a = t.querySelector(
        `#timeline-card-${e}`
      ));
    }
    return a;
  } catch (i) {
    return console.error("Error finding timeline element:", i), null;
  }
}, to = ({
  items: e,
  onTimelineUpdated: n,
  handleTimelineItemClick: r
}) => {
  const [i, a] = Y(""), [t, o] = Y([]), [l, c] = Y(-1), m = P(null), g = P(0), s = P(
    void 0
  ), u = P(!0), d = P(n), h = P(r);
  d.current = n, h.current = r;
  const v = T(() => e.map((k, x) => {
    const L = [
      $e(k.title),
      $e(k.cardTitle),
      $e(k.cardSubtitle),
      Array.isArray(k.cardDetailedText) ? k.cardDetailedText.map($e).join(" ") : $e(k.cardDetailedText)
    ];
    return {
      index: x,
      content: L.filter(Boolean).join(" ").toLowerCase(),
      id: k.id
    };
  }), [e]), y = D((k = !1) => {
    !k && document.activeElement === m.current || requestAnimationFrame(() => {
      if (m.current && (k || document.activeElement !== m.current)) {
        m.current.focus();
        const x = m.current.value.length;
        m.current.setSelectionRange(x, x);
      }
    });
  }, []), b = D(
    (k) => {
      const x = k.trim();
      if (!x) {
        o([]), c(-1);
        return;
      }
      const L = x.toLowerCase(), $ = [], W = 100;
      for (let O = 0; O < v.length && !(v[O]?.content?.includes(L) && ($.push(O), $.length >= W)); O++)
        ;
      if (o($), $.length > 0) {
        c(0);
        const O = $[0], E = O !== void 0 ? v[O] : void 0;
        if (E?.id && O !== void 0) {
          g.current = O, s.current && clearTimeout(s.current);
          const w = u.current ? 100 : 400;
          u.current = !1, s.current = setTimeout(() => {
            d.current?.(O), h.current(E.id), requestAnimationFrame(() => {
              const z = E.id, N = document.querySelector(
                `[data-testid="vertical-item-row"][data-item-id="${z}"]`
              ) || document.getElementById(
                `timeline-card-${z}`
              );
              try {
                N?.focus?.({ preventScroll: !0 });
              } catch {
              }
            });
          }, w);
        }
      } else
        c(-1);
    },
    [v]
  ), p = Er(b, 200, {
    maxWait: 600,
    leading: !1,
    trailing: !0
  }), _ = D(
    (k) => {
      a(k), p(k);
    },
    [p]
  ), R = D(
    (k = !1) => {
      if (a(""), o([]), c(-1), p.cancel(), s.current && clearTimeout(s.current), u.current = !0, e.length > 0 && !k) {
        g.current = 0, d.current?.(0);
        const x = e[0];
        x?.id && h.current(x.id);
      }
      k || y(!0);
    },
    [e, p, y]
  ), M = D(
    (k) => {
      if (t.length === 0) return;
      const x = k === "next" ? (l + 1) % t.length : (l - 1 + t.length) % t.length;
      if (x === l) return;
      const L = t[x], $ = L !== void 0 ? v[L] : void 0;
      c(x), L !== void 0 && (g.current = L, d.current?.(L)), $?.id && (h.current($.id), requestAnimationFrame(() => {
        const W = $.id, E = document.querySelector(
          `[data-testid="vertical-item-row"][data-item-id="${W}"]`
        ) || document.getElementById(
          `timeline-card-${W}`
        );
        try {
          E?.focus?.({ preventScroll: !0 });
        } catch {
        }
      }), y(!0));
    },
    [t, l, v, y]
  ), S = D(
    () => M("next"),
    [M]
  ), A = D(
    () => M("prev"),
    [M]
  ), q = D(
    (k) => {
      switch (k.key) {
        case "Enter":
          t.length > 0 && (k.preventDefault(), S());
          break;
        case "Escape":
          k.preventDefault(), R();
          break;
      }
    },
    [t.length, S, R]
  );
  return U(() => () => {
    s.current && clearTimeout(s.current);
  }, []), {
    searchQuery: i,
    searchResults: t,
    currentMatchIndex: l,
    searchInputRef: m,
    activeItemIndex: g,
    handleSearchChange: _,
    clearSearch: R,
    handleNextMatch: S,
    handlePreviousMatch: A,
    handleSearchKeyDown: q
  };
}, ro = ({
  mode: e,
  hasFocus: n,
  flipLayout: r = !1,
  onNext: i,
  onPrevious: a,
  onFirst: t,
  onLast: o
}) => ({ handleKeySelection: D(
  (c) => {
    if (!n) return;
    const { key: m } = c;
    switch (m) {
      case "Home":
        c.preventDefault(), t();
        return;
      case "End":
        c.preventDefault(), o();
        return;
    }
    e === "HORIZONTAL" || e === "HORIZONTAL_ALL" ? m === "ArrowRight" ? (c.preventDefault(), r ? a() : i()) : m === "ArrowLeft" && (c.preventDefault(), r ? i() : a()) : (e === "VERTICAL" || e === "VERTICAL_ALTERNATING") && (m === "ArrowDown" ? (c.preventDefault(), c.stopPropagation(), i()) : m === "ArrowUp" && (c.preventDefault(), c.stopPropagation(), a()));
  },
  [e, r, n, i, a, t, o]
) }), vt = 300, no = (e) => e < 0.5 ? 8 * e * e * e * e : 1 - 8 * Math.pow(-e + 1, 4), pr = (e, n, r = vt, i = !1, a) => {
  const t = i ? e.scrollLeft : e.scrollTop, o = n - t, l = performance.now(), c = (m) => {
    const g = m - l, s = Math.min(g / r, 1), u = no(s), d = t + o * u;
    i ? e.scrollLeft = d : e.scrollTop = d, s < 1 && requestAnimationFrame(c);
  };
  requestAnimationFrame(c);
}, Xr = () => {
  const e = P(null), n = P(null), r = P(null);
  return U(() => () => {
    r.current && (clearTimeout(r.current), r.current = null), e.current && (cancelAnimationFrame(e.current), e.current = null);
  }, []), { scrollToElement: D(
    (a, t, o) => {
      a && (n.current === a && !o || (e.current && cancelAnimationFrame(e.current), e.current = requestAnimationFrame(() => {
        const l = t === "VERTICAL" || t === "VERTICAL_ALTERNATING";
        let c = null;
        if (typeof a.closest == "function" && (c = a.closest('[data-testid="timeline-main-wrapper"]')), c || (c = a.parentElement?.parentElement || null), !c) {
          typeof a.scrollIntoView == "function" && a.scrollIntoView({
            behavior: "smooth",
            block: l ? "center" : "nearest",
            inline: "center"
          });
          return;
        }
        const m = c.getBoundingClientRect(), g = a.getBoundingClientRect();
        if (l) {
          const s = c.scrollTop + (g.top - m.top) - m.height / 2 + g.height / 2;
          pr(
            c,
            s,
            vt,
            !1
          );
        } else {
          const s = c.scrollLeft + (g.left - m.left) - m.width / 2 + g.width / 2;
          pr(
            c,
            s,
            vt,
            !0
          );
        }
        n.current = a, r.current && clearTimeout(r.current), r.current = setTimeout(() => {
          n.current = null, r.current = null;
        }, vt + 100), e.current = null;
      })));
    },
    []
  ) };
}, io = ({
  items: e,
  mode: n,
  timelineId: r,
  slideShowRunning: i = !1,
  onTimelineUpdated: a
}) => {
  const t = P(-1), { scrollToElement: o } = Xr(), l = Ne(
    a || (() => {
    })
  ), c = T(() => {
    const h = /* @__PURE__ */ new Map();
    return e.forEach((v, y) => {
      v?.id && h.set(v.id, y);
    }), h;
  }, [e]), m = D(
    (h) => {
      if (n === "VERTICAL" || n === "VERTICAL_ALTERNATING") {
        const y = document.querySelector(
          `[data-testid="vertical-item-row"][data-item-id="${h}"]`
        );
        if (y)
          return y.hasAttribute("tabindex") || y.setAttribute("tabindex", "-1"), y;
        const b = document.querySelector(
          `.timeline-card-content[data-item-id="${h}"]`
        );
        if (b) {
          const _ = b.closest(
            '[data-testid="vertical-item-row"]'
          );
          if (_)
            return _.hasAttribute("tabindex") || _.setAttribute("tabindex", "-1"), _;
        }
        const p = document.querySelector(`[data-item-id="${h}"]`);
        if (p) {
          const _ = p.closest(
            '[data-testid="vertical-item-row"]'
          );
          if (_)
            return _.hasAttribute("tabindex") || _.setAttribute("tabindex", "-1"), _;
        }
      } else {
        const y = document.getElementById(
          `timeline-card-${h}`
        );
        if (y) {
          try {
            y.hasAttribute && y.setAttribute && (y.hasAttribute("tabindex") || y.setAttribute("tabindex", "-1"));
          } catch {
          }
          return y;
        }
        const b = document.getElementById(
          `timeline-${n.toLowerCase()}-item-${h}`
        );
        if (b) {
          try {
            if (!b.hasAttribute || !b.setAttribute)
              return b;
            b.hasAttribute("tabindex") || b.setAttribute("tabindex", "-1");
          } catch {
          }
          return b;
        }
        const p = document.querySelector(
          `[data-item-id="${h}"]`
        );
        if (p) {
          try {
            p.hasAttribute && p.setAttribute && (p.hasAttribute("tabindex") || p.setAttribute("tabindex", "-1"));
          } catch {
          }
          return p;
        }
      }
      const v = eo(h, n, r);
      if (v)
        try {
          v.hasAttribute && v.setAttribute && (v.hasAttribute("tabindex") || v.setAttribute("tabindex", "-1"));
        } catch {
        }
      return v;
    },
    [n, r]
  ), g = D(
    (h, v) => {
      t.current = h, l(h);
    },
    [e.length, l]
  ), s = D((h) => {
    t.current = h;
  }, []), u = D(
    (h, v) => {
      if (!h) return;
      const y = c.get(h);
      if (y === void 0 || (g(y, v), i)) return;
      const b = m(h);
      b && (o(b, n), requestAnimationFrame(() => {
        try {
          if (typeof b.focus == "function") {
            b.focus({ preventScroll: !0 });
            const p = b.closest(
              ".timeline-wrapper"
            );
            p && !p.contains(document.activeElement) && p.focus();
          }
        } catch {
        }
      }));
    },
    [
      c,
      g,
      m,
      n,
      o,
      i
    ]
  ), d = D(
    (h) => {
      if (!h) return;
      const v = c.get(h);
      if (v === void 0) return;
      const y = v + 1;
      if (y < e.length) {
        const b = Array.from(c.entries()).find(
          ([p, _]) => _ === y
        )?.[0];
        b && u(b, !0);
      } else {
        const b = Array.from(c.entries()).find(
          ([p, _]) => _ === 0
        )?.[0];
        b && u(b, !0);
      }
    },
    [u, c, e.length]
  );
  return {
    activeItemIndex: t,
    handleTimelineItemClick: u,
    handleTimelineItemElapsed: d,
    findTargetElement: m,
    itemsMap: c,
    syncActiveItemIndex: s
  };
}, ao = ({
  items: e,
  mode: n,
  timelineId: r,
  hasFocus: i,
  flipLayout: a = !1,
  slideShowRunning: t = !1,
  isKeyboardNavigation: o = !1,
  onTimelineUpdated: l,
  onNext: c,
  onPrevious: m,
  onFirst: g,
  onLast: s
}) => {
  const u = Ne(c || (() => {
  })), d = Ne(m || (() => {
  })), h = Ne(g || (() => {
  })), v = Ne(s || (() => {
  })), {
    activeItemIndex: y,
    handleTimelineItemClick: b,
    handleTimelineItemElapsed: p,
    syncActiveItemIndex: _
  } = io({
    items: e,
    mode: n,
    timelineId: r,
    slideShowRunning: t,
    ...oe({ onTimelineUpdated: l })
  });
  Xr();
  const R = D(() => {
    const k = y.current, x = k === -1 ? 0 : Math.min(k + 1, e.length - 1);
    if (e.length > 0 && (k === -1 || k < e.length - 1)) {
      const L = e[x];
      L?.id && b(L.id, !1), u();
    }
  }, [e, b, u]), M = D(() => {
    const k = y.current, x = k === -1 ? e.length - 1 : Math.max(k - 1, 0);
    if (e.length > 0 && (k === -1 || k > 0)) {
      const L = e[x];
      L?.id && b(L.id, !1), d();
    }
  }, [e, b, d]), S = D(() => {
    if (e.length > 0 && y.current !== 0) {
      const k = e[0];
      k?.id && b(k.id, !1), h();
    }
  }, [e, b, h]), A = D(() => {
    const k = e.length - 1;
    if (e.length > 0 && y.current !== k) {
      const x = e[k];
      x?.id && b(x.id, !1), v();
    }
  }, [e, b, v]), { handleKeySelection: q } = ro({
    mode: n,
    hasFocus: i,
    flipLayout: a,
    onNext: R,
    onPrevious: M,
    onFirst: S,
    onLast: A
  });
  return {
    activeItemIndex: y,
    handleTimelineItemClick: b,
    handleTimelineItemElapsed: p,
    handleNext: R,
    handlePrevious: M,
    handleFirst: S,
    handleLast: A,
    handleKeySelection: q,
    syncActiveItemIndex: _
  };
}, oo = /* @__PURE__ */ new Map([
  [
    "VERTICAL",
    "VERTICAL"
    /* VERTICAL */
  ],
  [
    "HORIZONTAL",
    "HORIZONTAL"
    /* HORIZONTAL */
  ],
  [
    "VERTICAL_ALTERNATING",
    "VERTICAL_ALTERNATING"
    /* VERTICAL_ALTERNATING */
  ],
  [
    "HORIZONTAL_ALL",
    "HORIZONTAL_ALL"
    /* HORIZONTAL_ALL */
  ]
]), so = ({
  initialMode: e,
  showAllCardsHorizontal: n = !1,
  updateHorizontalAllCards: r
}) => {
  const [i, a] = Y(
    e === "HORIZONTAL" && n ? "HORIZONTAL_ALL" : e
  ), t = Ne(
    r || (() => {
    })
  ), o = D(
    (l) => {
      const c = oo.get(l);
      if (!c || c === i) return;
      a(c), t(c === "HORIZONTAL_ALL");
    },
    [i, t]
  );
  return {
    timelineMode: i,
    handleTimelineUpdate: o
  };
};
function lo(e, n) {
  let r = !1, i = null;
  return function(...a) {
    r ? i = a : (e.apply(this, a), r = !0, setTimeout(() => {
      r = !1, i && (e.apply(this, i), i = null, r = !0, setTimeout(() => {
        r = !1;
      }, n));
    }, n));
  };
}
const co = ({
  mode: e,
  onScrollEnd: n,
  setNewOffset: r,
  scrollEndThrottleMs: i = 100,
  onNextItem: a,
  onPreviousItem: t,
  activeItemIndex: o,
  totalItems: l,
  isKeyboardNavigation: c = !1
}) => {
  const m = P(null), g = P(null);
  P(null);
  const s = P(r), u = P(n);
  s.current = r, u.current = n;
  const d = P(a), h = P(t);
  d.current = a, h.current = t;
  const v = D((p) => {
    const _ = m.current;
    _ && s.current && s.current(_, p);
  }, []), y = T(
    () => lo((p) => {
      if (e === "VERTICAL" || e === "VERTICAL_ALTERNATING") {
        const R = p.scrollTop + p.clientHeight, M = p.scrollHeight - 1;
        R >= M && u.current && u.current();
      } else {
        const R = p.scrollLeft + p.offsetWidth;
        p.scrollWidth <= R && u.current && u.current();
      }
    }, 16),
    // Throttle to 60fps for smooth scrolling
    [e, l, c]
  ), b = D(
    (p) => {
      const _ = p.target;
      y(_);
    },
    [y]
  );
  return {
    timelineMainRef: m,
    horizontalContentRef: g,
    handleScroll: v,
    handleMainScroll: b
  };
}, uo = ({
  mode: e,
  timelineMainRef: n,
  itemSelector: r = ".vertical-item-row",
  observerOptions: i,
  onIntersect: a
}) => {
  const t = P(null), o = P(/* @__PURE__ */ new Set()), l = D(
    (g) => {
      requestAnimationFrame(() => {
        g.forEach((s) => {
          const u = s.target;
          a ? a(u, s.isIntersecting) : s.isIntersecting ? gr(u, !0) : (gr(u, !1), Qa(u));
        });
      });
    },
    [a]
  ), c = D(() => {
    t.current && (t.current.disconnect(), o.current.clear());
    const g = {
      root: n.current,
      threshold: 0.1,
      // Slightly higher threshold for better performance
      rootMargin: "50px"
      // Preload content slightly before it becomes visible
    };
    return t.current = new IntersectionObserver(
      l,
      i || g
    ), t.current;
  }, [l, n]);
  U(() => {
    if (e === "HORIZONTAL") return;
    const g = c();
    return ((u) => {
      "requestIdleCallback" in window ? window.requestIdleCallback(u, { timeout: 100 }) : requestAnimationFrame(u);
    })(() => {
      const u = n.current;
      if (!u || !g) return;
      u.querySelectorAll(r).forEach((h) => {
        o.current.has(h) || (g.observe(h), o.current.add(h));
      });
    }), () => {
      g?.disconnect(), o.current.clear();
    };
  }, [e, c, n]);
  const m = D(() => {
    t.current?.disconnect(), o.current.clear();
  }, []);
  return {
    observer: t,
    cleanup: m
  };
}, fo = {
  thin: 100,
  "extra-light": 200,
  light: 300,
  regular: 400,
  medium: 500,
  "semi-bold": 600,
  bold: 700,
  "extra-bold": 800,
  black: 900
};
function Dt(e) {
  return typeof e == "number" ? Math.min(900, Math.max(100, Math.round(e / 100) * 100)) : fo[e] || 400;
}
function mo(e) {
  const { fontFamily: n, weights: r = [], display: i = "swap" } = e;
  if (!n || n.trim().length === 0)
    throw new Error("Font family name is required");
  const a = /* @__PURE__ */ new Set();
  r.forEach((l) => {
    if (l === "italic")
      a.add("400italic");
    else if (typeof l == "string" && l.includes("italic"))
      a.add(l);
    else
      try {
        const c = Dt(l);
        a.add(c.toString());
      } catch {
        console.warn(`Invalid font weight: ${l}`);
      }
  }), e.elements && Object.values(e.elements).forEach((l) => {
    if (l?.weight)
      try {
        const c = Dt(l.weight), m = l.style === "italic" ? "italic" : "";
        a.add(`${c}${m}`);
      } catch {
        console.warn(`Invalid element font weight: ${l.weight}`);
      }
    l?.style === "italic" && !l?.weight && a.add("400italic");
  }), a.size === 0 && (a.add("400"), a.add("700"));
  const t = Array.from(a).sort().join(";");
  return `https://fonts.googleapis.com/css2?family=${encodeURIComponent(n.replace(/\s+/g, "+"))}:wght@${t}&display=${i}`;
}
function ho(e) {
  return new Promise((n, r) => {
    const i = mo(e);
    if (Array.from(
      document.querySelectorAll('link[rel="stylesheet"]')
    ).find((o) => o.href === i)) {
      n();
      return;
    }
    if (e.preconnect !== !1) {
      const o = document.createElement("link");
      o.rel = "preconnect", o.href = "https://fonts.googleapis.com", document.querySelector('link[href="https://fonts.googleapis.com"]') || document.head.appendChild(o);
      const l = document.createElement("link");
      l.rel = "preconnect", l.href = "https://fonts.gstatic.com", l.crossOrigin = "anonymous", document.querySelector('link[href="https://fonts.gstatic.com"]') || document.head.appendChild(l);
    }
    const t = document.createElement("link");
    t.rel = "stylesheet", t.href = i, t.onload = () => n(), t.onerror = () => r(new Error(`Failed to load Google Font: ${e.fontFamily}`)), document.head.appendChild(t);
  });
}
function vo(e) {
  const n = {};
  return n["--timeline-font-family"] = `"${e.fontFamily}", system-ui, ui-sans-serif, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif`, e.elements && Object.entries(e.elements).forEach(([r, i]) => {
    const a = `--timeline-${r}`;
    if (n[`${a}-font-family`] = n["--timeline-font-family"] || "", i.weight) {
      const t = Dt(i.weight);
      n[`${a}-font-weight`] = t.toString();
    }
    i.style && (n[`${a}-font-style`] = i.style), i.size && (n[`${a}-font-size`] = i.size);
  }), n;
}
const go = ({
  children: e,
  googleFonts: n,
  className: r = ""
}) => {
  const [i, a] = Y(!1), [t, o] = Y(null);
  U(() => {
    if (!n) {
      a(!0);
      return;
    }
    a(!1), o(null), ho(n).then(() => {
      a(!0);
    }).catch((m) => {
      o(m.message), a(!0), console.warn("Failed to load Google Fonts:", m);
    });
  }, [n]);
  const l = T(() => !n || !i ? {} : vo(n), [n, i]);
  U(() => {
    if (!(!i || !l || Object.keys(l).length === 0))
      return Object.entries(l).forEach(([m, g]) => {
        document.documentElement.style.setProperty(m, g);
      }), () => {
        Object.keys(l).forEach((m) => {
          document.documentElement.style.removeProperty(m);
        });
      };
  }, [l, i]);
  const c = T(() => ({
    // Provide fallback fonts while loading
    fontFamily: n?.fontFamily ? `"${n.fontFamily}", system-ui, ui-sans-serif, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif` : void 0
  }), [n]);
  return /* @__PURE__ */ f(
    "div",
    {
      className: `timeline-font-provider ${r}`,
      style: c,
      "data-font-loaded": i,
      "data-font-error": !!t,
      children: e
    }
  );
};
var br = "_1m05k8t1 _1m05k8t0 _1v4ezef3f _1v4ezef40", po = "_1m05k8t2";
de({ defaultClassName: "_1m05k8t3 _1m05k8t1 _1m05k8t0 _1v4ezef3f _1v4ezef40", variantClassNames: { active: { true: "_1m05k8t4 _1m05k8t2", false: "_1m05k8t5" } }, defaultVariants: { active: !1 }, compoundVariants: [] });
var bo = de({ defaultClassName: "chzdno2 chzdno0 etntiu1f etntiu1a _1v4ezefi _1v4ezef80 _1v4ezef30 etntiu1i etntiu1d _1v4ezef33 etntiu1l etntiu1n etntiu1p _1ta47sat", variantClassNames: { borderless: { true: "chzdno3 chzdno1 _1ta47sat", false: "chzdno4 chzdno0 etntiu1f etntiu1a _1v4ezefi _1v4ezef80 _1v4ezef30 etntiu1i etntiu1d _1v4ezef33 etntiu1l etntiu1n etntiu1p _1ta47sat" } }, defaultVariants: { borderless: !1 }, compoundVariants: [] }), yo = "chzdno6 etntiu1 etntiu0 _1v4ezefbm _1v4ezefbr _1v4ezefca _1v4ezefce etntiu3 chzdno5 _1v4ezef6 _1v4ezef6o", wo = "chzdno8 chzdno7 _1v4ezef6 _1v4ezefx _1v4ezef6o _1v4ezef29", _o = de({ defaultClassName: "chzdnoc chzdno9 etntiu2h etntiu2j etntiu2a _1v4ezef8x _1v4ezef9u etntiu2n etntiu2s etntiu2e _1v4ezefa0 etntiu2w", variantClassNames: { active: { true: "chzdnod", false: "chzdnoe" } }, defaultVariants: { active: !1 }, compoundVariants: [] }), yr = "chzdnog etntiu2h etntiu2l etntiu2c _1v4ezef8r _1v4ezef9o etntiu2n etntiu2s etntiu2e _1v4ezefa0 etntiu2w", Co = "chzdnoh etntiu2h etntiu2m etntiu2d _1v4ezef8o _1v4ezef9o etntiu2p etntiu2s etntiu2e _1v4ezefa0 etntiu2w", Yr = "chzdnoj chzdnoi _1v4ezef6 _1v4ezef6o _1v4ezefx _1v4ezef13 _1v4ezef29", Jr = "chzdnol etntiu1x etntiu1 etntiu0 _1v4ezefbm _1v4ezefbr _1v4ezefca _1v4ezefce etntiu4 etntiu1q _1v4ezef9 _1v4ezef10 _1v4ezef1c _1v4ezef7x _1v4ezef8r _1v4ezef9r _1v4ezefbv _1v4ezefbx etntiu20 etntiu21 etntiu1r _1v4ezef2u _1v4ezef8o etntiu25 etntiu1u etntiu28 chzdnok _1v4ezef6 _1v4ezef29", Qr = "chzdnon chzdnom _1v4ezef6 _1v4ezef10 _1v4ezef1c";
const en = ({
  title: e,
  active: n,
  theme: r,
  align: i,
  classString: a
}) => {
  const t = "timeline-item-title", o = T(
    () => ie(
      t,
      n ? "active" : "",
      a,
      _o({ active: !!n }),
      br
      // Add the base CSS class that includes Google Fonts styling
    ),
    [n, a]
  );
  return /* @__PURE__ */ f(
    "div",
    {
      className: o,
      style: {
        textAlign: i || void 0,
        visibility: e ? "visible" : "hidden"
      },
      title: typeof e == "string" ? e : void 0,
      "data-ve-class": br,
      "data-ve-active-class": po,
      children: e
    }
  );
}, To = ({
  active: e,
  autoScroll: n,
  slideShowRunning: r,
  cardLess: i,
  showAllCardsHorizontal: a,
  id: t,
  onClick: o,
  mode: l,
  position: c,
  iconChild: m
}) => {
  const g = P(null), s = P(null), u = P(null), { disableClickOnCircle: d, disableInteraction: h, disableAutoScrollOnClick: v } = ce(), y = D(() => {
    !d && !h && !v && o && !r && o(t);
  }, [
    d,
    h,
    v,
    o,
    r,
    t
  ]);
  U(() => {
    if (e) {
      const S = g.current, A = s.current;
      if (S && A) {
        const q = S.offsetLeft, k = A.offsetLeft;
        n?.({
          pointOffset: q + k
        }), requestAnimationFrame(() => {
          try {
            S.focus({ preventScroll: !0 });
          } catch {
          }
        });
      }
    }
  }, [e, n, l]);
  const b = T(() => l?.toLowerCase(), [l]), p = T(
    () => ie(
      "timeline-horz-card-wrapper",
      b,
      c === "TOP" ? "bottom" : "top",
      a ? "show-all" : ""
    ),
    [b, c, a]
  ), _ = T(
    () => ie(b, c),
    [b, c]
  ), R = T(
    () => ie(
      "timeline-circle",
      { "using-icon": !!m },
      b,
      e ? "active" : "in-active"
    ),
    [e, m, b]
  ), M = T(() => a || e && !i, [e, i, a]);
  return {
    circleRef: g,
    wrapperRef: s,
    contentRef: u,
    handleClick: y,
    modeLower: b,
    containerClass: p,
    titleClass: _,
    circleClass: R,
    canShowTimelineContent: M
  };
};
var xo = "mpv93b3 mpv93b2 _1v4ezef6 _1v4ezef10 _1v4ezef1c _1v4ezefi _1ta47saw", ko = de({ defaultClassName: "mpv93b9 mpv93b5 etntiu1 etntiu0 _1v4ezefbm _1v4ezefbr _1v4ezefca _1v4ezefce etntiu2 mpv93b4 _1v4ezef6 _1v4ezef10 _1v4ezef1c _1v4ezefi _1v4ezef86 _1ta47sat", variantClassNames: { size: { sm: "mpv93ba", md: "mpv93bb", lg: "mpv93bc" }, shape: { circle: "mpv93bd mpv93b6 _1v4ezef86", square: "mpv93be mpv93b7 _1v4ezef7u", diamond: "mpv93bf mpv93b8 _1v4ezef7u" }, state: { inactive: "mpv93bg", active: "mpv93bh", hover: "mpv93bi" }, interactive: { true: "mpv93bj etntiu1 etntiu0 _1v4ezefbm _1v4ezefbr _1v4ezefca _1v4ezefce etntiu2", false: "mpv93bk" }, hasIcon: { true: "mpv93bl", false: "mpv93bm" }, disabled: { true: "mpv93bn _1ta47sa16", false: "mpv93bo" } }, defaultVariants: { size: "md", shape: "circle", state: "inactive", interactive: !0, hasIcon: !1, disabled: !1 }, compoundVariants: [[{ shape: "diamond", interactive: !0 }, "mpv93bp"], [{ shape: "diamond", state: "active", hasIcon: !0 }, "mpv93bq"], [{ shape: "diamond", state: "active", hasIcon: !1 }, "mpv93br"], [{ size: "sm", state: "active" }, "mpv93bs"], [{ size: "lg", state: "active" }, "mpv93bt"]] });
const zo = ({
  circleClass: e,
  handleClick: n,
  circleRef: r,
  title: i,
  theme: a,
  timelinePointDimension: t,
  timelinePointShape: o,
  iconChild: l,
  active: c = !1,
  disabled: m = !1,
  itemId: g
}) => {
  const { disableTimelinePoint: s } = ce(), u = !!l;
  return s ? null : /* @__PURE__ */ f("div", { className: xo, children: /* @__PURE__ */ f(
    "button",
    {
      className: `${e} ${ko({
        shape: o,
        hasIcon: u,
        state: c ? "active" : "inactive",
        disabled: m
      })} ${u ? "using-icon" : ""} ${c ? "active" : ""}`,
      onClick: n,
      ref: r,
      "data-testid": "timeline-circle",
      "data-item-id": g,
      "aria-label": i ?? "Timeline point",
      "aria-selected": c,
      "aria-disabled": m,
      disabled: m,
      tabIndex: m ? -1 : 0,
      type: "button",
      style: {
        height: t ? `${t}px` : "2rem",
        // Fallback height to ensure visibility
        width: t ? `${t}px` : "2rem",
        // Fallback width to ensure visibility
        background: u ? a?.iconBackgroundColor || a?.primary : c ? a?.secondary || a?.primary : a?.primary || "#2563eb",
        // Fallback color
        border: c ? `${t ? Math.round(t * 0.2) : 3}px solid ${a?.primary || "#2563eb"}` : `2px solid ${a?.primary || "#2563eb"}`,
        // Fallback border
        color: a?.primary || "#2563eb"
        // Ensure color is set for CSS currentColor
      },
      children: l ?? null
    }
  ) });
};
var So = de({ defaultClassName: "_6cplvp3 etntiu1f etntiu1a _1v4ezefi _1v4ezef80 _1v4ezef30 etntiu1h etntiu1c etntiu1l etntiu1m etntiu1 etntiu0 _1v4ezefbm _1v4ezefbr _1v4ezefca _1v4ezefce etntiu3 etntiu1p _6cplvp0 _1v4ezef6 _1v4ezefx _1v4ezef2c _1ta47sat", variantClassNames: { orientation: { vertical: "_6cplvp4 _6cplvp1 _1v4ezef1f", horizontal: "_6cplvp5 _6cplvp2 _1v4ezef1c" }, size: { sm: "_6cplvp6 etntiu1f etntiu1a _1v4ezefi _1v4ezef80 _1v4ezef30 etntiu1g etntiu1b _1v4ezef2x etntiu1k etntiu1n etntiu1p", md: "_6cplvp7 etntiu1f etntiu1a _1v4ezefi _1v4ezef80 _1v4ezef30 etntiu1h etntiu1c etntiu1k etntiu1n etntiu1p", lg: "_6cplvp8 etntiu1f etntiu1a _1v4ezefi _1v4ezef80 _1v4ezef30 etntiu1i etntiu1d _1v4ezef33 etntiu1k etntiu1n etntiu1p" } }, defaultVariants: { orientation: "horizontal", size: "md" }, compoundVariants: [] });
de({ defaultClassName: "_6cplvpa etntiu2h etntiu2j etntiu2a _1v4ezef8x _1v4ezef9u etntiu2n etntiu2s etntiu2e _1v4ezefa0 etntiu2w _6cplvp9 _1v4ezef6 _1v4ezef10 _1v4ezef1c", variantClassNames: { mode: { vertical: "_6cplvpb", horizontal: "_6cplvpc", horizontal_all: "_6cplvpd" }, interactive: { true: "_6cplvpe", false: "_6cplvpf" } }, defaultVariants: { mode: "horizontal", interactive: !1 }, compoundVariants: [] });
function Ao(e, n) {
  if (e === n) return !0;
  if (!e || !n) return !1;
  const r = Object.keys(e), i = Object.keys(n);
  if (r.length !== i.length) return !1;
  for (const a of r)
    if (e[a] !== n[a]) return !1;
  return !0;
}
function wr(e, n) {
  if (e === n) return !0;
  if (!e || !n || e.length !== n.length) return !1;
  for (let r = 0; r < e.length; r++) {
    const i = e[r], a = n[r];
    if (typeof i == "object" && i !== null && "id" in i) {
      if (i.id !== a.id) return !1;
    } else if (i !== a)
      return !1;
  }
  return !0;
}
function tn(e, n) {
  return e === n ? !0 : !e || !n ? !1 : e.source?.url === n.source?.url && e.type === n.type && e.name === n.name;
}
const Lo = (e, n, r, i, a, t) => {
  const o = P(null), l = P(0), c = P(0), [m, g] = Y(0), [s, u] = Y(!1), d = P(0), [h, v] = Y(0), y = P(!1), b = D(() => {
    l.current && (window.clearTimeout(l.current), l.current = 0), c.current && (window.cancelAnimationFrame(c.current), c.current = 0), y.current = !1;
  }, []), p = D(() => {
    b(), u(!0), g(0), v(i), a && t && t(a);
  }, [a, t, i, b]), _ = D(
    (S) => {
      if (!i || S <= 0 || !n || !r)
        return;
      if (b(), v(S), o.current = performance.now(), u(!1), y.current = !0, S < 50) {
        l.current = window.setTimeout(() => {
          p();
        }, S);
        return;
      }
      const A = o.current + S, q = (k) => {
        if (y.current) {
          if (k >= A) {
            p();
            return;
          }
          c.current = window.requestAnimationFrame(q);
        }
      };
      c.current = window.requestAnimationFrame(q);
    },
    [
      i,
      n,
      r,
      b,
      p
    ]
  ), R = D(() => {
    if (!(!n || !r)) {
      if (b(), u(!0), o.current !== null) {
        const S = performance.now() - o.current;
        d.current = S;
      }
      e.current && g(e.current.clientWidth);
    }
  }, [n, r, b]), M = D(() => {
    if (!n || !r || !i)
      return;
    const S = i - d.current;
    S > 0 && (u(!1), _(S));
  }, [n, r, i, _]);
  return U(() => (r && n && i > 0 ? _(i) : r || b(), b), [r, n, i, _, b]), U(() => (n || b(), () => {
    b();
  }), [n, b]), {
    paused: s,
    remainInterval: h,
    setStartWidth: g,
    setupTimer: _,
    startWidth: m,
    tryPause: R,
    tryResume: M
  };
}, Io = (e, n, r = 150) => e > r, Eo = ({
  containerRef: e,
  detailsRef: n,
  setStartWidth: r
}) => {
  let i = 150;
  try {
    i = ce().contentDetailsHeight;
  } catch {
  }
  const [a, t] = Y({
    cardHeight: 0,
    detailsHeight: 0,
    containerWidth: 0
  }), o = P({ scrollHeight: 0, clientHeight: 0, offsetTop: 0, containerHeight: 0 });
  U(() => {
    let s, u = !1;
    const d = new ResizeObserver((h) => {
      s && cancelAnimationFrame(s), s = requestAnimationFrame(() => {
        if (!u) {
          for (const v of h)
            if (e.current && n.current) {
              const y = n.current, b = e.current;
              o.current = {
                scrollHeight: y.scrollHeight,
                clientHeight: y.offsetHeight,
                offsetTop: y.offsetTop,
                containerHeight: b.clientHeight
              }, t({
                cardHeight: y.scrollHeight,
                detailsHeight: y.offsetHeight,
                containerWidth: b.clientWidth
              });
            }
          s = void 0;
        }
      });
    });
    if (e.current && d.observe(e.current), n.current && d.observe(n.current), e.current && n.current) {
      const h = n.current, v = e.current;
      o.current = {
        scrollHeight: h.scrollHeight,
        clientHeight: h.offsetHeight,
        offsetTop: h.offsetTop,
        containerHeight: v.clientHeight
      }, t({
        cardHeight: h.scrollHeight,
        detailsHeight: h.offsetHeight,
        containerWidth: v.clientWidth
      });
    }
    return () => {
      u = !0, s && cancelAnimationFrame(s), d.disconnect();
    };
  }, [e, n]);
  const l = D(
    (s) => {
      if (!s || !n.current) return;
      const u = n.current, { scrollHeight: d, offsetHeight: h, offsetTop: v } = u, y = s.clientHeight;
      o.current = {
        scrollHeight: d,
        clientHeight: h,
        offsetTop: v,
        containerHeight: y
      }, e.current = s, r(s.clientWidth), t({
        cardHeight: d,
        detailsHeight: h,
        containerWidth: s.clientWidth
      });
    },
    [n, r, e]
  ), { cardActualHeight: c, detailsHeight: m, textContentLarge: g } = T(() => {
    const s = o.current;
    return {
      cardActualHeight: a.cardHeight,
      detailsHeight: a.detailsHeight,
      textContentLarge: Io(
        s.scrollHeight,
        s.clientHeight,
        i
        // Use context value instead of hardcoded 150
      )
    };
  }, [a, i]);
  return {
    cardActualHeight: c,
    detailsHeight: m,
    textContentLarge: g,
    updateCardSize: l
  };
}, No = ({
  shouldFocus: e,
  isActive: n,
  preventScroll: r = !0,
  restoreFocus: i = !0
}) => {
  const a = P(null), t = P(null), o = P(!1);
  return U(() => {
    n && e && i && !o.current && (t.current = document.activeElement, o.current = !1);
  }, [n, e, i]), U(() => {
    if (a.current) {
      if (e && n) {
        const l = { preventScroll: r };
        requestAnimationFrame(() => {
          a.current && !a.current.contains(document.activeElement) && (a.current.focus(l), a.current.classList.contains("focus-visible") || a.current.classList.add("focus-visible"));
        });
      }
      return () => {
        a.current?.classList.contains("focus-visible") && a.current.classList.remove("focus-visible");
      };
    }
  }, [e, n, r]), U(() => () => {
    i && !n && t.current && !o.current && requestAnimationFrame(() => {
      t.current && typeof t.current.focus == "function" && (t.current.focus(), o.current = !0);
    });
  }, [n, i]), U(() => {
    n && (o.current = !1);
  }, [n]), a;
};
var _r = "var(--_18oaqop0)", Oo = "_18oaqop2 etntiu1f etntiu1a _1v4ezefi _1v4ezef80 _1v4ezef30 etntiu1h etntiu1c etntiu1k etntiu1n etntiu1p _18oaqop1 _1v4ezef6", Mo = "_18oaqop3", Do = "_18oaqop4", Ro = "_18oaqop5 _1ta47saw", Fo = "_18oaqop7 _18oaqop6 _1v4ezefl", $o = "_18oaqop8", qo = "_18oaqop9", Ho = "_18oaqopa";
de({ defaultClassName: "_18oaqopb _18oaqop7 _18oaqop6 _1v4ezefl", variantClassNames: { visible: { true: "_18oaqopc _18oaqop8", false: "_18oaqopd _18oaqop9" }, rounded: { true: "_18oaqope _18oaqopa", false: "_18oaqopf" } }, defaultVariants: { visible: !0, rounded: !1 }, compoundVariants: [] });
var Bo = "_18oaqopg", Vo = "_18oaqopi _18oaqoph _1v4ezef6", Po = "_18oaqopj", Wo = "_18oaqopk", jo = "_18oaqopl", Go = "_18oaqopm", Uo = "_18oaqopn", Ko = "_18oaqopo", Zo = "_18oaqopp etntiu3k etntiu1x etntiu1 etntiu0 _1v4ezefbm _1v4ezefbr _1v4ezefca _1v4ezefce etntiu4 etntiu1q _1v4ezef9 _1v4ezef10 _1v4ezef1c _1v4ezef7x _1v4ezef8r _1v4ezef9r _1v4ezefbv _1v4ezefbx etntiu20 etntiu21 etntiu1r _1v4ezef2u _1v4ezef8o etntiu25 etntiu1u etntiu28 etntiu3m", Xo = "_18oaqopq", Yo = "_18oaqops _18oaqopr _1v4ezef6 _1v4ezef13 _1v4ezef1f", Jo = "_18oaqopu _18oaqopt _1v4ezef6 _1v4ezef10 _1v4ezef1f", Qo = "_18oaqopw _18oaqopv _1v4ezef6 _1v4ezefu";
const es = (e, n) => {
  const [r, i] = Y(!1), [a, t] = Y(!1), o = D(() => {
    t(!0);
  }, []), l = D(() => {
    i(!0), n({
      id: e,
      paused: !1,
      playing: !1
    });
  }, [n, e]);
  return {
    loadFailed: r,
    mediaLoaded: a,
    handleMediaLoaded: o,
    handleError: l
  };
}, ts = (e) => T(
  () => /^(https?:\/\/)?(www\.youtube\.com|youtu\.?be)\/.+$/.test(e),
  [e]
), rs = () => {
  const [e, n] = Y(!1), [r, i] = Y(!0), a = D(() => {
    n((o) => !o), i(!0);
  }, []), t = D(() => {
    n(!1), i((o) => !o);
  }, []);
  return {
    expandDetails: e,
    showText: r,
    toggleExpand: a,
    toggleText: t
  };
}, ns = ({
  showText: e,
  expandDetails: n,
  textOverlay: r,
  detailsText: i,
  title: a,
  content: t,
  theme: o,
  cardHeight: l,
  mediaHeight: c
}) => {
  const m = T(
    () => e && !!i,
    [e, i]
  ), g = T(
    () => !!(a ?? t ?? i),
    [a, t, i]
  ), s = T(
    () => r && !!i,
    [r, i]
  ), u = T(
    () => Ht(o?.cardDetailsBackGround ?? "", 0.8),
    [o?.cardDetailsBackGround]
  ), d = T(
    () => !n && e && r,
    [n, e, r]
  ), h = T(
    () => r ? l : c,
    [r, l, c]
  );
  return {
    canShowTextMemo: m,
    canShowTextContent: g,
    canExpand: s,
    gradientColor: u,
    canShowGradient: d,
    getCardHeight: h
  };
}, Cr = ge(({ message: e }) => /* @__PURE__ */ f("span", { className: Ko, children: e })), is = ge(
  ({
    url: e,
    active: n,
    id: r,
    name: i,
    onMediaStateChange: a,
    handleMediaLoaded: t,
    handleError: o
  }) => {
    const l = P(null);
    return U(() => {
      l.current && (n ? l.current.play().catch(() => {
      }) : l.current.pause());
    }, [n]), /* @__PURE__ */ f(
      "video",
      {
        className: Bo,
        controls: !0,
        autoPlay: n,
        ref: l,
        onLoadedData: t,
        "data-testid": "rc-video",
        onPlay: () => a({
          id: r,
          paused: !1,
          playing: !0
        }),
        onPause: () => a({
          id: r,
          paused: !0,
          playing: !1
        }),
        onEnded: () => a({
          id: r,
          paused: !1,
          playing: !1
        }),
        onError: o,
        preload: "metadata",
        children: /* @__PURE__ */ f("source", { src: e })
      }
    );
  }
), as = ge(
  ({ url: e, active: n, name: r }) => /* @__PURE__ */ f(
    "iframe",
    {
      className: Xo,
      style: { border: "none" },
      allow: "accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",
      allowFullScreen: !0,
      src: `${e}${n ? "?autoplay=1&enablejsapi=1" : "?enablejsapi=1"}`,
      title: r,
      "data-testid": "timeline-card-content-video",
      loading: "lazy"
    }
  )
), os = ge(
  ({
    url: e,
    name: n,
    mode: r,
    mediaLoaded: i,
    borderLessCards: a,
    mediaHeight: t,
    imageFit: o,
    handleMediaLoaded: l,
    handleError: c
  }) => /* @__PURE__ */ f("div", { className: Ro, style: { height: t }, children: /* @__PURE__ */ f(
    "img",
    {
      className: [
        Fo,
        i ? $o : qo,
        a ? Ho : void 0
      ].filter(Boolean).join(" "),
      src: e,
      onLoad: l,
      onError: c,
      alt: n,
      loading: "lazy",
      "data-testid": "timeline-card-content-image",
      width: "100%",
      height: "auto",
      style: {
        objectFit: o ?? "cover"
      }
    }
  ) })
), ss = ge(
  ({
    media: e,
    isYouTube: n,
    loadFailed: r,
    mediaLoaded: i,
    active: a,
    id: t,
    mediaHeight: o,
    mode: l,
    borderLessCards: c,
    mediaSettings: m,
    handleMediaLoaded: g,
    handleError: s,
    onMediaStateChange: u
  }) => e.type === "VIDEO" ? n ? /* @__PURE__ */ f(
    as,
    {
      url: e.source.url,
      active: a,
      name: e.name ?? ""
    }
  ) : r ? /* @__PURE__ */ f(Cr, { message: "Failed to load the video" }) : /* @__PURE__ */ f(
    is,
    {
      url: e.source.url,
      active: a,
      id: t,
      name: e.name ?? "",
      onMediaStateChange: u,
      handleMediaLoaded: g,
      handleError: s
    }
  ) : e.type === "IMAGE" ? r ? /* @__PURE__ */ f(Cr, { message: "Failed to load the image." }) : /* @__PURE__ */ f(
    os,
    {
      url: e.source.url,
      name: e.name ?? "",
      mode: l,
      mediaLoaded: i,
      borderLessCards: c,
      mediaHeight: o,
      imageFit: m?.fit,
      handleMediaLoaded: g,
      handleError: s
    }
  ) : null
);
var ls = { card: "_10vuyxn2 _10vuyxn0" }, cs = { card: "_10vuyxn3 _10vuyxn0" };
const us = ({
  title: e,
  url: n,
  theme: r,
  color: i,
  dir: a,
  active: t,
  fontSize: o = "1rem",
  classString: l = ""
}) => {
  const { semanticTags: c } = ce(), m = c?.cardTitle ?? "span";
  return e ? /* @__PURE__ */ f(
    m,
    {
      className: ie(ls.card, t ? "active" : "", {
        [l]: !0
      }),
      style: { color: i },
      dir: a,
      "data-class": l,
      children: n ? /* @__PURE__ */ f("a", { href: n, target: "_blank", rel: "noreferrer", children: e }) : e
    }
  ) : null;
}, Wt = Q.memo(us);
Wt.displayName = "Timeline Title";
var rn = "_191ark01 _191ark00 _12ug0493i _12ug049r _12ug04913 _12ug0496", nn = "_191ark02";
de({ defaultClassName: "_191ark03 _191ark01 _191ark00 _12ug0493i _12ug049r _12ug04913 _12ug0496", variantClassNames: { size: { sm: "_191ark04", md: "_191ark05", lg: "_191ark06" } }, defaultVariants: { size: "md" }, compoundVariants: [] });
const ds = (e) => /* @__PURE__ */ f("button", { className: rn, ...e, children: /* @__PURE__ */ f("span", { className: nn, children: e.children }) }), fs = (e) => /* @__PURE__ */ f("button", { className: rn, ...e, children: /* @__PURE__ */ f("span", { className: nn, children: e.children }) }), ms = ({
  children: e
}) => /* @__PURE__ */ f("ul", { className: Qo, children: e }), an = ge(
  ({ textOverlay: e, onToggle: n, theme: r, show: i }) => {
    const a = T(() => i ? "Hide Text" : "Show Text", [i]);
    return e ? /* @__PURE__ */ f(
      fs,
      {
        onPointerDown: n,
        tabIndex: 0,
        onKeyDown: (t) => t.key === "Enter" && n?.(t),
        "aria-label": a,
        title: a,
        children: i ? /* @__PURE__ */ f(qr, {}) : /* @__PURE__ */ f(Hr, {})
      }
    ) : null;
  }
);
an.displayName = "Show Hide Text Button";
const on = ge(
  ({ theme: e, expanded: n, onExpand: r, textOverlay: i }) => {
    const a = T(() => n ? "Minimize" : "Maximize", [n]);
    return i ? /* @__PURE__ */ f(
      ds,
      {
        onPointerDown: r,
        onKeyDown: (t) => t.key === "Enter" && r?.(t),
        "aria-expanded": n,
        tabIndex: 0,
        "aria-label": a,
        title: a,
        children: n ? /* @__PURE__ */ f($r, {}) : /* @__PURE__ */ f(Fr, {})
      }
    ) : null;
  },
  (e, n) => e.expanded === n.expanded
);
on.displayName = "Expand Button";
const jt = Q.memo(
  ({ content: e, color: n, dir: r, theme: i, fontSize: a, classString: t, padding: o }) => {
    const { semanticTags: l } = ce(), c = l?.cardSubtitle ?? "span";
    return e ? /* @__PURE__ */ f(
      c,
      {
        style: { color: n },
        dir: r,
        className: ie(cs.card, "card-sub-title", t),
        children: e
      }
    ) : null;
  },
  (e, n) => e.theme?.cardSubtitleColor === n.theme?.cardSubtitleColor
);
jt.displayName = "Timeline Content";
const hs = (e) => jr.test(e), vs = (e, n = 0.8, r = {}) => {
  const { format: i = "auto" } = r;
  return T(() => {
    if (!e) return "";
    switch (i === "auto" ? ya(e) : i) {
      case "hex":
        return hs(e) ? Ht(e, n) : (process.env.NODE_ENV === "development" && console.warn(`Invalid hex color: ${e}`), "");
      case "rgb":
      case "rgba":
        return wa(e, n);
      case "hsl":
      case "hsla":
        return _a(e, n);
      default:
        return process.env.NODE_ENV === "development" && console.warn(`Unsupported color format: ${e}`), "";
    }
  }, [e, n, i]);
}, gs = (e, n = {}) => {
  const { property: r = "clientHeight", delay: i = 0, onError: a } = n;
  return D(
    (t) => {
      if (!t || !e) return;
      const o = () => {
        try {
          const l = t[r];
          e({ value: l, element: t });
        } catch (l) {
          a ? a(l instanceof Error ? l : new Error(String(l))) : process.env.NODE_ENV === "development" && console.error(`Failed to measure ${r}:`, l);
        }
      };
      i > 0 ? setTimeout(() => {
        requestAnimationFrame(o);
      }, i) : requestAnimationFrame(o);
    },
    [e, r, i, a]
  );
}, ps = (e) => gs(
  e ? (n) => e(n.value) : void 0,
  { property: "clientHeight" }
), bs = (e, n) => e.height === n.height && e.show === n.show && e.expand === n.expand && e.theme?.cardDetailsBackGround === n.theme?.cardDetailsBackGround, sn = ge(
  ({ theme: e, show: n, expand: r, textOverlay: i, text: a, onRender: t }) => {
    const o = vs(e?.cardDetailsBackGround), l = ps(t);
    return i ? /* @__PURE__ */ f(
      "div",
      {
        ref: l,
        className: Yo,
        style: {
          background: o,
          height: n ? "100%" : 0,
          overflow: r ? "auto" : "hidden"
        },
        children: /* @__PURE__ */ f(a, {})
      }
    ) : null;
  },
  bs
);
sn.displayName = "DetailsText";
const ys = (e) => {
  const {
    textOverlay: n,
    theme: r,
    expandDetails: i,
    showText: a,
    canExpand: t,
    canShowGradient: o,
    gradientColor: l,
    title: c,
    active: m,
    url: g,
    fontSizes: s,
    classNames: u,
    toggleText: d,
    toggleExpand: h,
    content: v,
    canShowTextMemo: y,
    detailsText: b,
    onDetailsTextRef: p
  } = e, _ = P(null), [R, M] = Y(!1), S = D(() => {
    M(!R);
  }, [R]);
  return /* @__PURE__ */ ee(
    "div",
    {
      ref: _,
      className: [
        Vo,
        n ? Po : void 0,
        t || !a ? Wo : void 0,
        o ? Uo : void 0,
        n && R ? jo : void 0,
        n && !R ? Go : void 0
      ].filter(Boolean).join(" "),
      style: o && l ? Mt({ [_r]: l }) : void 0,
      onClick: n && R ? S : void 0,
      children: [
        /* @__PURE__ */ ee("div", { className: Jo, children: [
          /* @__PURE__ */ f(
            Wt,
            {
              title: c,
              theme: r,
              active: m,
              url: g ?? "",
              fontSize: s?.cardTitle,
              classString: u?.cardTitle,
              ...oe({
                color: r?.cardTitleColor || r?.titleColor
              })
            }
          ),
          (t || n) && /* @__PURE__ */ f(ms, { children: n ? /* @__PURE__ */ f(
            "button",
            {
              onClick: (A) => {
                A.stopPropagation(), S();
              },
              className: Zo,
              style: r ? Mt({
                [_r]: r?.primary || r?.cardBgColor || ""
              }) : void 0,
              "aria-label": R ? "Expand text overlay" : "Minimize text overlay",
              title: R ? "Expand text overlay" : "Minimize text overlay",
              type: "button",
              children: /* @__PURE__ */ f("div", { style: { width: "16px", height: "16px" }, children: R ? /* @__PURE__ */ f(Hr, {}) : /* @__PURE__ */ f(qr, {}) })
            }
          ) : t ? /* @__PURE__ */ ee(Se, { children: [
            /* @__PURE__ */ f(
              an,
              {
                onToggle: d,
                show: a,
                textOverlay: !0,
                theme: r
              }
            ),
            /* @__PURE__ */ f(
              on,
              {
                theme: r,
                expanded: i,
                onExpand: h,
                textOverlay: !0
              }
            )
          ] }) : null })
        ] }),
        a && !R && /* @__PURE__ */ f(
          jt,
          {
            content: v,
            fontSize: s?.cardSubtitle,
            classString: u?.cardSubTitle,
            padding: !0,
            theme: r,
            ...oe({
              color: r?.cardSubtitleColor
            })
          }
        ),
        y && b && !R && /* @__PURE__ */ f(
          sn,
          {
            theme: r,
            show: a,
            expand: i,
            text: b,
            onRender: p,
            textOverlay: n
          }
        )
      ]
    }
  );
}, ln = ys;
ln.displayName = "ContentDisplay";
const cn = ge(
  ({
    active: e,
    id: n,
    onMediaStateChange: r,
    title: i,
    content: a,
    media: t,
    slideshowActive: o,
    url: l,
    detailsText: c
  }) => {
    const { loadFailed: m, mediaLoaded: g, handleMediaLoaded: s, handleError: u } = es(n || "", r), d = ts(t.source.url), { expandDetails: h, showText: v, toggleExpand: y, toggleText: b } = rs(), {
      theme: p,
      mode: _,
      cardHeight: R,
      borderLessCards: M,
      mediaHeight: S,
      textOverlay: A,
      mediaSettings: q,
      // consume from context rather than placeholders
      fontSizes: k,
      classNames: x
    } = ce(), {
      canShowTextMemo: L,
      canShowTextContent: $,
      canExpand: W,
      gradientColor: O,
      canShowGradient: E,
      getCardHeight: w
    } = ns({
      showText: v,
      expandDetails: h,
      textOverlay: A,
      detailsText: c,
      title: i,
      content: a,
      theme: p,
      cardHeight: R,
      mediaHeight: S
    }), z = _, C = D((N) => {
    }, []);
    return /* @__PURE__ */ ee(Se, { children: [
      /* @__PURE__ */ f(
        "div",
        {
          className: ie(
            Oo,
            "card-media-wrapper",
            x?.cardMedia,
            q?.align === "right" ? Do : Mo
          ),
          style: {
            height: A ? "calc(100% - 1em)" : 0,
            minHeight: w
          },
          children: /* @__PURE__ */ f(
            ss,
            {
              media: t,
              isYouTube: d,
              loadFailed: m,
              mediaLoaded: g,
              active: e || !1,
              id: n || "",
              mediaHeight: S,
              mode: z,
              borderLessCards: M,
              mediaSettings: q,
              handleMediaLoaded: s,
              handleError: u,
              onMediaStateChange: r
            }
          )
        }
      ),
      $ && /* @__PURE__ */ f(
        ln,
        {
          mode: z,
          textOverlay: A,
          theme: p,
          expandDetails: h,
          showText: v,
          canExpand: W,
          canShowGradient: E,
          gradientColor: O,
          title: i,
          active: e || !1,
          url: l || "",
          fontSizes: k,
          classNames: x,
          toggleText: b,
          toggleExpand: y,
          content: a,
          canShowTextMemo: L,
          detailsText: c,
          onDetailsTextRef: C
        }
      )
    ] });
  },
  (e, n) => e.active === n.active && e.slideshowActive === n.slideshowActive && e.id === n.id && e.title === n.title && e.url === n.url && e.content === n.content && e.detailsText === n.detailsText && tn(e.media, n.media)
);
cn.displayName = "Card Media";
const ws = ({
  onExpand: e,
  showMore: n,
  textContentIsLarge: r,
  showReadMore: i,
  canShow: a,
  buttonClassName: t,
  iconWrapperClassName: o
}) => {
  ce();
  const l = D(
    (m) => {
      m.stopPropagation(), m.preventDefault(), e();
    },
    [e]
  ), c = T(() => i && a && (r || n), [i, r, a, n]);
  return /* @__PURE__ */ f(Se, { children: c ? /* @__PURE__ */ ee(
    "button",
    {
      className: t || Jr,
      onPointerDown: l,
      onKeyUp: (m) => {
        m.key === "Enter" && e();
      },
      tabIndex: 0,
      children: [
        /* @__PURE__ */ f("span", { children: n ? "read less" : "read more" }),
        /* @__PURE__ */ f("span", { className: o || Qr, children: /* @__PURE__ */ f(Bt, {}) })
      ]
    }
  ) : null });
}, un = ge(
  ({ title: e, url: n, media: r, content: i, cardTitle: a }) => {
    const { fontSizes: t, classNames: o, theme: l, isMobile: c } = ce(), m = T(() => !r, [r]);
    return /* @__PURE__ */ ee("header", { className: wo, children: [
      c && a ? /* @__PURE__ */ f(
        "h3",
        {
          style: {
            fontSize: "1.5rem",
            color: l?.cardTitleColor || l?.titleColor,
            margin: 0,
            fontWeight: 600,
            lineHeight: 1.4
          },
          children: a
        }
      ) : null,
      m ? /* @__PURE__ */ f(
        Wt,
        {
          title: e,
          theme: l,
          url: n || "",
          fontSize: t?.cardTitle || "",
          classString: o?.cardTitle || "",
          ...oe({
            color: l?.cardTitleColor || l?.titleColor
          })
        }
      ) : null,
      m ? /* @__PURE__ */ f(
        jt,
        {
          content: i,
          theme: l,
          fontSize: t?.cardSubtitle || "",
          classString: o?.cardSubTitle || "",
          ...oe({
            color: l?.cardSubtitleColor
          })
        }
      ) : null
    ] });
  }
);
un.displayName = "ContentHeader";
const _s = ({
  fontSizes: e,
  parseDetailsAsHTML: n,
  theme: r,
  detailedText: i,
  cardTextClassName: a,
  isDarkMode: t
}) => i.map((o, l) => {
  const c = n && typeof o == "string" ? {
    dangerouslySetInnerHTML: {
      __html: Ot(o)
    }
  } : null;
  return /* @__PURE__ */ f(
    "span",
    {
      className: `${Co} ${a ?? ""}`,
      style: {
        color: r?.cardDetailsColor || "var(--vep-color-cardDetails, var(--timeline-text-color, currentColor))"
      },
      ...c,
      children: n ? null : o
    },
    `timeline-text-${typeof o == "string" ? o.substring(0, 10) : ""}-${l}`
  );
}), dn = ({
  timelineContent: e,
  theme: n,
  detailedText: r,
  showMore: i
}) => {
  const a = pt(
    (t, o) => {
      const l = Array.isArray(r), {
        fontSizes: c,
        classNames: m,
        parseDetailsAsHTML: g,
        textContentDensity: s,
        isDarkMode: u
      } = ce(), d = T(() => g && !l || s === "LOW", [l, g, s]), h = () => l ? _s({
        cardTextClassName: m?.cardText || "",
        detailedText: r,
        fontSizes: c,
        parseDetailsAsHTML: g,
        theme: n || {},
        isDarkMode: u
      }) : g && typeof r == "string" ? Ot(r) : r, v = (p) => g && !l ? {
        dangerouslySetInnerHTML: {
          __html: Ot(p)
        }
      } : {}, y = (p) => {
        const _ = v(p);
        return /* @__PURE__ */ f(
          "p",
          {
            className: yr + " " + (i ? "active" : ""),
            ref: o,
            ..._,
            style: {
              color: `${ne.color.cardTitle} !important`
              // Ensure color is applied correctly
              // color: theme?.cardDetailsColor || 'var(--vep-color-cardDetails, var(--timeline-text-color, currentColor))'
            },
            children: d ? null : p
          }
        );
      };
      return (() => {
        if (e)
          return /* @__PURE__ */ f("div", { ref: o, children: e });
        const p = h();
        return p ? l ? /* @__PURE__ */ f(
          "p",
          {
            className: yr + " " + (i ? "active" : ""),
            ref: o,
            style: {
              color: `${ne.color.text} !important`
              // Ensure color is applied correctly
              // color: theme?.cardDetailsColor || 'var(--vep-color-cardDetails, var(--timeline-text-color, currentColor))'
            },
            children: d ? null : p
          }
        ) : y(String(p)) : null;
      })();
    }
  );
  return a.displayName = "Text Or Content", a;
}, fn = pt(
  (e, n) => {
    const {
      showMore: r,
      customContent: i,
      timelineContent: a,
      detailedText: t,
      contentDetailsClass: o
    } = e, {
      useReadMore: l,
      borderLessCards: c,
      contentDetailsHeight: m,
      theme: g
    } = ce(), s = dn({
      detailedText: t,
      showMore: r || !1,
      theme: g,
      timelineContent: a
    });
    return /* @__PURE__ */ f(Se, { children: /* @__PURE__ */ f(
      "div",
      {
        "aria-expanded": r,
        className: o + " " + Yr,
        ref: n,
        style: {
          overflowY: r ? "auto" : "hidden",
          width: c ? "calc(100% - 0.5rem)" : "100%",
          background: `${ne.color.cardBg}`,
          // background: theme?.cardDetailsBackGround || theme?.cardBgColor,
          // Ensure custom scrollbar color reflects theme primary color for tests and styling parity
          // scrollbarColor: `${theme?.primary} default` as unknown as string,
          maxHeight: l ? r ? "1000px" : `${m ?? 150}px` : "none"
        },
        children: i ?? /* @__PURE__ */ f(
          s,
          {
            detailedText: t,
            showMore: r || !1,
            theme: g,
            timelineContent: a
          }
        )
      }
    ) });
  }
);
fn.displayName = "Details Text";
var Cs = "mb2y381 mb2y380 dvkhhv6 dvkhhv20 dvkhhvg3", Ts = de({ defaultClassName: "mb2y384 mb2y383 dvkhhv6 dvkhhv2c dvkhhvl dvkhhvg3", variantClassNames: { visible: { true: "mb2y385", false: "mb2y386" }, alignment: { left: "mb2y387", right: "mb2y388", center: "mb2y389" }, alternating: { true: "mb2y38a", false: "mb2y38b" } }, defaultVariants: { visible: !0, alignment: "center", alternating: !0 }, compoundVariants: [[{ alternating: !1, alignment: "left" }, "mb2y38c"], [{ alternating: !1, alignment: "right" }, "mb2y38d"]] }), xs = "mb2y38e", ks = "mb2y38f", zs = "mb2y38g", Ss = "mb2y38h", As = "mb2y38j mb2y38i dvkhhv6 dvkhhv2u";
const Ls = ({
  items: e,
  nestedCardHeight: n
}) => {
  const { isDarkMode: r } = ce(), i = T(
    () => ({
      position: "relative",
      display: "flex",
      flexDirection: "column",
      gap: "1rem",
      padding: "1rem 0"
    }),
    []
  ), a = T(
    () => ({
      position: "absolute",
      left: "50%",
      top: "0",
      bottom: "0",
      width: "2px",
      background: ne.color.primary,
      transform: "translateX(-50%)",
      zIndex: 1
    }),
    []
  ), t = T(
    () => ({
      position: "relative",
      display: "flex",
      justifyContent: "center",
      alignItems: "center",
      zIndex: 2
    }),
    []
  ), o = T(
    () => ({
      width: "100%",
      maxWidth: "600px",
      background: ne.color.nestedCardBg,
      border: `1px solid ${ne.color.buttonBorder}`,
      borderRadius: "8px",
      padding: "1rem",
      boxShadow: r ? "0 2px 4px rgba(0, 0, 0, 0.3)" : "0 2px 4px rgba(0, 0, 0, 0.1)",
      position: "relative"
    }),
    []
  ), l = T(
    () => ({
      margin: "0 0 0.5rem 0",
      color: ne.color.nestedCardTitle,
      fontSize: "1.1rem",
      fontWeight: "600"
    }),
    []
  ), c = T(
    () => ({
      margin: "0 0 0.75rem 0",
      color: ne.color.nestedCardSubtitle,
      fontSize: "0.95rem"
    }),
    []
  ), m = T(
    () => ({
      color: ne.color.nestedCardDetails,
      fontSize: "0.9rem",
      lineHeight: "1.5",
      ...n && {
        maxHeight: `${n}px`,
        overflow: "auto"
      }
    }),
    [n]
  ), g = T(
    () => ({
      display: "inline-block",
      marginTop: "0.75rem",
      color: ne.color.primary,
      textDecoration: "none",
      fontSize: "0.9rem",
      fontWeight: "500"
    }),
    []
  );
  return !e || e.length === 0 ? null : /* @__PURE__ */ ee("div", { style: i, children: [
    /* @__PURE__ */ f("div", { style: a }),
    e.map((s, u) => /* @__PURE__ */ f("div", { style: t, children: /* @__PURE__ */ f("div", { style: o, children: /* @__PURE__ */ ee("div", { children: [
      s.cardTitle && /* @__PURE__ */ f("h3", { style: l, children: s.cardTitle }),
      s.cardSubtitle && /* @__PURE__ */ f("p", { style: c, children: s.cardSubtitle }),
      s.cardDetailedText && /* @__PURE__ */ f(
        "div",
        {
          style: m,
          dangerouslySetInnerHTML: { __html: s.cardDetailedText }
        }
      ),
      s.url && /* @__PURE__ */ f(
        "a",
        {
          href: s.url,
          target: "_blank",
          rel: "noopener noreferrer",
          style: g,
          children: "Learn more â†’"
        }
      )
    ] }) }) }, s.id || u))
  ] });
}, Is = ({
  items: e,
  nestedCardHeight: n
}) => /* @__PURE__ */ f(
  Ls,
  {
    items: e,
    ...n !== void 0 && { nestedCardHeight: n }
  }
), Es = (e, n) => !(e.active !== n.active || (Array.isArray(e.detailedText) || Array.isArray(n.detailedText)) && !wr(e.detailedText, n.detailedText) || e.slideShowActive !== n.slideShowActive || e.hasFocus !== n.hasFocus || e.content !== n.content || !Array.isArray(e.detailedText) && !Array.isArray(n.detailedText) && e.detailedText !== n.detailedText || e.title !== n.title || e.cardTitle !== n.cardTitle || !tn(e.media, n.media) || !Ao(e.theme, n.theme) || !wr(e.items, n.items)), mn = Q.memo(
  ({
    active: e,
    content: n,
    detailedText: r,
    id: i,
    media: a,
    onShowMore: t,
    slideShowActive: o,
    onElapsed: l,
    theme: c,
    onClick: m,
    customContent: g,
    hasFocus: s,
    flip: u,
    branchDir: d,
    url: h,
    timelineContent: v,
    items: y,
    isNested: b,
    nestedCardHeight: p,
    title: _,
    cardTitle: R,
    focusable: M
  }) => {
    const [S, A] = Y(!1), q = P(null), k = P(null), x = P(!0), L = No({
      shouldFocus: !!s,
      isActive: !!e,
      preventScroll: !0,
      restoreFocus: !0
    }), [$, W] = Y(!1), [O, E] = Y(!1), {
      mode: w,
      cardHeight: z,
      useReadMore: C,
      cardWidth: N,
      borderLessCards: B,
      textContentDensity: j,
      textOverlay: I,
      disableInteraction: V,
      // Pull previously hard-coded values from context
      slideItemDuration: H,
      classNames: G,
      showProgressOnSlideshow: te
    } = ce(), X = j, {
      paused: se,
      remainInterval: fe,
      startWidth: re,
      tryPause: ae,
      setupTimer: ue,
      setStartWidth: K
    } = Lo(
      k,
      !!e,
      !!o,
      H,
      i || "",
      l
    ), {
      cardActualHeight: we,
      detailsHeight: pe,
      textContentLarge: J,
      updateCardSize: me
    } = Eo({
      containerRef: L,
      detailsRef: q,
      setStartWidth: K
    }), ke = T(() => e && o && te, [e, o, te]), qe = T(() => !!r && (J || S), [r, J, S]), Ae = T(() => C && r && !g && X !== "LOW", [C, r, g, X]), ze = T(() => y && y.length > 0, [y]), Ce = T(() => (r ?? g ?? v) && !(I && a) && X !== "LOW", [
      r,
      g,
      v,
      I,
      a,
      X
    ]);
    U(() => {
      const he = requestAnimationFrame(() => {
        L.current && q.current && me(L.current);
      });
      return () => cancelAnimationFrame(he);
    }, [me]), U(() => {
      const he = requestAnimationFrame(() => {
        L.current && q.current && me(L.current);
      });
      return () => cancelAnimationFrame(he);
    }, [X, me]), U(() => {
      const he = q.current;
      he && (he.scrollTop = 0);
    }, [S]), U(() => {
      e && !$ && W(!0);
    }, [e, $]), U(() => {
      H && (e && o && ue(H), o || W(!1));
    }, [e, o, H, s, ue]), U(() => {
      !se && !x.current && E(!0);
    }, [se]), U(() => (x.current = !1, () => {
      x.current = !0;
    }), []);
    const He = D(
      (he) => {
        o && (he.playing ? ae() : (he.paused || he.ended) && i && l && l(i));
      },
      [o, ae, i, l]
    ), Oe = D(
      (he) => {
        he.stopPropagation(), !(o || e) && m && !V && (L.current && L.current.focus({ preventScroll: !0 }), m(i || ""), requestAnimationFrame(w === "HORIZONTAL" || w === "HORIZONTAL_ALL" ? () => {
          const Ee = document.querySelector(
            `button[data-testid="timeline-circle"][data-item-id="${i}"]`
          );
          try {
            Ee?.focus?.({ preventScroll: !0 });
          } catch {
          }
        } : () => {
          const Ee = document.querySelector(
            `[data-testid="vertical-item-row"][data-item-id="${i}"]`
          );
          try {
            Ee?.focus?.({ preventScroll: !0 });
          } catch {
          }
        }));
      },
      [m, i, V, o, e, w]
    ), Le = D(() => {
      (e && se || !o) && (A((he) => !he), t?.(), requestAnimationFrame(() => {
        L.current && (L.current.focus({ preventScroll: !0 }), L.current.classList.add("focus-visible"));
      }));
    }, [e, se, o, t]), be = T(() => w === "VERTICAL_ALTERNATING" ? u ? "right" : "left" : null, [w, u]), Te = T(() => Ht(c?.cardBgColor ?? "#fff", 0.4), [c?.cardBgColor]), Be = T(() => ie(
      "card-description",
      G?.cardText ?? "",
      B ? "no-border" : ""
    ), [G?.cardText, B]), Ze = T(() => (typeof R == "string" ? R : null) ?? (typeof _ == "string" ? _ : null) ?? "Timeline card", [R, _]), Ie = T(() => I && (r ?? g ?? v) ? dn({
      timelineContent: v,
      theme: c,
      detailedText: r,
      showMore: S
    }) : null, [
      I,
      r,
      g,
      v,
      c,
      S
    ]), Me = T(() => I && a ? z : b ? p : z, [I, a, b, z, p]);
    return /* @__PURE__ */ ee(
      "section",
      {
        "aria-label": Ze,
        ref: L,
        onClick: Oe,
        className: `timeline-card-content ${e ? "active" : ""} ${G?.card ?? ""} ${bo({ borderless: B })} ${yo}`,
        "data-testid": "timeline-card-content",
        "data-item-id": i,
        tabIndex: M !== !1 && e ? 0 : -1,
        role: "article",
        "aria-current": e ? "true" : "false",
        onDoubleClick: Le,
        style: {
          minHeight: g ? void 0 : Me,
          height: g ? Me : void 0,
          maxWidth: N ? `${N}px` : "100%"
        },
        children: [
          (!I || !a) && /* @__PURE__ */ f(
            un,
            {
              title: _,
              url: h || "",
              media: a,
              content: n,
              cardTitle: R,
              theme: c
            }
          ),
          a && /* @__PURE__ */ f(
            cn,
            {
              active: !!e,
              cardHeight: z,
              content: n,
              hideMedia: S,
              id: i || "",
              media: a,
              onMediaStateChange: He,
              slideshowActive: !!o,
              theme: c,
              title: typeof _ == "string" ? _ : "",
              url: h || "",
              startWidth: re,
              detailsText: Ie,
              paused: se,
              remainInterval: fe,
              showProgressBar: !!ke,
              triangleDir: be || "",
              resuming: O,
              progressRef: k
            }
          ),
          Ce && /* @__PURE__ */ f(
            fn,
            {
              showMore: S,
              gradientColor: Te,
              detailedText: r,
              customContent: g,
              timelineContent: v,
              contentDetailsClass: `${Be} ${Yr}`,
              cardActualHeight: we,
              detailsHeight: pe,
              ref: q
            }
          ),
          ze && /* @__PURE__ */ f("div", { className: ks, children: /* @__PURE__ */ f(
            Is,
            {
              items: y || [],
              mode: "VERTICAL",
              nestedCardHeight: p || 0,
              isChild: !0
            }
          ) }),
          Ae && qe && /* @__PURE__ */ f(
            ws,
            {
              onExpand: Le,
              triangleDir: be || "",
              showMore: S,
              textContentIsLarge: J,
              showReadMore: Ae,
              remainInterval: fe,
              startWidth: re,
              canShow: !!r,
              isNested: !!b,
              theme: c,
              buttonClassName: Jr,
              iconWrapperClassName: Qr
            }
          )
        ]
      }
    );
  },
  Es
), Ns = ({
  containerClass: e,
  contentRef: n,
  id: r,
  theme: i,
  active: a,
  disableInteraction: t,
  showAllCardsHorizontal: o,
  cardWidth: l,
  cardSubtitle: c,
  cardTitle: m,
  url: g,
  cardDetailedText: s,
  slideShowRunning: u,
  media: d,
  onElapsed: h,
  customContent: v,
  hasFocus: y,
  onClick: b,
  timelineContent: p,
  isNested: _,
  nestedCardHeight: R,
  items: M,
  wrapperId: S
}) => {
  const A = D(() => {
  }, []), q = T(() => /* @__PURE__ */ f(
    "div",
    {
      className: `${e} ${So} ${o || a ? "highlight-active" : ""} ${a ? "active" : ""}`,
      ref: n,
      id: `timeline-card-${r}`,
      tabIndex: -1,
      style: {
        minWidth: l && (Number.isFinite(l) ? `${l}px` : void 0),
        display: a || o ? "flex" : "none",
        margin: o ? "0 1rem" : "0 auto",
        transform: a ? "scale(1.02)" : "scale(1)",
        transition: "all 0.3s ease-in-out",
        opacity: a ? 1 : o ? 0.7 : 0,
        justifyContent: "center",
        alignItems: "center"
      },
      children: /* @__PURE__ */ f(
        mn,
        {
          content: c,
          active: a,
          title: m,
          detailedText: s,
          onShowMore: A,
          theme: i,
          media: d,
          id: r,
          customContent: v,
          focusable: !1,
          ...oe({
            url: g,
            slideShowActive: u,
            hasFocus: y,
            onClick: b,
            timelineContent: p,
            isNested: _,
            nestedCardHeight: R,
            items: M
          }),
          ...h ? { onElapsed: (x) => x && h(x) } : {}
        }
      )
    }
  ), [
    e,
    n,
    r,
    a,
    t,
    o,
    l,
    c,
    m,
    g,
    s,
    u,
    i,
    d,
    h,
    v,
    y,
    b,
    p,
    _,
    R,
    M
  ]), k = T(() => {
    const x = document.getElementById(S);
    return x ? kr.createPortal(q, x) : null;
  }, [q, S]);
  return /* @__PURE__ */ f(Se, { children: k });
}, Os = ({
  active: e,
  autoScroll: n,
  cardDetailedText: r,
  cardSubtitle: i,
  cardTitle: a,
  url: t,
  id: o,
  media: l,
  onClick: c,
  onElapsed: m,
  slideShowRunning: g,
  title: s,
  wrapperId: u,
  customContent: d,
  hasFocus: h,
  iconChild: v,
  timelineContent: y,
  cardWidth: b,
  isNested: p,
  nestedCardHeight: _,
  items: R
}) => {
  const {
    mode: M,
    cardPositionHorizontal: S,
    timelinePointDimension: A,
    cardLess: q,
    showAllCardsHorizontal: k,
    classNames: x,
    theme: L,
    timelinePointShape: $,
    disableInteraction: W
  } = ce(), {
    circleRef: O,
    wrapperRef: E,
    contentRef: w,
    handleClick: z,
    containerClass: C,
    circleClass: N,
    canShowTimelineContent: B
  } = To({
    cardLess: q,
    showAllCardsHorizontal: k,
    mode: M,
    position: S,
    iconChild: v,
    ...oe({
      active: e,
      autoScroll: n,
      slideShowRunning: g,
      id: o,
      onClick: c
    })
  }), I = Array.isArray(r) ? r.map(
    (H) => typeof H == "string" ? H : String(H ?? "")
  ) : typeof r == "string" ? r : r ? String(r) : void 0, V = T(
    () => ({
      circleClass: N,
      handleClick: z,
      circleRef: O,
      title: typeof s == "string" ? s : String(s ?? ""),
      theme: L,
      timelinePointDimension: A,
      timelinePointShape: $,
      iconChild: v,
      disabled: W,
      ...oe({
        active: e,
        itemId: o
      })
    }),
    [
      N,
      z,
      O,
      s,
      L,
      A,
      $,
      v,
      W,
      e,
      o
    ]
  );
  return /* @__PURE__ */ ee(
    "div",
    {
      ref: E,
      className: "timeline-horizontal-item",
      "data-testid": "timeline-item",
      style: {
        display: "flex",
        flexDirection: "column",
        alignItems: "center",
        justifyContent: "flex-start",
        width: "100%",
        height: "100%",
        position: "relative",
        gap: "1rem"
      },
      children: [
        /* @__PURE__ */ f(
          "div",
          {
            className: "timeline-point-section",
            style: {
              display: "flex",
              justifyContent: "center",
              alignItems: "center",
              padding: "0.5rem",
              zIndex: 10,
              position: "relative"
            },
            children: /* @__PURE__ */ f(zo, { ...V })
          }
        ),
        B && /* @__PURE__ */ f(
          "div",
          {
            className: "timeline-card-section",
            style: {
              display: "flex",
              justifyContent: "center",
              alignItems: "center",
              width: "100%",
              flexGrow: 1
            },
            children: /* @__PURE__ */ f(
              Ns,
              {
                containerClass: C,
                contentRef: w,
                id: o || "",
                theme: L,
                active: e || !1,
                disableInteraction: W,
                showAllCardsHorizontal: k,
                cardSubtitle: typeof i == "string" ? i : String(i ?? ""),
                cardTitle: typeof a == "string" ? a : String(a ?? ""),
                wrapperId: u,
                ...oe({
                  cardWidth: b,
                  url: t,
                  slideShowRunning: g,
                  media: l,
                  onElapsed: m,
                  customContent: d,
                  hasFocus: h,
                  onClick: c,
                  timelineContent: y,
                  isNested: p,
                  nestedCardHeight: _,
                  items: R
                }),
                ...I ? { cardDetailedText: I } : {}
              }
            )
          }
        ),
        /* @__PURE__ */ f(
          "div",
          {
            className: "timeline-title-section",
            style: {
              display: "flex",
              justifyContent: "center",
              alignItems: "center",
              padding: "0.5rem",
              minHeight: "3rem",
              // Ensure consistent spacing
              position: "relative",
              zIndex: 5
              // Above the line
            },
            children: /* @__PURE__ */ f(
              en,
              {
                title: s,
                active: (e || !1) && !W,
                theme: L,
                classString: x?.title || ""
              }
            )
          }
        )
      ]
    }
  );
};
var Ms = "_1v5al941 _1v5al940 _12ug0496", Ds = "_1v5al943 _1v5al942 _12ug0496 _12ug049r _12ug04913";
const Rs = ({
  items: e,
  handleItemClick: n,
  autoScroll: r,
  wrapperId: i,
  slideShowRunning: a,
  onElapsed: t,
  contentDetailsChildren: o,
  hasFocus: l,
  iconChildren: c,
  nestedCardHeight: m,
  isNested: g,
  mode: s
}) => {
  const {
    theme: u,
    mode: d,
    itemWidth: h,
    cardHeight: v,
    flipLayout: y,
    showAllCardsHorizontal: b,
    cardWidth: p
  } = ce(), _ = s || d, R = T(
    () => ie(
      _.toLowerCase(),
      "timeline-horizontal-container",
      b ? "show-all-cards-horizontal" : ""
    ),
    [_, b]
  ), M = P(null), S = T(() => e.find((k) => k.active)?.id, [e]);
  U(() => {
    if (!S) return;
    const x = (M.current ?? document).querySelector(
      `button[data-testid="timeline-circle"][data-item-id="${S}"]`
    );
    x && requestAnimationFrame(() => {
      try {
        x.focus({ preventScroll: !1 });
      } catch {
      }
    });
  }, [S]);
  const A = T(
    () => Q.Children.toArray(c),
    [c]
  ), q = T(() => e.map((k, x) => /* @__PURE__ */ f(
    "li",
    {
      className: ie(
        Ds,
        k.visible || b ? "visible" : "",
        "timeline-horz-item-container"
      ),
      style: {
        width: h,
        minWidth: b ? h : void 0,
        display: "flex",
        flexDirection: "column",
        alignItems: "center",
        justifyContent: "flex-start",
        height: "100%"
      },
      "aria-current": k.active ? "true" : void 0,
      id: `timeline-${_.toLowerCase()}-item-${k.id}`,
      children: /* @__PURE__ */ f(
        Os,
        {
          onClick: n,
          autoScroll: r,
          wrapperId: i,
          theme: u,
          cardHeight: v,
          cardWidth: p,
          title: k.title,
          cardTitle: k.cardTitle,
          cardSubtitle: k.cardSubtitle,
          cardDetailedText: k.cardDetailedText,
          customContent: o ? o[x] : null,
          iconChild: A[x],
          ...oe({
            id: k.id,
            url: k.url,
            media: k.media,
            timelineContent: k.timelineContent,
            items: k.items,
            isNested: k.isNested,
            hasNestedItems: k.hasNestedItems,
            visible: k.visible,
            active: k.active,
            slideShowRunning: a,
            onElapsed: t,
            hasFocus: l,
            nestedCardHeight: m
          })
        }
      )
    },
    k.id
  )), [
    e,
    h,
    n,
    r,
    i,
    u,
    a,
    v,
    t,
    o,
    l,
    c,
    p,
    g,
    m
  ]);
  return /* @__PURE__ */ f(
    "ul",
    {
      ref: M,
      className: `${Ms} ${R}`,
      style: {
        direction: y ? "rtl" : "ltr",
        position: "relative"
      },
      "data-testid": "timeline-collection",
      "aria-label": "Timeline",
      children: q
    }
  );
};
var Fs = "iy9f2s0", $s = "iy9f2s1", qs = "iy9f2s2";
const hn = ge(
  (e) => {
    const {
      className: n,
      // 'left' or 'right' - passed to styled components
      id: r,
      // Unique ID of the timeline item
      onClick: i,
      // Callback function when the point is clicked
      active: a,
      // Is this point currently active/highlighted?
      onActive: t,
      // Callback function when the point should trigger the 'active' state calculation
      slideShowRunning: o,
      // Is a slideshow currently active? (disables onClick)
      iconChild: l,
      // Custom React node to display inside the point (replaces default shape)
      timelinePointDimension: c,
      // Size (width/height) of the point
      lineWidth: m,
      // Width of the timeline line connecting points
      disableClickOnCircle: g,
      // Is the timeline in 'cardLess' mode?
      isMobile: s
      // Is the view currently mobile?
    } = e, u = P(null), {
      focusActiveItemOnLoad: d,
      timelinePointShape: h,
      disableTimelinePoint: v,
      disableClickOnCircle: y,
      disableInteraction: b,
      disableAutoScrollOnClick: p
    } = gi();
    lr();
    const { buttonTexts: _ } = lr(), R = g ?? y, M = b, S = p, A = P(!0), q = T(() => d ? a : a && !A.current, [a, d]);
    U(() => {
      q && t && u.current && t(u.current.offsetTop);
    }, [q, a]);
    const k = T(
      () => ie({
        active: a,
        // Apply 'active' class if the point is active
        "using-icon": !!l
        // Apply class if a custom icon is used
      }),
      [a, l]
      // Dependencies: active state and presence of iconChild
    ), x = T(() => R || M || S ? {} : {
      onClick: ($) => {
        $.stopPropagation(), r && i && !o && i(r);
      }
    }, [
      r,
      i,
      o,
      R,
      M,
      S
    ]);
    U(() => {
      A.current && (A.current = !1);
    }, []);
    const L = T(() => _?.timelinePoint ?? (a ? "Active timeline point" : "Timeline point"), [a, _]);
    return /* @__PURE__ */ f(
      "div",
      {
        className: `${n} ${Fs}`,
        style: {
          ...s ? { width: "25%" } : { width: "10%" },
          ...m !== void 0 && {
            "--line-width": `${m}px`
          }
        },
        "data-testid": "tree-leaf",
        children: /* @__PURE__ */ f(
          "button",
          {
            className: `${n} timeline-vertical-circle ${$s}`,
            ...x,
            ref: u,
            "data-testid": "tree-leaf-click",
            "aria-label": L,
            style: {
              ...v && { visibility: "hidden" }
            },
            "aria-disabled": R || M || S || v,
            disabled: R || M || S || v,
            tabIndex: R || M || S || v ? -1 : 0,
            children: /* @__PURE__ */ f(
              "div",
              {
                className: `${k} ${qs} ${h === "diamond" ? "diamond" : ""} ${a ? "active" : ""} ${l ? "using-icon" : ""}`,
                style: {
                  ...c !== void 0 && {
                    width: `${c}px`,
                    height: `${c}px`
                  }
                  // Theme colors are now applied via CSS variables from computeCssVarsFromTheme
                },
                "aria-hidden": "true",
                children: l
              }
            )
          }
        )
      }
    );
  }
  // Use default shallow comparison for memoization.
  // The previous custom comparison (prev.active === next.active && prev.isMobile === next.isMobile)
  // was too restrictive and would prevent updates when other props like iconChild, theme, onClick, etc., changed.
  // Default shallow comparison is generally safer unless profiling reveals a specific need for a custom function.
);
hn.displayName = "TimelinePoint";
const vn = (e) => {
  const n = P(null), {
    active: r,
    // Is this item currently highlighted/active?
    alternateCards: i,
    // Layout mode: alternate card sides?
    cardDetailedText: a,
    // Detailed text content for the card
    cardSubtitle: t,
    // Subtitle/main content for the card
    cardTitle: o,
    // Title specifically for the card (distinct from the timeline item title)
    url: l,
    // URL for navigation, potentially used by the card
    className: c,
    // CSS class for the side ('left' or 'right')
    contentDetailsChildren: m,
    // Custom React nodes for card details area
    iconChild: g,
    // Custom React node for the timeline point/icon
    hasFocus: s,
    // Does the card content have focus (e.g., for slideshow)?
    id: u,
    // Unique ID for the item
    media: d,
    // Media element (image/video) for the card
    onActive: h,
    // Callback when item becomes active (e.g., scrolled into view)
    onClick: v,
    // Callback when the item (or point) is clicked
    onElapsed: y,
    // Callback when media finishes playing (if applicable)
    slideShowRunning: b,
    // Is a slideshow currently active?
    title: p,
    // Title for the timeline item itself (often a date or heading)
    visible: _,
    // Is this item currently visible in the viewport?
    timelineContent: R,
    // Custom React nodes for the main timeline content area
    items: M,
    // Data for nested items (if any)
    isNested: S,
    // Is this item part of a nested structure?
    nestedCardHeight: A
    // Specific height for nested cards
  } = e, {
    theme: q,
    mode: k,
    flipLayout: x,
    lineWidth: L,
    cardLess: $,
    classNames: W,
    timelinePointDimension: O,
    disableClickOnCircle: E,
    disableInteraction: w,
    isMobile: z
    // Use responsive detection from context
  } = ce(), C = D(() => i ? z ? "75%" : "37.5%" : p ? z ? "75%" : "85%" : "95%", [i, z, p]), N = D(() => !i && x || c === "left" ? "flex-end" : "flex-start", [i, x, c]), B = D(() => i ? c === "left" ? 1 : 3 : x ? 1 : 3, [i, x, c]), j = D(() => i ? c === "left" ? 3 : 1 : x ? 3 : 1, [i, x, c]), I = D(() => 2, []), V = D(
    (we) => {
      if (n.current && h) {
        const { offsetTop: pe, clientHeight: J } = n.current;
        h(pe + we, pe, J);
      }
    },
    [h]
  ), H = D(() => {
    setTimeout(() => V(0), 100);
  }, [V]), G = T(
    () => ({
      display: !p && k === "VERTICAL" || z && !i ? "none" : "flex",
      width: i ? "37.5%" : "10%",
      // Fix text alignment for alternating mode:
      // - Left side (title appears last): align left
      // - Right side (title appears first): align right
      textAlign: i && c === "left" ? "left" : "right",
      align: x && !i ? "left" : "right"
    }),
    [p, k, i, x, c, z]
  ), te = T(
    () => `${As} ${c} ${x ? "flipped" : ""}`,
    [c, x]
  ), X = T(
    () => /* @__PURE__ */ f(
      "div",
      {
        className: te,
        "data-mode": k,
        style: {
          display: G.display,
          width: G.width,
          order: j(),
          // textAlign: titleConfig.textAlign,
          // Add proper spacing for title
          paddingLeft: i ? "0" : "0.75rem",
          paddingRight: i ? "0" : "0.75rem",
          marginRight: i && c === "right" ? "1rem" : "0",
          marginLeft: i && c === "left" ? "1rem" : "0"
        },
        children: /* @__PURE__ */ f(
          en,
          {
            title: p,
            theme: q,
            align: G.textAlign,
            ...r !== void 0 ? { active: r && !w } : {},
            ...oe({
              classString: W?.title
            })
          }
        )
      }
    ),
    [
      te,
      k,
      G.textAlign,
      p,
      r,
      w,
      W?.title,
      j,
      i,
      c
    ]
  ), se = T(
    () => ie(
      "vertical-item-row",
      { [c]: !!c },
      { visible: _ },
      { "no-alt": !i }
    ),
    [c, _, i]
  ), fe = T(
    () => ie(
      "card-content-wrapper",
      // Base class
      { [c]: !!c },
      // Add 'left' or 'right'
      { visible: _ }
      // Add 'visible' class
    ),
    [c, _]
  ), re = T(
    () => ({
      className: c,
      mode: k,
      onActive: V,
      onClick: v || (() => {
      }),
      isMobile: z,
      ...oe({
        active: r,
        alternateCards: i,
        id: u,
        slideShowRunning: b,
        iconChild: g,
        timelinePointDimension: O,
        lineWidth: L,
        disableClickOnCircle: E,
        cardLess: $
      })
    }),
    [
      r,
      i,
      c,
      u,
      k,
      V,
      v,
      b,
      g,
      O,
      L,
      E,
      $,
      z
    ]
  ), ae = T(
    () => /* @__PURE__ */ f(
      "div",
      {
        style: {
          order: I(),
          display: "flex",
          justifyContent: "center",
          alignItems: "stretch",
          minHeight: "100%",
          width: "10%",
          position: "relative",
          zIndex: -1,
          // Add proper spacing margins
          marginLeft: i ? "1rem" : "0.75rem",
          marginRight: i ? "1rem" : "0.75rem"
        },
        children: /* @__PURE__ */ f(hn, { ...re })
      }
    ),
    [re, I, i]
  ), ue = T(() => !!p && !S, [p, S]), K = T(() => typeof p == "string" ? p : typeof o == "string" ? o : "Timeline item", [p, o]);
  return /* @__PURE__ */ ee(
    "li",
    {
      className: `${Ts({
        visible: _ !== !1,
        alignment: i ? c === "left" ? "left" : "right" : "center",
        alternating: i
      })} ${se} ${S ? xs : ""}`,
      "data-testid": "vertical-item-row",
      "data-item-id": u,
      ref: n,
      "aria-current": r ? "step" : void 0,
      "aria-label": K,
      role: "listitem",
      tabIndex: r ? 0 : -1,
      "aria-selected": r,
      children: [
        ue ? X : null,
        /* @__PURE__ */ f(
          "div",
          {
            className: `${zs} ${fe} ${_ ? Ss : ""}`,
            style: {
              width: C(),
              justifyContent: N(),
              order: B(),
              // Add proper spacing for card content
              paddingLeft: i ? "0" : "0.75rem",
              paddingRight: i ? "0" : "0.75rem",
              marginLeft: i && c === "left" ? "0" : i && c === "right" ? "1rem" : "0",
              marginRight: i && c === "right" ? "0" : i && c === "left" ? "1rem" : "0"
            },
            children: !$ && /* @__PURE__ */ f(
              mn,
              {
                branchDir: c,
                onShowMore: H,
                flip: !i && x,
                ...oe({
                  active: r,
                  content: t,
                  customContent: m,
                  detailedText: a,
                  hasFocus: s,
                  id: u,
                  media: d,
                  onElapsed: y,
                  slideShowActive: b,
                  theme: q,
                  url: l,
                  timelineContent: R,
                  items: M,
                  isNested: S,
                  nestedCardHeight: A,
                  title: o,
                  cardTitle: p
                }),
                ...v && typeof v == "function" ? { onClick: v } : {}
              }
            )
          }
        ),
        S ? null : ae
      ]
    },
    u
  );
};
vn.displayName = "VerticalItem";
const Rt = ge(
  ({
    // Props with default values
    alternateCards: e = !0,
    // Default to alternating card layout on desktop
    // Callbacks and data props
    autoScroll: n,
    // Function to handle automatic scrolling when an item becomes active
    contentDetailsChildren: r,
    // Optional array of custom nodes for each item's card details
    hasFocus: i,
    // Does the timeline component itself have focus? (Passed down)
    iconChildren: a,
    // Optional custom icon(s) for the timeline points
    items: t,
    // Array of timeline item data objects
    mode: o,
    // Timeline mode (e.g., VERTICAL, VERTICAL_ALTERNATING) - Used by children via context?
    onClick: l,
    // Global click handler for items (passed down)
    onElapsed: c,
    // Global handler for media elapsed events (passed down)
    onOutlineSelection: m,
    // Handler for outline selection (potentially unused here, passed down?)
    slideShowRunning: g,
    // Is a slideshow active? (Passed down)
    theme: s,
    // Theme object (Used by children via context)
    cardLess: u,
    // Render without cards? (Passed down)
    nestedCardHeight: d
    // Specific height for nested cards (Passed down)
  }) => {
    const { isMobile: h } = ce(), v = D(
      (b, p, _) => {
        n?.({
          contentHeight: _,
          contentOffset: p,
          pointOffset: b
        });
      },
      [n]
      // Dependency: only recreate if autoScroll function changes
    ), y = T(() => t.map((b, p) => {
      let _ = "";
      e && !h ? _ = p % 2 === 0 ? "left" : "right" : _ = "right";
      const R = (r && Array.isArray(r) && // Ensure it's an array
      r[p]) ?? // Get node at the current index
      null;
      let M = null;
      return Array.isArray(a) ? M = a[p] ?? null : a && (M = a), /* @__PURE__ */ f(
        vn,
        {
          ...b,
          alternateCards: e,
          className: _,
          contentDetailsChildren: R,
          iconChild: M,
          hasFocus: !!i,
          index: p,
          onActive: v,
          onClick: l,
          onElapsed: c || (() => {
          }),
          slideShowRunning: !!g,
          cardLess: !!u,
          nestedCardHeight: d ?? 0
        },
        b.id || p
      );
    }), [
      t,
      h,
      e,
      r,
      a,
      i,
      v,
      l,
      c,
      g,
      u,
      d
    ]);
    return /* @__PURE__ */ f(
      "ul",
      {
        className: Cs,
        "data-testid": "tree-main",
        "data-cardless": u,
        role: "list",
        "aria-label": "Timeline events",
        children: y
      }
    );
  }
);
Rt.displayName = "TimelineVertical";
const Hs = ({
  timelineMode: e,
  activeTimelineItem: n,
  autoScroll: r,
  contentDetailsChildren: i,
  hasFocus: a,
  iconChildren: t,
  items: o,
  handleTimelineItemClick: l,
  handleTimelineItemElapsed: c,
  slideShowRunning: m,
  id: g,
  theme: s,
  lineWidth: u,
  onOutlineSelection: d,
  nestedCardHeight: h
}) => e === "HORIZONTAL" || e === "HORIZONTAL_ALL" ? /* @__PURE__ */ ee(Se, { children: [
  /* @__PURE__ */ f(
    "div",
    {
      className: Si,
      style: {
        backgroundColor: s?.primary,
        height: `${u}px`
      }
    }
  ),
  /* @__PURE__ */ f(
    Rs,
    {
      autoScroll: r,
      contentDetailsChildren: i,
      handleItemClick: l,
      hasFocus: a,
      iconChildren: t,
      items: o,
      mode: e,
      onElapsed: c,
      wrapperId: g,
      nestedCardHeight: h,
      ...oe({
        slideShowRunning: m
      })
    }
  )
] }) : e === "VERTICAL_ALTERNATING" ? /* @__PURE__ */ f(
  Rt,
  {
    activeTimelineItem: n,
    alternateCards: !0,
    autoScroll: r,
    contentDetailsChildren: i,
    hasFocus: a,
    iconChildren: t,
    items: o,
    mode: e,
    onClick: l,
    onElapsed: c,
    onOutlineSelection: d,
    theme: s,
    nestedCardHeight: h,
    ...oe({
      slideShowRunning: m
    })
  }
) : /* @__PURE__ */ f(
  Rt,
  {
    activeTimelineItem: n,
    alternateCards: !1,
    autoScroll: r,
    contentDetailsChildren: i,
    hasFocus: a,
    iconChildren: t,
    items: o,
    mode: e,
    onClick: l,
    onElapsed: c,
    onOutlineSelection: d,
    theme: s,
    nestedCardHeight: h,
    ...oe({
      slideShowRunning: m
    })
  }
), Bs = Q.memo(Hs), gn = (e) => {
  const {
    activeTimelineItem: n,
    contentDetailsChildren: r,
    iconChildren: i,
    items: a = [],
    mode: t,
    onFirst: o,
    onLast: l,
    onNext: c,
    onPrevious: m,
    onRestartSlideshow: g,
    onTimelineUpdated: s,
    onItemSelected: u,
    onOutlineSelection: d,
    slideShowEnabled: h,
    slideShowRunning: v,
    nestedCardHeight: y,
    isChild: b = !1,
    onPaused: p,
    uniqueId: _,
    noUniqueId: R
  } = e, {
    disableNavOnKey: M,
    onScrollEnd: S,
    // Theme context properties
    theme: A,
    isDarkMode: q,
    toggleDarkMode: k,
    // Layout context properties
    mode: x,
    cardHeight: L,
    flipLayout: $,
    itemWidth: W,
    lineWidth: O,
    toolbarPosition: E,
    disableToolbar: w,
    toolbarSearchConfig: z,
    showAllCardsHorizontal: C,
    updateShowAllCardsHorizontal: N,
    updateTextContentDensity: B,
    // Font properties
    googleFonts: j
  } = ce(), [I, V] = Y(!1), [H, G] = Y(!1), [te, X] = Y(!1), [se, fe] = Y(!1), re = P(null), ae = P(null);
  U(() => {
    const Z = () => {
      const ve = document, xe = !!(ve.fullscreenElement || ve.webkitFullscreenElement || ve.mozFullScreenElement || ve.msFullscreenElement);
      fe(xe);
    };
    return document.addEventListener("fullscreenchange", Z), document.addEventListener("webkitfullscreenchange", Z), document.addEventListener("mozfullscreenchange", Z), document.addEventListener("msfullscreenchange", Z), () => {
      document.removeEventListener("fullscreenchange", Z), document.removeEventListener(
        "webkitfullscreenchange",
        Z
      ), document.removeEventListener(
        "mozfullscreenchange",
        Z
      ), document.removeEventListener(
        "msfullscreenchange",
        Z
      ), ae.current && (clearTimeout(ae.current), ae.current = null);
    };
  }, []);
  const ue = T(
    () => `react-chrono-timeline-${R ? _ : et()}`,
    [R, _]
  ), { timelineMode: K, handleTimelineUpdate: we } = so({
    initialMode: t || x,
    // Prioritize prop mode over context mode
    showAllCardsHorizontal: C,
    updateHorizontalAllCards: N
  }), [pe, J] = yi(
    K,
    W
  );
  U(() => {
    K === "HORIZONTAL_ALL" ? N(!0) : K === "HORIZONTAL" && N(!1);
  }, [K, N]);
  const {
    activeItemIndex: me,
    handleTimelineItemClick: ke,
    handleTimelineItemElapsed: qe,
    handleNext: Ae,
    handlePrevious: ze,
    handleFirst: Ce,
    handleLast: He,
    handleKeySelection: Oe,
    syncActiveItemIndex: Le
  } = ao({
    items: a,
    mode: K,
    timelineId: ue,
    hasFocus: I,
    flipLayout: !!$,
    slideShowRunning: !!v,
    isKeyboardNavigation: !!H,
    onTimelineUpdated: s || (() => {
    }),
    onNext: c || (() => {
    }),
    onPrevious: m || (() => {
    }),
    onFirst: o || (() => {
    }),
    onLast: l || (() => {
    })
  }), {
    timelineMainRef: be,
    horizontalContentRef: Te,
    handleScroll: Be,
    handleMainScroll: Ze
  } = co({
    mode: K,
    onScrollEnd: S || (() => {
    }),
    setNewOffset: J,
    onNextItem: Ae,
    onPreviousItem: ze,
    activeItemIndex: me,
    totalItems: a.length,
    isKeyboardNavigation: H
  }), Ie = Q.useCallback(
    (Z, ve) => {
      G(!1), X(!1), ke(Z, ve), Z && requestAnimationFrame(() => {
        const De = document.querySelector(
          `[data-testid="vertical-item-row"][data-item-id="${Z}"]`
        ) || document.getElementById(
          `timeline-card-${Z}`
        );
        try {
          De?.focus?.({ preventScroll: !0 });
        } catch {
        }
      });
    },
    [ke]
  ), Me = Q.useCallback(() => {
    X(!0), G(!1), setTimeout(() => {
      X(!1);
    }, 500), Ae();
  }, [Ae]), he = Q.useCallback(() => {
    X(!0), G(!1), setTimeout(() => {
      X(!1);
    }, 500), ze();
  }, [ze]), Ee = Q.useCallback(() => {
    X(!0), G(!1), setTimeout(() => {
      X(!1);
    }, 500), Ce();
  }, [Ce]), tt = Q.useCallback(() => {
    X(!0), G(!1), setTimeout(() => {
      X(!1);
    }, 500), He();
  }, [He]);
  U(() => {
    n !== void 0 ? n !== me.current && Le(n) : me.current !== -1 && (me.current = -1), n !== void 0 && (K === "HORIZONTAL" || K === "HORIZONTAL_ALL" ? requestAnimationFrame(() => {
      const Z = a[n ?? 0]?.id;
      if (Z) {
        const xe = document.getElementById(
          `timeline-card-${Z}`
        );
        if (xe)
          try {
            xe.focus({ preventScroll: !1 });
            return;
          } catch {
          }
        const De = document.querySelector(
          `button[data-testid="timeline-circle"][data-item-id="${Z}"]`
        );
        if (De)
          try {
            De.focus({ preventScroll: !1 });
            return;
          } catch {
          }
      }
      const ve = be.current;
      ve && ve.focus({ preventScroll: !1 });
    }) : (K === "VERTICAL" || K === "VERTICAL_ALTERNATING") && requestAnimationFrame(() => {
      const Z = a[n ?? 0]?.id;
      if (Z) {
        const xe = document.querySelector(
          `[data-testid="vertical-item-row"][data-item-id="${Z}"]`
        );
        if (xe)
          try {
            xe.focus({ preventScroll: !1 });
            return;
          } catch {
          }
      }
      const ve = be.current;
      ve && ve.focus({ preventScroll: !1 });
    }));
  }, [n, Le, x, be, a]);
  const {
    searchQuery: Ve,
    searchResults: rt,
    currentMatchIndex: Xe,
    searchInputRef: nt,
    handleSearchChange: it,
    clearSearch: at,
    handleNextMatch: ye,
    handlePreviousMatch: ot,
    handleSearchKeyDown: st
  } = to({
    items: T(
      () => a.map((Z) => ({ ...Z, wrapperId: ue })),
      [a, ue]
    ),
    onTimelineUpdated: s || (() => {
    }),
    handleTimelineItemClick: Ie
  });
  wi({
    slideShowRunning: v ?? !1,
    activeTimelineItem: n ?? 0
  }), uo({
    mode: x,
    timelineMainRef: be
  }), T(
    () => ie(x.toLocaleLowerCase(), mr, {
      "focus-visible": !b,
      "js-focus-visible": !b
    }),
    [x, b]
  );
  const lt = T(
    () => !w && !b,
    [b, w]
  ), ct = Q.useCallback(
    (Z) => {
      !M && !v && [
        "ArrowLeft",
        "ArrowRight",
        "ArrowUp",
        "ArrowDown",
        "Home",
        "End"
      ].includes(Z.key) && (V(!0), G(!0), X(!1), Oe(Z), ae.current && clearTimeout(ae.current), ae.current = setTimeout(() => {
        G(!1), ae.current = null;
      }, 400));
    },
    [M, v, Oe]
  ), bt = Q.useCallback(() => {
    v || V(!0);
  }, [v]), Ye = Q.useCallback(
    (Z) => {
      const ve = Z.relatedTarget;
      Z.currentTarget.contains(ve) || V(!1);
    },
    []
  );
  U(() => {
    const Z = a[n ?? 0];
    if (v && (me.current = n ?? 0), !a.length || !Z) return;
    const { title: ve, cardTitle: xe, cardSubtitle: De, cardDetailedText: yt } = Z;
    if (u?.({
      cardDetailedText: yt,
      cardSubtitle: De,
      cardTitle: xe,
      index: n ?? 0,
      title: ve
    }), K === "HORIZONTAL" || K === "HORIZONTAL_ALL") {
      const Re = Te.current?.querySelector(
        `#timeline-card-${Z.id}`
      );
      if (Re && Te.current) {
        const Gt = Re.getBoundingClientRect(), Ut = Te.current.getBoundingClientRect();
        if (Gt && Ut) {
          const { width: wn, left: _n } = Gt, { width: Cn, left: Tn } = Ut;
          requestAnimationFrame(() => {
            const _t = Te.current;
            if (!_t) return;
            _t.style.scrollBehavior = "smooth";
            const xn = _n - Tn + wn / 2 - Cn / 2;
            _t.scrollLeft += xn, Re.focus({ preventScroll: !0 });
          });
        }
      }
      const wt = document.querySelector(
        `button[data-testid="timeline-circle"][data-item-id="${Z.id}"]`
      );
      wt && requestAnimationFrame(() => {
        wt.scrollIntoView && wt.scrollIntoView({
          behavior: "smooth",
          inline: "center",
          block: "nearest"
        });
      });
    } else if (K === "VERTICAL" || K === "VERTICAL_ALTERNATING") {
      const Re = document.querySelector(
        `[data-testid="vertical-item-row"][data-item-id="${Z.id}"]`
      );
      Re && requestAnimationFrame(() => {
        Re.scrollIntoView && Re.scrollIntoView({
          behavior: "smooth",
          block: "center"
        });
      });
    }
  }, [
    n,
    a,
    v,
    x,
    u,
    Te
  ]), U(() => {
    const Z = be.current;
    Z && (K === "HORIZONTAL" ? Z.scrollLeft = Math.max(pe, 0) : Z.scrollTop = pe);
  }, [pe, x, be]);
  const pn = T(() => typeof e.timelineHeight == "number" ? `${e.timelineHeight}px` : e.timelineHeight || "100%", [e.timelineHeight]), bn = T(
    () => gt(A, q),
    [A, q]
  ), yn = T(() => z ? {
    "--timeline-search-width": z.width,
    "--timeline-search-max-width": z.maxWidth,
    "--timeline-search-min-width": z.minWidth,
    "--timeline-search-input-width": z.inputWidth,
    "--timeline-search-input-max-width": z.inputMaxWidth
  } : {}, [z]);
  return /* @__PURE__ */ f(go, { googleFonts: j, children: /* @__PURE__ */ ee(
    "div",
    {
      ref: re,
      onKeyDown: ct,
      onFocus: bt,
      onBlur: Ye,
      className: `timeline-wrapper ${x.toLowerCase()} ${mr({ fullscreen: se })} ${q ? Mr : Or}`,
      style: {
        ...bn,
        ...yn,
        height: pn
      },
      "data-mode": K,
      "data-fullscreen": se,
      "data-keyboard-focus": H,
      "data-toolbar-navigation": te,
      onMouseDown: () => V(!0),
      onKeyUp: (Z) => {
        Z.key === "Escape" && p?.();
      },
      tabIndex: b ? -1 : 0,
      role: "region",
      "aria-label": "Timeline",
      "aria-live": "polite",
      "aria-atomic": "false",
      children: [
        lt && /* @__PURE__ */ f(
          "div",
          {
            className: Ai({
              position: E,
              sticky: !!e.stickyToolbar
            }),
            children: /* @__PURE__ */ f(
              Ya,
              {
                activeTimelineItem: n ?? 0,
                totalItems: a.length,
                slideShowEnabled: !!h,
                slideShowRunning: !!v,
                onFirst: Ee,
                onLast: tt,
                onNext: Me,
                onPrevious: he,
                onRestartSlideshow: g || (() => {
                }),
                darkMode: q,
                toggleDarkMode: k,
                onPaused: p || (() => {
                }),
                id: ue,
                flipLayout: !!$,
                items: a,
                onActivateTimelineItem: Ie,
                onUpdateTimelineMode: we,
                onUpdateTextContentDensity: B,
                mode: K,
                searchQuery: Ve,
                onSearchChange: it,
                onClearSearch: at,
                onNextMatch: ye,
                onPreviousMatch: ot,
                totalMatches: rt.length,
                currentMatchIndex: Xe,
                onSearchKeyDown: st,
                searchInputRef: nt,
                timelineRef: re,
                onEnterFullscreen: () => {
                  fe(!0);
                },
                onExitFullscreen: () => {
                  fe(!1);
                },
                onFullscreenError: (Z) => {
                  fe(!1);
                },
                stickyToolbar: e.stickyToolbar ?? !1
              }
            )
          }
        ),
        /* @__PURE__ */ f(
          "div",
          {
            ref: be,
            className: `timeline-main-wrapper ${K.toLowerCase()} ${ki(
              {
                mode: K === "VERTICAL" ? "vertical" : K === "VERTICAL_ALTERNATING" ? "alternating" : K === "HORIZONTAL_ALL" ? "horizontalAll" : "horizontal"
              }
            )}`,
            id: "timeline-main-wrapper",
            "data-testid": "timeline-main-wrapper",
            onScroll: Ze,
            children: /* @__PURE__ */ f(
              Bs,
              {
                timelineMode: K,
                activeTimelineItem: n ?? 0,
                autoScroll: Be,
                contentDetailsChildren: r,
                hasFocus: I,
                iconChildren: i,
                items: a,
                handleTimelineItemClick: Ie,
                handleTimelineItemElapsed: qe,
                slideShowRunning: !!v,
                id: ue,
                theme: A,
                lineWidth: O,
                onOutlineSelection: d || (() => {
                }),
                nestedCardHeight: y ?? 0
              }
            )
          }
        ),
        (K === "HORIZONTAL" || K === "HORIZONTAL_ALL") && /* @__PURE__ */ f(
          "div",
          {
            id: ue,
            ref: Te,
            className: `timeline-content-render ${zi({
              mode: K === "HORIZONTAL_ALL" ? "horizontalAll" : "horizontal"
            })}`,
            style: {
              // Pass card height as CSS variable for dynamic height calculation
              "--card-height": `${L || 350}px`
            }
          }
        )
      ]
    }
  ) });
};
gn.displayName = "Timeline";
const Vs = Q.memo(gn);
var Ps = "vr0hqx0", Ws = "vr0hqx1", js = "vr0hqx2", Gs = "vr0hqx3";
class Us extends In {
  constructor(n) {
    super(n), this.state = { hasError: !1, error: null };
  }
  static getDerivedStateFromError(n) {
    return { hasError: !0, error: n };
  }
  componentDidCatch(n, r) {
    console.error("Timeline Error:", n, r), this.props.onError && this.props.onError(n, r);
  }
  handleReset = () => {
    this.setState({ hasError: !1, error: null });
  };
  render() {
    return this.state.hasError ? this.props.fallback ? /* @__PURE__ */ f(Se, { children: this.props.fallback }) : /* @__PURE__ */ ee("div", { className: Ps, children: [
      /* @__PURE__ */ f("h2", { className: Ws, children: "Something went wrong" }),
      /* @__PURE__ */ f("p", { className: js, children: this.state.error?.message || "An unexpected error occurred in the timeline component." }),
      /* @__PURE__ */ f(
        "button",
        {
          className: Gs,
          onClick: this.handleReset,
          type: "button",
          children: "Try Again"
        }
      )
    ] }) : this.props.children;
  }
}
const Tr = Q.Children.toArray;
function xr(e) {
  return oe({
    // Core props
    items: e.items,
    children: e.children,
    theme: e.theme,
    activeItemIndex: e.activeItemIndex,
    allowDynamicUpdate: e.allowDynamicUpdate,
    uniqueId: e.id,
    onItemSelected: e.onItemSelected ? (n) => {
      if ("item" in n)
        e.onItemSelected(n);
      else {
        const { index: r, ...i } = n;
        e.onItemSelected({ item: i, index: r });
      }
    } : void 0,
    onScrollEnd: e.onScrollEnd,
    onThemeChange: e.onThemeChange,
    onRestartSlideshow: e.onRestartSlideshow,
    // Mode conversion
    mode: Ft(e.mode),
    // Layout props
    cardWidth: e.layout?.cardWidth,
    cardHeight: e.layout?.cardHeight,
    timelinePointDimension: e.layout?.pointSize,
    lineWidth: e.layout?.lineWidth,
    itemWidth: e.layout?.itemWidth,
    timelineHeight: e.layout?.timelineHeight,
    responsiveBreakPoint: e.layout?.responsive?.breakpoint,
    enableBreakPoint: e.layout?.responsive?.enabled,
    cardPositionHorizontal: Ks(
      e.layout?.positioning?.cardPosition
    ),
    flipLayout: e.layout?.positioning?.flipLayout,
    // Interaction props
    disableNavOnKey: e.interaction?.keyboardNavigation === !1 ? !0 : void 0,
    disableClickOnCircle: e.interaction?.pointClick === !1 ? !0 : void 0,
    disableAutoScrollOnClick: e.interaction?.autoScroll === !1 ? !0 : void 0,
    focusActiveItemOnLoad: e.interaction?.focusOnLoad,
    highlightCardsOnHover: e.interaction?.cardHover,
    disableInteraction: e.interaction?.disabled,
    // Content props
    parseDetailsAsHTML: e.content?.allowHTML,
    useReadMore: e.content?.readMore,
    textOverlay: e.content?.textOverlay,
    titleDateFormat: e.content?.dateFormat,
    textDensity: e.content?.compactText ? "LOW" : "HIGH",
    semanticTags: e.content?.semanticTags ? oe({
      cardTitle: e.content.semanticTags.title,
      cardSubtitle: e.content.semanticTags.subtitle
    }) : void 0,
    // Display props
    borderLessCards: e.display?.borderless,
    cardLess: e.display?.cardsDisabled,
    disableTimelinePoint: e.display?.pointsDisabled,
    timelinePointShape: e.display?.pointShape,
    showAllCardsHorizontal: e.display?.allCardsVisible,
    disableToolbar: e.display?.toolbar?.enabled === !1 ? !0 : void 0,
    toolbarPosition: e.display?.toolbar?.position,
    toolbarSearchConfig: e.display?.toolbar?.search,
    scrollable: e.display?.scrollable,
    // Media props
    mediaHeight: e.media?.height,
    mediaSettings: e.media ? oe({
      align: e.media?.align,
      fit: e.media?.fit
    }) : void 0,
    // Animation props
    slideShow: e.animation?.slideshow?.enabled,
    slideItemDuration: e.animation?.slideshow?.duration,
    slideShowType: Zs(
      e.animation?.slideshow?.type
    ),
    showProgressOnSlideshow: e.animation?.slideshow?.showProgress,
    showOverallSlideshowProgress: e.animation?.slideshow?.showOverallProgress,
    // Style props
    classNames: e.style?.classNames,
    fontSizes: e.style?.fontSizes,
    googleFonts: e.style?.googleFonts,
    // Accessibility props
    buttonTexts: e.accessibility?.buttonTexts,
    // i18n props
    i18nConfig: e.i18n?.texts,
    // Dark mode
    darkMode: e.darkMode?.enabled,
    enableDarkToggle: e.darkMode?.showToggle
  });
}
function Ft(e) {
  switch (e) {
    case "horizontal":
      return "HORIZONTAL";
    case "vertical":
      return "VERTICAL";
    case "alternating":
      return "VERTICAL_ALTERNATING";
    case "horizontal-all":
      return "HORIZONTAL_ALL";
    default:
      return "VERTICAL_ALTERNATING";
  }
}
function Ks(e) {
  switch (e) {
    case "top":
      return "TOP";
    case "bottom":
      return "BOTTOM";
    default:
      return;
  }
}
function Zs(e) {
  switch (e) {
    case "reveal":
      return "reveal";
    case "slide":
      return "slide_in";
    case "fade":
      return "slide_from_sides";
    default:
      return;
  }
}
const Xs = (e) => {
  const n = T(() => "layout" in e || "interaction" in e || "content" in e || "display" in e || "media" in e || "animation" in e ? e : (process.env.NODE_ENV === "development" && Nn(e), En(e)), [e]);
  if (process.env.NODE_ENV === "development") {
    const I = xr(n), V = ai(I);
    V.success || console.warn(
      "Timeline props validation warnings:",
      V.errors.map((H) => `${H.path.join(".")}: ${H.message}`).join(", ")
    );
  }
  const {
    allowDynamicUpdate: r = !1,
    children: i,
    items: a = [],
    onScrollEnd: t,
    activeItemIndex: o,
    mode: l = "alternating",
    content: c,
    animation: m
  } = n, g = m?.slideshow?.enabled || !1, s = m?.slideshow?.duration || 2e3, u = c?.dateFormat || "MMM DD, YYYY", [d, h] = Y([]), v = P([]), [y, b] = Y(!1), [p, _] = Y(
    o !== void 0 ? o : l === "vertical" || l === "alternating" ? void 0 : 0
  ), R = P(o), M = P(""), S = P([]), A = D(
    (I) => {
      if (I?.length)
        return I.map((H, G) => {
          const te = et(), X = !!H.items?.length;
          return {
            ...H,
            _dayjs: At(H.date),
            active: o !== void 0 && G === o,
            id: te,
            hasNestedItems: X,
            items: H.items?.map((se) => ({
              ...se,
              _dayjs: At(se.date),
              id: et(),
              isNested: !0,
              visible: !0
            })) || [],
            title: H.date ? At(H.date).format(u) : H.title,
            visible: !0
          };
        });
      const V = Q.Children.toArray(i).filter(
        (H) => H.props.className !== "chrono-icons"
      ).length;
      return Array.from({ length: V }).map((H, G) => ({
        active: G === o,
        id: et(),
        visible: !0
      }));
    },
    [o, u, i]
  ), q = D(
    (I) => {
      if (I) {
        const V = d.length;
        return I.map((H, G) => ({
          ...H,
          active: G === V,
          visible: !0
        }));
      } else
        return [];
    },
    [d.length]
  ), k = D((I) => I?.length ? I.map((V) => {
    const H = V.id || "", G = V.date || "", te = V.title || "", X = V.cardTitle || "";
    return `${H}:${G}:${te}:${X}`;
  }).join("|") : "", []);
  U(() => {
    const I = a?.filter((X) => X);
    let V = [];
    if (!I?.length) {
      const X = A();
      h(X);
      return;
    }
    const H = k(I);
    if (!r && H === M.current)
      return;
    M.current = H;
    const G = d.length, te = d.length && I.length > d.length;
    te ? V = q(I) : I.length && (V = A(I)), V.length && (v.current = V, h(V), te && r && G > 0 ? p == null && _(G) : _(o !== void 0 ? o : l === "vertical" || l === "alternating" ? void 0 : 0), S.current = V);
  }, [
    a,
    r,
    d.length,
    A,
    q,
    k
  ]);
  const x = D(
    (I) => {
      h(
        (V) => V.map((H, G) => ({
          ...H,
          active: G === I,
          // Always keep horizontal items visible so points are always shown
          visible: !0
        }))
      ), _(I), a && a.length - 1 === I && b(!1);
    },
    [a, l]
  );
  U(() => {
    o !== R.current && (R.current = o, o !== void 0 && x(o));
  }, [o, x]);
  const L = D(() => {
    x(-1), setTimeout(() => {
      b(!0), x(0);
    }, 0);
  }, [x]);
  U(() => {
    g || b(!1);
  }, [g]);
  const $ = D(() => {
    if (d.length && p !== void 0 && p < d.length - 1) {
      const I = p + 1;
      x(I), _(I), Ft(l) === "HORIZONTAL" && y && a && a.length - 1 === I && b(!1);
    }
  }, [
    d.length,
    p,
    x,
    l,
    y,
    a
  ]), W = D(() => {
    if (p !== void 0 && p > 0) {
      const I = p - 1;
      x(I), _(I);
    }
  }, [p, x]), O = D(() => {
    _(0), x(0);
  }, [x]), E = D(() => {
    if (d.length) {
      const I = d.length - 1;
      _(I), x(I);
    }
  }, [d.length, x]), w = D(
    (I) => {
      I >= 0 && (_(I), x(I));
    },
    [x]
  ), z = D(() => {
    b(!1);
  }, []), C = T(() => {
    let I = Tr(i).filter(
      (V) => V && V.props && V.props.className === "chrono-icons"
    );
    return I.length ? I[0].props.children : I;
  }, [i]), N = T(() => Tr(i).filter(
    (I) => I && I.props && I.props.className !== "chrono-icons"
  ), [i]), B = T(() => {
    const I = n.theme;
    return I?.timelineBgColor === "#000000" || I?.cardBgColor === "#1f2937" || I?.textColor === "#ffffff" || I?.textColor === "#f9fafb";
  }, [n.theme]), j = T(() => xr(n), [n]);
  return /* @__PURE__ */ f(Us, { children: /* @__PURE__ */ f(vi, { ...j, children: /* @__PURE__ */ f(
    "div",
    {
      className: B ? Mr : Or,
      style: { ...gt(n.theme), width: "100%" },
      id: "testette",
      children: /* @__PURE__ */ f(
        Vs,
        {
          activeTimelineItem: p || 0,
          contentDetailsChildren: N,
          iconChildren: C,
          items: d,
          onFirst: O,
          onLast: E,
          onNext: $,
          onPrevious: W,
          onRestartSlideshow: L,
          onTimelineUpdated: x,
          slideShow: g,
          slideShowEnabled: g,
          slideShowRunning: y,
          slideItemDuration: s,
          ...oe({
            onScrollEnd: t,
            onItemSelected: j.onItemSelected
          }),
          onOutlineSelection: w,
          mode: Ft(l),
          onPaused: z
        }
      )
    }
  ) }) });
}, el = Q.memo(Xs);
export {
  el as Chrono
};
//# sourceMappingURL=index.esm.js.map
